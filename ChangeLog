March 29 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* Char.pcx: mega-large mammoth added by Kahvi
	* Item.pcx: tiny and mega-large corpses added by Kahvi

2002-03-29 Heikki Sairanen <heikki.sairanen@phpoint.net>

	* Main/Include/itemde.h: Added mine.
	* Main/Source/itemde.cpp: Added functions for mine
	* Main/Source/lsquare.cpp: Added a if clause for flying creatures in StepOn function. 	

2002-03-25  Heikki Sairanen  <heikki.sairanen@phpoint.net>

	* Main/Include/lterraba.h: Added function CreateBoobyTrap that is really an empty function

	* Main/Include/lterrade.h: Added function CreateBoobyTrap in door, which is actually used and functions CreateBoobyTrap, ActivateBoobyTrap (also to door)

	* Main/Include/script.h (constructor... probably): Added support for AllowBoobyTraps

	* Main/Source/script.cpp: Added support for AllowBoobyTraps

	* Main/Source/itemde.cpp: Reduced randomness in wandoffireballs

	* Main/Source/level.cpp: Boobytraps are now generated one per 5 locked doors

	* Script/dungeon.dat: Added parameter AllowBoobyTraps to both dungeon and Attnam.

2002-03-23  Heikki Sairanen  <hex@localhost.localdomain>

	* Main/Include/charde.h: Changed ivan class to communist and assigned it the name "Ivan". Also changed Elpuri, Oree and Petrus to get their _name_ from AssignedName
	* Main/Source/charba.cpp: character::Save Changed to save AssignedName
	
	* Main/Include/charba.h (class character): Added functions   Name(), Article() Adjective(), ShowClassName(), CanBeAssignedAName(). For the AssignedNames

	* Main/Source/game.cpp: Added the function key to character's AssignName

	* Main/Source/charba.cpp (AssignName): Function added
	
	* Main/Source/game.cpp (PositionQuestion): Function added.
	
2002-03-22  Heikki Sairanen  <hex@localhost.localdomain>

	* Main/Source/charba.cpp (Look): Deleted odd GetIsPlayer() test

2002-03-22  Heikki Sairanen  <heikki.sairanen@phpoint.net>

	* FELL/Include/felist.h (class felist): DrawDescription moved to .cpp to correct an odd Linux bug.
	* FELL/Source/felist.cpp:

March 22 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* Humanoid.pcx: Some humanoids dismembered by Kahvi

March 21 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* GetHitValue() of material and GetArmorValue() of material and item replaced by StrengthValue()
	  * Modified files:
	    * stack.cpp
	    * itemba.cpp
	      * ushort item::StrengthValue() const added
	    * itemde.cpp
	      * ushort bodypart::StrengthValue() const added
	    * charba.cpp
	    * charde.cpp
	    * materba.h
	      * ushort material::GetHitValue() const removed
	      * ushort material::GetArmorValue() const removed
	      * ushort material::StrengthValue() const added
	    * materde.h
	      * Numerous ushort xxx::GetHitValue() consts removed
	      * Numerous ushort xxx::GetArmorValue() consts removed
	      * Numerous ushort xxx::StrengthValue() consts added
	    * itemba.h
	      * uchar item::SurfaceMaterial() const added
	    * itemde.h
	      * Some ushort xxx::GetArmorValue() consts removed
	* Master data member added to bodypart
	  * Modified files:
		* itemde.cpp
	    * itemde.h
	      * character* bodypart::GetMaster() const 
	      * void bodypart::SetMaster(character* What)
	* StrengthModifier attributes added to items
	  * Modified files:
		* itemba.cpp
	    * itemba.h
	      * ushort item::StrengthModifier() const added
		* itemde.cpp
	    * itemde.h
	      * Numerous ushort xxx::StrengthModifier() const added
	* IsAlive() attributes added to materials
	  * Modified files:
	    * itemde.cpp
	    * materba.h
	      * bool material::IsAlive() consts added
	    * materde.h
	      * Numerous bool xxx::IsAlive() consts added
	* Secret knowledge command partially added
	  * Modified files:
	    * game.cpp
	    * charba.h
	    * charba.cpp
	      * bool character::SecretKnowledge() added
	    * itemba.h
	      * bool item::AutoInitializable() const added
	    * itemde.h
	      * bool bodypart::AutoInitializable() const added

March 17 2002 Heikki Sairanen <heikki.sairanen@phpoint.net>

	 * Graphics/Makefile.am: Human.pcx changed to Humanoid.pcx

March 16 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* charde.h: Bodypart color tweaks

March 16 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* New bodypart: groin
	  * Modified files:
	    * charde.cpp
	      * ulong humanoid::GroinVolume() const added
	      * void humanoid::CreateGroin() added
	      * groin* humanoid::GetGroin() const added
	      * void humanoid::SetGroin(groin* What) added
	    * itemde.h
	      * New class: groin
	* Added SpecialType to graphicid. Arms, legs and groin are no more drawn multiple times.
	  * Modified files:
	    * worldmap.cpp
	    * object.cpp
	    * object.h
	    * igraph.cpp
	    * igraph.h
	      * Some SpecialType definitions added
	      * graphicid and handling functions updated
	    * charde.cpp
	      * return type of leftarm* humanoid::GetRightArm(), rightarm* humanoid::GetLeftArm(), rightleg* humanoid::GetRightLeg() and leftleg* humanoid::GetLeftLeg() changed
	      * parameter type of humanoid::SetRightArm(rightarm* What), void humanoid::SetLeftArm(leftarm* What), void humanoid::SetRightLeg(rightleg* What) and void humanoid::SetLeftLeg(leftleg* What) changed
	    * itemde.h
	      * arm and leg are now abstract
	      * New classes: rightarm, leftarm, rightleg, leftleg
	      * virtual uchar xxx::GetSpecialType() consts overrided in rightarm, leftarm, groin, rightleg, leftleg
	* Dwarf legs are now drawn correctly
	  * Modified files:
	    * itemba.cpp
	      * void item::DrawToTileBuffer(vector2d Pos) const added
	    * itemba.h
	    * charde.cpp
	      * void dwarf::DrawToTileBuffer() const added
	* Werewolves are now drawn correctly
	  * Modified files:
	    * charde.cpp
	      * void humanoid::UpdateBodyPartPictures(bool CallUpdatePicture) added
	      * void humanoid::UpdateHeadPicture(bool CallUpdatePicture) added
	      * void humanoid::UpdateTorsoPicture(bool CallUpdatePicture) added
	      * void humanoid::UpdateRightArmPicture(bool CallUpdatePicture) added
	      * void humanoid::UpdateLeftArmPicture(bool CallUpdatePicture) added
	      * void humanoid::UpdateGroinPicture(bool CallUpdatePicture) added
	      * void humanoid::UpdateRightLegPicture(bool CallUpdatePicture) added
	      * void humanoid::UpdateLeftLegPicture(bool CallUpdatePicture) added
	    * charde.h
	* charde.cpp: Bug in void humanoid::SetSize(ushort Size) fixed
	* charde.h: Bodypart color tweaks
	* lsquare.cpp: Extremely rare fatal bug in lsquare::CalculateEmitation() fixed

March 15 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* charde.h: Bodypart color tweaks
	* Humanoid.pcx: Material color tweaks by Kahvi

March 14 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* charde.h: Bodypart color tweaks

March 14 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* bitmap.cpp: Added bool DrawSides parameter for bitmap::DrawPolygon

March 14 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* Material colors added to humanoid bodyparts. All humanoids are now very ugly.
	  * Modified files:
	    * Human.pcx: renamed as Humanoid.pcx and converted to material colors by Kahvi
	    * object.cpp:
	      * ushort object::GetMaterialColor0() const added
	      * ushort object::GetMaterialColor1() const added
	      * ushort object::GetMaterialColor2() const added
	      * ushort object::GetMaterialColor3() const added
	      * Added argument for void object::UpdatePicture(bool RemoveOld), which determines whether old pic will be removed. The func now updates GraphicId based on the preceding functions.
	    * object.h:
	      * void object::ColorChangeSpeciality(uchar, bool) removed
	    * lterrain.h:
	      * void stairsdown::ColorChangeSpeciality(uchar, bool) removed
	      * ushort stairsdown::GetMaterialColor1() const added
	      * void stairsup::ColorChangeSpeciality(uchar, bool) removed
	      * ushort stairsup::GetMaterialColor1() const added
	    * itemde.cpp:
	      * void potion::ColorChangeSpeciality(uchar Index, bool EmptyMaterial) removed
	      * void bodypart::Save(outputfile& SaveFile) const modified so that Colors are saved
	      * void bodypart::Load(inputfile& SaveFile) const modified so that Colors are loaded
	      * void torso::Save(outputfile& SaveFile) const removed
	      * void torso::Load(inputfile& SaveFile) const removed
	    * itemde.h:
	      * torso divided into two childs classes: normaltorso and humanoidtorso
	      * void bodypart::SetColor(ushort Index, ushort What) added
	      * ushort xxx::GetMaterialColorxxx() const funcs added here and there
	    * igraph.h:
	      * humanoid is now raw type
	    * charde.cpp:
	      * All references to complexhumanoid removed
	      * void humanoid::CreateTorso() added
	      * All void humanoid::Create<some bodypart>() functions modified to init bodypart colors
	      * void humanoid::DrawToTileBuffer() const added
	    * charde.h:
	      * All references to complexhumanoid removed
	      * All SetLegType(xxx) and similiar function calls removed from SetDefaultStatses
	      * uchar xxx::GetHeadType() const added to humanoid and all children
	      * uchar xxx::GetTorsoType() const added to humanoid and all children
	      * uchar humanoid::GetRightArmType() const added
	      * uchar humanoid::GetLeftArmType() const added
	      * uchar xxx::GetArmType() const added to humanoid and all children
	      * uchar humanoid::GetRightLegType() added
	      * uchar humanoid::GetLeftLegType() added
	      * uchar xxx::GetLegType() const added to humanoid and all children
	      * ushort humanoid::SkinColor() const added
	      * ushort humanoid::CapColor() const added
	      * ushort humanoid::HairColor() const  added
	      * ushort humanoid::HeadSpecialColor() const added
	      * ushort humanoid::TorsoMainColor() const added
	      * ushort humanoid::BeltColor() const added
	      * ushort humanoid::TorsoSpecialColor() const added
	      * ushort humanoid::ArmMainColor() const added
	      * ushort humanoid::ArmSpecialColor() const added
	      * ushort humanoid::LegMainColor() const added
	      * ushort humanoid::LegSpecialColor() const added
	    * charba.cpp:
	      * Removed argument from void character::CreateTorso(bool Humanoid) and modified it to init torso color
	    * charba.h:
	      * AllocBodyParts added as the fourth character constructor parameter
	      * void character::AllocateBodyPartArray() added
	* Ergonomic FeFile modifications:
	  * save.cpp:
	    * Fast-to-use long inputfile::ReadNumber() added (affect also config.cpp)
	  * save.h:
	    * typedef std::map<std::string, long> valuemap added (affects also script.h)
	* godba.cpp: Fatal bug in god::Save and god::Load corrected
	* IvanEdit removed from CVS
	* LTerrain.pcx: desert, swamp, snow base terrains, three stunt trees, two rocks and boghole added by Kahvi

March 10 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* gccblit.s: added alternative gcc asm func names with only one lowline

Friday, March 08 2002 Heikki Sairanen <heikki.sairanen@phpoint.net> 
	(however all changes actually coded by Mark Schreiber)

	* FeDX/Source/graphics.cpp: ToggleFullScreen for USE_SDL added, 
	* FeWin/Source/whandler.cpp: Function globalwindowhandler::ProcessMessage() funcion for SDL changed to call ToggeFullScreen when alt + enter pressed

March 07 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* itemde.cpp: Two unused parameter warnings corrected
	* lterrade.cpp: Two unused parameter warnings corrected
	* entity.cpp: Two unused parameter warnings corrected
	* ivandj.mak: Added reference to new files
	* ivanmgw.mak: Added reference to new files

March 07 2002 Timo Kiviluoto <sonor@phpoint.fi>

	* Unit class added
	  * This class holds materials. It is derived from entity and is base for object and fluid.
	  * Modified files:
	    * object.cpp
	    * object.h
	    * fluid.cpp
	    * fluid.h
	    * entity.cpp
	      * see unit.cpp
	    * entity.h
	      * see unit.h
	  * Added files:
	    * unit.cpp
	      * unit::unit(bool AddToPool, bool HasBe) added
	      * unit::~unit() added
	      * void unit::Save(outputfile& SaveFile) const added
	      * void unit::Load(inputfile& SaveFile) added
	      * ushort unit::GetEmitation() const moved here from entity.cpp
	      * void unit::PreserveMaterial(ushort Index) moved here from entity.cpp
	      * material* unit::GetMaterial(ushort Index) const moved here from entity.cpp
	      * ushort unit::GetMaterials() const moved here from entity.cpp
	    * unit.h
	      * material* unit::GetMaterial(ushort) const moved here from entity.h
	      * ushort unit::GetEmitation() const moved here from entity.h
	      * ushort unit::GetMaterials() const moved here from entity.h
	      * bitmap* unit::GetPicture() const moved here from entity.h
	      * void unit::PreserveMaterial(ushort) moved here from entity.h
	* Bodyparts added
	  * These are stored as an array of items in character, although they can't be severed yet :(
	  * Character is not a unit and so contains materials no more; use bodypart materials from here on.
	  * Modified files:
	    * itemde.cpp
	      * void bodypart::Save(outputfile& SaveFile) const added
	      * void bodypart::Load(inputfile& SaveFile) added
	      * void torso::Save(outputfile& SaveFile) const added
	      * void torso::Load(inputfile& SaveFile) added
	    * itemde.h
	      * bodypart abstract class added
	      * head class changed to bodypart child
	      * torso class added
	      * arm class added
	      * leg class added
	    * charba.cpp
	      * void character::CreateBodyParts() added
	      * material* character::CreateTorsoBone(ulong Volume) const added
	      * void character::SetSize(ushort Size) added (this sets torso size)
	      * ushort character::GetSize() const added
	      * void character::CreateTorso(bool Humanoid) added
	      * torso* character::GetTorso() const added
	      * void character::SetTorso(torso* What) added
	      * void character::SetMaterial(uchar Index, material* NewMaterial) added (this sets bodypart materials)
	    * charba.h
	      * see charba.cpp
	      * character's base class changed to type + entity
	      * bodypart* GetBodyPart(ushort Index) const added
	      * void SetBodyPart(ushort Index, bodypart* What) added
	      * uchar TorsoBonePercentile() const added
	      * ulong TorsoVolume() const added
	      * material* CreateTorsoFlesh(ulong) const = 0 added
	      * ulong TotalVolume() const = 0 added (used by create functions to calculate bodypart volumes)
	      * uchar BodyParts() const added
	      * vector2d GetBitmapPos() const = 0 temporarily added
	      * macro modifications, see charde.h
	    * charde.cpp
	      * void humanoid::SetSize(ushort Size) added (this sets bodypart sizes)
	      * ushort humanoid::GetSize() const added (this calculates humanoid size based on bodypart sizes)
	      * ulong humanoid::HeadVolume() const added (this and following are used only during construction)
	      * ulong humanoid::TorsoVolume() const added
	      * ulong humanoid::ArmVolume() const added
	      * ulong humanoid::LegVolume() const added
	      * void humanoid::CreateBodyParts() added
	      * void humanoid::CreateHead() added
	      * void humanoid::CreateRightArm() added
	      * void humanoid::CreateLeftArm() added
	      * void humanoid::CreateRightLeg() added
	      * void humanoid::CreateLeftLeg() added
	      * head* humanoid::GetHead() const added
	      * void humanoid::SetHead(head* What) added
	      * arm* humanoid::GetRightArm() const added
	      * void humanoid::SetRightArm(arm* What) added
	      * arm* humanoid::GetLeftArm() const added
	      * void humanoid::SetLeftArm(arm* What) added
	      * leg* humanoid::GetRightLeg() const added
	      * void humanoid::SetRightLeg(leg* What) added
	      * leg* humanoid::GetLeftLeg() added
	      * void humanoid::SetLeftLeg(leg* What) added
	    * charde.h
	      * see charde.cpp
	      * material* humanoid::CreateHeadFlesh(ulong Volume) const added
	      * material* humanoid::CreateHeadBone(ulong Volume) const added
	      * material* humanoid::CreateRightArmFlesh(ulong Volume) const added
	      * material* humanoid::CreateRightArmBone(ulong Volume) const added
	      * material* humanoid::CreateLeftArmFlesh(ulong Volume) const added
	      * material* humanoid::CreateLeftArmBone(ulong Volume) const added
	      * material* humanoid::CreateArmFlesh(ulong Volume) const added
	      * material* humanoid::CreateArmBone(ulong Volume) const added
	      * material* humanoid::CreateRightLegFlesh(ulong Volume) const added
	      * material* humanoid::CreateRightLegBone(ulong Volume) const added
	      * material* humanoid::CreateLeftLegFlesh(ulong Volume) const added
	      * material* humanoid::CreateLeftLegBone(ulong Volume) const added
	      * material* humanoid::CreateLegFlesh(ulong Volume) const added
	      * material* humanoid::CreateLegBone(ulong Volume) const added
	      * material* humanoid::CreateTorsoFlesh(ulong Volume) const added
	      * uchar humanoid::HeadBonePercentile() const added
	      * uchar humanoid::TorsoBonePercentile() const added
	      * uchar humanoid::RightArmBonePercentile() const added
	      * uchar humanoid::LeftArmBonePercentile() const added
	      * uchar humanoid::ArmBonePercentile() const added
	      * uchar humanoid::RightLegBonePercentile() const added
	      * uchar humanoid::LeftLegBonePercentile() const added
	      * uchar humanoid::LegBonePercentile() const added
	      * ulong humanoid::RightArmVolume() const added
	      * ulong humanoid::LeftArmVolume() const added
	      * ulong humanoid::RightLegVolume() const added
	      * ulong humanoid::LeftLegVolume() const added
	      * uchar humanoid::BodyParts() const added
	      * nearly infinite amount of ulong xxx::GetDefaultVolume(ushort Index) consts removed
	      * equally many respective ulong xxx:TotalVolume() consts added
	      * InitMaterials line removed from macro and class definitions
	      * nearly infinite amound of material* xxx::CreateTorsoFlesh(ulong Volume) consts added
	* Gods prototyped
	  * They now are derived from type and use the same macro system as characters, items etc.
	  * Modified files:
	    * game.cpp
	      * void game::CreateGods() added
	    * game.h
	      * void game::SetGodNumber(uchar What) removed
	      * uchar game::GetGodNumber() removed
	      * uchar game::GetGods() added (note: this returns former GetGodNumber() + 1)
	  * Removed files:
	    * god.cpp
	    * god.h
	  * Added files:
	    * godba.cpp
	    * godba.h
	      * these files are reserved for base god layer routines
	    * godde.cpp
	    * godde.h
	      * these files are reserved for derived gods' routines
	* Routine transportation
	  * Some name routines moved temporarily from object to entity to make them available to the non-object character class
	  * Routines:
	    * std::string Name(uchar Case) const
	    * std::string GetNameSingular() const
	    * std::string GetNamePlural() const
	    * std::string NameSingular() const
	    * std::string NamePlural() const
	    * std::string object::NameNormal(uchar Case, std::string Article, std::string Adjective) const
	    * std::string object::NameProperNoun(uchar Case) const
	  * Modified files:
	    * object.cpp
	    * object.h
	    * entity.cpp
	    * entity.h
	* Name changes
	  * Modifications:
	    * typeable -> type
	    * levelsquare -> lsquare
	    * worldmapsquare -> wsquare
	    * groundterrain -> gterrain
	    * overterrain -> oterrain
	    * levelterrain -> lterrain
	    * worldmapterrain -> wterrain
	    * groundlevelterrain -> glterrain
	    * overlevelterrain -> olterrain
	    * groundworldmapterrain -> gwterrain
	    * overworldmapterrain -> owterrain
	    * partially capitalized and fully capitalized versions of the preceding
	    * changed igraph.h's graphics file #define prefixes from G to GR (e.g. GLTERRAIN -> GRLTERRAIN)
	  * Modified files:
	    * wterraba.cpp
	    * wterraba.h
	    * wterrade.cpp
	    * wterrade.h
	    * wsquare.cpp
	    * wsquare.h
	    * worldmap.cpp
	    * worldmap.h
	    * terra.cpp
	    * terra.h
	    * stack.cpp
	    * stack.h
	    * square.cpp
	    * square.h
	    * script.cpp
	    * script.h
	    * roomba.cpp
	    * roomba.h
	    * roomde.cpp
	    * roomde.h
	    * materba.cpp
	    * materba.h
	    * materde.cpp
	    * lterraba.cpp
	    * lterraba.h
	    * lterrade.cpp
	    * lterrade.h
	    * level.cpp
	    * level.h
	    * itemba.cpp
	    * itemba.h
	    * itemde.cpp
	    * itemde.h
	    * igraph.h
	    * game.cpp
	    * entity.cpp
	    * entity.h
	    * cont.cpp
	    * cont.h
	    * charba.cpp
	    * charba.h
	    * charde.cpp
	    * dungeon.dat
	  * Removed files:
	    * typeable.cpp
	    * typeable.h
	  * Added files:
	    * type.cpp
	    * type.h
	* EntityID removed and ItemID added. Names changed everywhere.
	  * Modified files:
	    * itemba.h
	    * itemba.cpp
	    * game.h
	    * game.cpp
	    * entity.h
	    * entity.cpp
	* itemde.h: Genie possibility increased
	* fluid.cpp: Fluid degeneration rate is now lower
	* Symbol.pcx: mounted symbol added by Kahvi
	* LTerrain.pcx: stunt trees added by Kahvi
	* Human.pcx: Cossack added by Kahvi and mistress teared apart by Kahvi
	* Char.pcx: raven, lion, carnivorous plant, bison, horse and dragon added by Kahvi

Sunday, March 03 2002 Heikki Sairanen <heikki.sairanen@phpoint.net>

	* Main/Include/itemba.h: Teleport(stack*) function added
	* Main/Include/itemde.h: Wand of Teleportation added
	* Main/Include/roomba.h: TeleportSquare function added
	* Main/Include/roomde.h: TeleportSquare function added to catedral and shop
	* Main/Include/charba.h: Teleport function added
	* Main/Include/lsquare.h: Added TeleportEverything
	* Main/Source/stack.cpp: Teleport function added
	* Main/Source/itemba.cpp: Teleport(stack*) function added, which currently uses Player's character to determine walkability of square. This probably should be still fixed.
	* Main/Source/itemde.cpp: Wand of Teleportation added
	* Main/Source/lsquare.cpp: Added TeleportEverything
	* Main/Source/roomde.cpp: TeleportSquare function added to catedral and shop
	* Main/Source/stack.cpp: Teleport function added

Friday, March 01 2002 Heikki Sairanen <heikki.sairanen@phpoint.net>

	* Main/Source/god.cpp: silva::PrayGoodEffect now also ImpactDamages all items in the level
	* Main/Source/charba.cpp: character::Kick() added a burden state checker

Friday, March 01 2002 Heikki Sairanen <heikki.sairanen@phpoint.net>

	* Main/Source/charba.cpp: Added a burdenstate checker to Hit function 
	* Main/Source/lterrade.cpp: Added private function Break() to door to reduce duplicated code.
	* Main/Include/lterrade.h: Added function Break() to door

Thursday, February 28 2002 Heikki Sairanen <heikki.sairanen@phpoint.net>

	* Main/Include/itemde.h: Added scroll of taming
	* Main/Source/itemde.cpp: Added scroll of taming

Wednesday, February 27 2002 Heikki Sairanen <heikki.sairanen@phpoint.net>

	* Main/Include/Makefile.am: Added entity.h and fluid.h (somehow these changes have been lost from CVS)
	* Main/Source/Makefile.am: Added entity.cpp and fluid.cpp (somehow these changes have been lost from CVS)
	* Main/Source/itemde.cpp: bananapeals::GetStepOnEffect for fall effect, Wand of Striking added. All BeamEffect functions changed to returing bool that tells the Beam function wheter the beam continues after the square in question.
	* Main/Include/lsquare.h: levelsquare::HasBeenHitBy added 
	* Main/Source/lsquare.cpp: levelsquare::HasBeenHitBy added
	* Main/Include/lterraba.h: overlevelterrain::HasBeenHitBy added
	* Main/Include/lterrade.h: door::HasBeenHitBy, brokendoor::HasBeenHitBy added
	* Main/Source/lterrade.cpp: door::HasBeenHitBy, brokendoor::HasBeenHitBy. That open or damage the door when an item hits it.
	* Main/Include/itemde.h: Wand of strikings color changed from yellow to white. Added Wand of fireballs
	* Main/Source/charba.cpp character::WizardMode changed so that the player now receives 5 scrolls of wishing also after activating the wizard mode.
