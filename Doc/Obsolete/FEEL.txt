----------------------------------------------------------------------------

	       Fatal Error Exception Library (FEEL) documentation

----------------------------------------------------------------------------

Overview:
---------

A project-independent error handling interface, which acts as a base for
development environment and handles all exceptions and abortion/termination
calls generated by other projects.

Classes:
--------

globalerrorhandler (error.h)
----------------------------

All errorhandling routines are gathered here as static members. Also
holds some backup routines which are installed when the program exits.
Win32 variant has also a backup copy of the window handle.

Functions:

Install()

	Installs the class. Normally this is called automatically
	when the program starts, in main() or WinMain().

DeInstall()

	Deinstalls the error handler. Normally called automatically
	when the program closes, in exit().

Abort(const char* Format, ...)

	Generates an error message using Format and other arguments
	as printf() does, prints the message with a method most suitable
	for the current OS and terminates the program. This is a rather
	common function to be called, so a macro named ABORT is provided
	to ensure convenient using.

	Example of usage:

	ABORT("Fatal Error: Detected a %d-eyed Enner Beast!", 3);

	Result: Program closes and a messagebox with text "Fatal Error:
	Detected a 3-eyed Enner Beast!" is displayed.

SetWindow(HWND* NewhWnd)

	Win32 only. Replaces the current window handle with NewhWnd.

Globals:
--------

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR
                   lpCmdLine, int nCmdShow)

	Win32 only. The starting procedure of the program. Not to be
	called from anywhere else.

----------------------------------------------------------------------------

End of document.