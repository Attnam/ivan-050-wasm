/* 
 * NOTICE!!!
 * This file contains SPOILERS, which might ruin your IVAN experience totally.
 */

/* Numeric item data loaded during game startup */

/* Default values: */

item
{
	Possibility = 0;
	InHandsPic = 160, 144;
	Score = 0;
	IsDestroyable = true;
	CanBeWished = true;
	IsMaterialChangeable = true;
	WeaponCategory = UNCATEGORIZED;
	IsPolymorphSpawnable = true;
	IsAutoInitializable = true;
	Category = MISC;
	SoundResistance = 0;
	EnergyResistance = 0;
	AcidResistance = 0;
	FireResistance = 0;
	PoisonResistance = 0;
	BulimiaResistance = 0;
	StrengthModifier = 0;
	/* Obligatory: FormModifier */
	NPModifier = 10000;
	/* Obligatory: DefaultSize */
	/* Obligatory: DefaultMainVolume */
	DefaultSecondaryVolume = 0;
	DefaultContainedVolume = 0;
	/* Obligatory: BitmapPos */
	Price = 0;
	BaseEmitation = 0;
	Article = "a";
	Adjective = "";
	AdjectiveArticle = "a";
	/* Obligatory: NameSingular */
	/* NameSingular + "s" by default: NamePlural */
	PostFix = "";
	ArticleMode = NORMAL_ARTICLE;
	/* Obligatory: MainMaterialConfig */
	/* Obligatory: SecondaryMaterialConfig */
	/* Obligatory: ContainedMaterialConfig */
	/* Obligatory if multiple material configurations defined: MaterialConfigChances */
	IsAbstract = true; /* This is false by default and does not inherit! */
	IsPolymorphable = true;
	OKVisualEffects = NONE;
	CanBeGeneratedInContainer = true;
	/* Obligatory: Roundness */
	GearStates = 0;
	IsTwoHanded = false;
	CreateDivineConfigurations = false;
	ForcedVisualEffects = 0;
	CanBeCloned = true;
	CanBeBroken = false;
	MinCharges = 0;
	MaxCharges = 0;
	CanBePiled = true;
	StorageVolume = 0;
	MaxGeneratedContainedItems = 0;
	AffectsArmStrength = false;
	AffectsLegStrength = false;
	AffectsDexterity = false;
	AffectsAgility = false;
	AffectsEndurance = false;
	AffectsPerception = false;
	AffectsIntelligence = false;
	AffectsWisdom = false;
	AffectsCharisma = false;
	AffectsMana = false;
	DefaultEnchantment = 0;
	PriceIsProportionalToEnchantment = false;
	CanBeUsedBySmith = false;
	AffectsCarryingCapacity = false;
	HandleInPairs = false;
	CanBeEnchanted = true;
}

materialcontainer
{
	IsAbstract = true;
}

lantern
{
	DefaultSize = 30;
	Possibility = 100;
	InHandsPic = 160, 160;
	Category = TOOL;
	DefaultMainVolume = 1000;
	StrengthModifier = 50;
	FormModifier = 20;
	Price = 50;
	BaseEmitation = rgb24(125, 125, 105);
	NameSingular = "lantern";
	MainMaterialConfig == GLASS;
	Alias == "light";
	Roundness = 75;
	CanBeBroken = true;
	BitmapPos = 0, 256;
	WallBitmapPos = 0, 192;

	Config BROKEN;
	{
		DefaultSize = 15;
		Possibility = 10;
		InHandsPic = 160, 128;
		FormModifier = 25;
		Price = 0;
		BaseEmitation = 0;
		BitmapPos = 0, 304;
		WallBitmapPos = 0, 208;
	}
}

can /* materialcontainer-> */
{
	DefaultSize = 10;
	Possibility = 400;
	InHandsPic = 160, 144;
	Category = FOOD;
	DefaultMainVolume = 50;
	DefaultContainedVolume = 500;
	StrengthModifier = 50;
	/* BitmapPos depends on being full or not */
	FormModifier = 15;
	NameSingular = "can";
	/* Adjective and PostFix overridden */
	MainMaterialConfig == IRON;
	ContainedMaterialConfig = { 2, BANANA_FLESH, SCHOOL_FOOD; }
	MaterialConfigChances = { 2, 50, 10; }
	Roundness = 60;
}

lump
{
	DefaultSize = 10;
	Possibility = 400;
	InHandsPic = 160, 112;
	Category = FOOD;
	DefaultMainVolume = 500;
	StrengthModifier = 75;
	BitmapPos = 16, 48;
	FormModifier = 10;
	NameSingular = "lump";
	MainMaterialConfig = { 2, BANANA_FLESH, SCHOOL_FOOD; }
	MaterialConfigChances = { 2, 50, 10; }
	OKVisualEffects = MIRROR|FLIP;
	Roundness = 75;
}

meleeweapon
{
	Category = WEAPON;
	ContainedMaterialConfig == 0;
	IsAbstract = true;
	CanBeBroken = true;
	CanBePiled = false;

	Config LONG_SWORD;
	{
		DefaultSize = 120;
		Possibility = 100;
		InHandsPic = 160, 16;
		WeaponCategory = LARGE_SWORDS;
		DefaultMainVolume = 130;
		DefaultSecondaryVolume = 45;
		BitmapPos = 16, 336;
		FormModifier = 100;
		StrengthModifier = 100;
		NameSingular = "sword";
		Adjective = "long";
		MainMaterialConfig = { 4, WOOD, BRONZE, IRON, MITHRIL; }
		SecondaryMaterialConfig = { 4, WOOD, BRONZE, IRON, MITHRIL; }
		MaterialConfigChances = { 4, 50, 150, 50, 10; }
		Roundness = 10;
	}

	Config BROKEN|LONG_SWORD;
	{
		Possibility = 10;
		BitmapPos = 32, 208;
	}

	Config TWO_HANDED_SWORD;
	{
		DefaultSize = 150;
		Possibility = 50;
		InHandsPic = 160, 16;
		WeaponCategory = LARGE_SWORDS;
		DefaultMainVolume = 350;
		DefaultSecondaryVolume = 150;
		StrengthModifier = 200;
		BitmapPos = 0, 0;
		FormModifier = 135;
		Adjective = "two-handed";
		NameSingular = "sword";
		MainMaterialConfig = { 2, IRON, MITHRIL; }
		SecondaryMaterialConfig = { 2, IRON, MITHRIL; }
		MaterialConfigChances = { 2, 100, 10; }
		Roundness = 15;
		IsTwoHanded = true;
	}

	Config BROKEN|TWO_HANDED_SWORD;
	{
		Possibility = 5;
		BitmapPos = 32, 80;
	}

	Config TWO_HANDED_SCIMITAR;
	{
		DefaultSize = 140;
		Possibility = 0;
		InHandsPic = 160, 16;
		WeaponCategory = LARGE_SWORDS;
		DefaultMainVolume = 400;
		DefaultSecondaryVolume = 150;
		StrengthModifier = 175;
		BitmapPos = 0, 16;
		FormModifier = 140;
		Adjective = "two-handed";
		NameSingular = "scimitar";
		MainMaterialConfig = { 2, IRON, MITHRIL; }
		SecondaryMaterialConfig = { 2, IRON, MITHRIL; }
		MaterialConfigChances = { 2, 250, 10; }
		Roundness = 15;
		IsTwoHanded = true;
	}

	Config BROKEN|TWO_HANDED_SCIMITAR;
	{
		Possibility = 1;
		BitmapPos = 32, 96;
	}

	Config SPEAR;
	{
		DefaultSize = 190;
		Possibility = 800;
		InHandsPic = 160, 96;
		WeaponCategory = SPEARS;
		StrengthModifier = 70;
		BitmapPos = 16, 144;
		FormModifier = 85;
		DefaultMainVolume = 100;
		DefaultSecondaryVolume = 2000;
		NameSingular = "spear";
		MainMaterialConfig = { 6, WOOD, BONE, COPPER, BRONZE, IRON, MITHRIL; }
		SecondaryMaterialConfig == WOOD;
		MaterialConfigChances = { 6, 250, 50, 250, 150, 50, 10; }
		Roundness = 10;
		IsTwoHanded = true;
	}

	Config BROKEN|SPEAR;
	{
		Possibility = 80;
		BitmapPos = 32, 224;
	}

	Config AXE;
	{
		DefaultSize = 60;
		Possibility = 600;
		InHandsPic = 160, 176;
		WeaponCategory = AXES;
		DefaultMainVolume = 200;
		DefaultSecondaryVolume = 400;
		StrengthModifier = 80;
		BitmapPos = 16, 256;
		FormModifier = 45;
		NameSingular = "axe";
		Article = "an";
		MainMaterialConfig = { 4, COPPER, BRONZE, IRON, MITHRIL; }
		SecondaryMaterialConfig == WOOD;
		MaterialConfigChances = { 4, 100, 100, 50, 10; }
		Roundness = 20;
		IsTwoHanded = true;
	}

	Config BROKEN|AXE;
	{
		Possibility = 60;
		BitmapPos = 32, 176;
	}

	Config HALBERD;
	{
		DefaultSize = 170;
		Possibility = 200;
		InHandsPic = 160, 176;
		WeaponCategory = POLE_ARMS;
		DefaultMainVolume = 375;
		DefaultSecondaryVolume = 1800;
		StrengthModifier = 150;
		BitmapPos = 0, 80;
		FormModifier = 115;
		NameSingular = "halberd";
		MainMaterialConfig = { 2, IRON, MITHRIL; }
		SecondaryMaterialConfig == WOOD;
		MaterialConfigChances = { 2, 50, 10; }
		Roundness = 20;
		IsTwoHanded = true;
	}

	Config BROKEN|HALBERD;
	{
		Possibility = 20;
		BitmapPos = 32, 144;
	}

	Config MACE;
	{
		StrengthModifier = 125; 
		FormModifier = 65; 
		DefaultSize = 70; 
		DefaultMainVolume = 300;
		DefaultSecondaryVolume = 500;
		BitmapPos = 0, 32;
		Possibility = 400;
		InHandsPic = 160, 192;
		WeaponCategory = MACES;
		NameSingular = "mace";
		MainMaterialConfig = { 2, IRON, MITHRIL; }
		SecondaryMaterialConfig == WOOD;
		MaterialConfigChances = { 2, 100, 10; }
		Roundness = 30; /* we count the handle, too */
		IsTwoHanded = true;
	}

	Config BROKEN|MACE;
	{
		Possibility = 40;
		BitmapPos = 32, 112;
	}

	Config HAMMER;
	{
		DefaultSize = 60;
		Possibility = 400;
		InHandsPic = 176, 16;
		WeaponCategory = HAMMERS;
		DefaultMainVolume = 250;
		DefaultSecondaryVolume = 500;
		StrengthModifier = 110;
		BitmapPos = 48, 160;
		FormModifier = 55;
		NameSingular = "hammer";
		MainMaterialConfig = { 4, COPPER, BRONZE, IRON, MITHRIL; }
		SecondaryMaterialConfig == WOOD;
		MaterialConfigChances = { 4, 100, 100, 50, 10; }
		Roundness = 20;
		IsTwoHanded = true;
		CanBeUsedBySmith = true;
	}

	Config BROKEN|HAMMER;
	{
		Possibility = 40;
		BitmapPos = 48, 192;
	}

	Config SICKLE;
	{
		DefaultSize = 40;
		Possibility = 50;
		InHandsPic = 160, 64; /* fix */
		WeaponCategory = AXES;
		DefaultMainVolume = 100;
		DefaultSecondaryVolume = 50;
		BitmapPos = 48, 144;
		FormModifier = 45;
		StrengthModifier = 40;
		NameSingular = "sickle";
		MainMaterialConfig = { 2, IRON, MITHRIL; }
		SecondaryMaterialConfig == WOOD;
		MaterialConfigChances = { 2, 100, 10; }
		Roundness = 50;
	}

	Config BROKEN|SICKLE;
	{
		Possibility = 5;
		BitmapPos = 48, 176;
	}

	Config DAGGER;
	{
		DefaultSize = 40;
		Possibility = 300;
		InHandsPic = 160, 32;
		WeaponCategory = DAGGERS;
		DefaultMainVolume = 25;
		DefaultSecondaryVolume = 25;
		BitmapPos = 48, 256;
		FormModifier = 70;
		StrengthModifier = 50;
		NameSingular = "dagger";
		MainMaterialConfig = { 2, IRON, MITHRIL; }
		SecondaryMaterialConfig = { 2, IRON, MITHRIL; }
		MaterialConfigChances = { 2, 100, 10; }
		Roundness = 20;
	}

	Config BROKEN|DAGGER;
	{
		Possibility = 30;
		BitmapPos = 48, 288;
	}

	Config SHORT_SWORD;
	{
		DefaultSize = 70;
		Possibility = 200;
		InHandsPic = 160, 16;
		WeaponCategory = SMALL_SWORDS;
		DefaultMainVolume = 90;
		DefaultSecondaryVolume = 35;
		BitmapPos = 48, 240;
		FormModifier = 80;
		StrengthModifier = 90;
		Adjective = "short";
		NameSingular = "sword";
		MainMaterialConfig = { 4, COPPER, BRONZE, IRON, MITHRIL; }
		SecondaryMaterialConfig = { 4, COPPER, BRONZE, IRON, MITHRIL; }
		MaterialConfigChances = { 4, 100, 100, 50, 10; }
		Roundness = 15;
	}

	Config BROKEN|SHORT_SWORD;
	{
		Possibility = 20;
		BitmapPos = 48, 272;
	}
}

banana /* materialcontainer-> */
{
	Possibility = 150;
	InHandsPic = 160, 112;
	WeaponCategory = CLUBS;
	DefaultMainVolume = 40;
	DefaultSecondaryVolume = 150;
	StrengthModifier = 75;
	Category = FOOD;
	BitmapPos = 0, 112;
	FormModifier = 25;
	DefaultSize = 20;
	NameSingular = "banana";
	MainMaterialConfig == BANANA_PEEL;
	SecondaryMaterialConfig == BANANA_FLESH;
	Alias == "gun";
	Roundness = 15;
	CanBeBroken = true;
	MaxCharges = 6;
	MinCharges = 6;
	CanBePiled = true;

	Config BROKEN;
	{
		Possibility = 10;
		BitmapPos = 32, 272;
	}
}

holybanana /* materialcontainer->banana-> */
{
	Possibility = 5;
	DefaultMainVolume = 400;
	DefaultSecondaryVolume = 1500;
	StrengthModifier = 150;
	FormModifier = 100;
	DefaultSize = 30;
	Score = 500;
	Price = 1000;
	Adjective = "holy";
	PostFix = "of Liukas Vipro";
	ArticleMode = DEFINITE_ARTICLE;
	IsPolymorphable = false;
	Roundness = 20;

	Config BROKEN;
	{
		Possibility = 0;
		BitmapPos = 32, 272;
		Price = 500;
	}
}

justifier /* meleeweapon-> */
{
	DefaultSize = 125;
	Possibility = 0;
	InHandsPic = 160, 16;
	WeaponCategory = LARGE_SWORDS;
	DefaultMainVolume = 200;
	DefaultSecondaryVolume = 100;
	BitmapPos = 0, 64;
	FormModifier = 275;
	StrengthModifier = 275;
	Score = 2500;
	CanBeWished = false;
	IsMaterialChangeable = false;
	NameSingular = "broadsword";
	Adjective = "holy";
	PostFix = "named Valpurus's Justifier";
	ArticleMode = DEFINITE_ARTICLE;
	MainMaterialConfig == VALPURIUM;
	SecondaryMaterialConfig == VALPURIUM;
	IsPolymorphable = false;
	Alias == "Justifier";
	Roundness = 20;
	CanBeCloned = false;
	CanBeBroken = false;
	DefaultEnchantment = 16;
	CanBeEnchanted = false;
}

neercseulb /* meleeweapon-> */
{
	StrengthModifier = 250;
	FormModifier = 250;
	DefaultSize = 100;
	Possibility = 0;
	Score = 1000;
	CanBeWished = false;
	BitmapPos = 0, 32;
	InHandsPic = 160, 192;
	WeaponCategory = MACES;
	IsMaterialChangeable = false;
	DefaultMainVolume = 800;
	DefaultSecondaryVolume = 500;
	Adjective = "ancient";
	NameSingular = "mace";
	AdjectiveArticle = "an";
	PostFix = "named Neerc Se-ulb";
	ArticleMode = DEFINITE_ARTICLE;
	MainMaterialConfig == MITHRIL;
	SecondaryMaterialConfig == MITHRIL;
	IsPolymorphable = false;
	Alias == "Neerc Se-ulb";
	Roundness = 35;
	IsTwoHanded = true;
	CanBeCloned = false;
	CanBeBroken = false;
	DefaultEnchantment = 6;
}

pickaxe /* meleeweapon-> */
{
	Category = TOOL;
	DefaultSize = 75;
	Possibility = 100;
	InHandsPic = 160, 64;
	DefaultMainVolume = 225;
	DefaultSecondaryVolume = 400;
	BitmapPos = 0, 96;
	FormModifier = 35;
	NameSingular = "pick-axe";
	Alias == "pick-ax";
	Roundness = 20;
	WeaponCategory = AXES;
	StrengthModifier = 75;
	MainMaterialConfig = { 4, COPPER, BRONZE, IRON, MITHRIL; }
	SecondaryMaterialConfig == WOOD;
	MaterialConfigChances = { 4, 100, 100, 50, 10; }
	IsTwoHanded = true;
	Price = 50; /* bonus for being able to dig */

	Config BROKEN;
	{
		Possibility = 10;
		BitmapPos = 32, 160;
		Price = 0;
	}
}

armor
{
	IsAbstract = true;
	CanBePiled = false;
}

bodyarmor /* armor-> */
{
	InHandsPic = 160, 144;
	Category = BODY_ARMOR;
	FormModifier = 15;
	IsAbstract = true;
	Roundness = 70;
	IsTwoHanded = true;
	CanBeBroken = true;

	Config CHAIN_MAIL;
	{
		Possibility = 50;
		StrengthModifier = 125; 
		DefaultSize = 75; 
		DefaultMainVolume = 2000; 
		BitmapPos = 16, 96;
		NameSingular = "chain mail";
		MainMaterialConfig = { 3, BRONZE, IRON, MITHRIL; }
		SecondaryMaterialConfig == WOOD;
		MaterialConfigChances = { 3, 150, 50, 10; }
		InElasticityPenaltyModifier = 10;
	}

	Config BROKEN|CHAIN_MAIL;
	{
		Possibility = 5;
		BitmapPos = 48, 208;
		FormModifier = 20;
		StrengthModifier = 75;
	}

	Config PLATE_MAIL;
	{
		StrengthModifier = 200; 
		DefaultSize = 75; 
		DefaultMainVolume = 4000; 
		BitmapPos = 16, 128;
		Possibility = 250;
		NameSingular = "plate mail";
		FlexibleNameSingular = "armor";
		MainMaterialConfig = { 5, LEATHER, HARDENED_LEATHER, TROLL_HIDE, BRONZE, IRON; }
		MaterialConfigChances = { 5, 150, 75, 25, 25, 10; }
		InElasticityPenaltyModifier = 20;
	}

	Config BROKEN|PLATE_MAIL;
	{
		Possibility = 25;
		StrengthModifier = 100;
		BitmapPos = 0, 352;
		FormModifier = 20;
	}

	Config ARMOR_OF_GREAT_HEALTH;
	{
		StrengthModifier = 150; 
		DefaultSize = 80;
		DefaultMainVolume = 5000; 
		BitmapPos = 16, 128;
		Possibility = 20;
		NameSingular = "armor";
		PostFix = "of great health";
		MainMaterialConfig = { 3, LEATHER, HARDENED_LEATHER, TROLL_HIDE; }
		MaterialConfigChances = { 3, 150, 75, 50; }
		InElasticityPenaltyModifier = 30;
		AffectsEndurance = true;
		DefaultEnchantment = 1;
		Price = 250;
		PriceIsProportionalToEnchantment = true;
	}

	Config BROKEN|ARMOR_OF_GREAT_HEALTH;
	{
		Possibility = 3;
		StrengthModifier = 75;
		BitmapPos = 0, 352;
		FormModifier = 20;
		Price = 50;
	}
}

goldeneagleshirt /* armor->bodyarmor-> */
{
	DefaultSize = 60;
	BitmapPos = 16, 112;
	Possibility = 0;
	Score = 4000;
	CanBeWished = false;
	IsDestroyable = false;
	IsMaterialChangeable = false;
	DefaultMainVolume = 1000;
	BaseEmitation = rgb24(112, 112, 166);
	StrengthModifier = 200;
	NameSingular = "Shirt of the Golden Eagle";
	MainMaterialConfig == GOLDEN_EAGLE_FEATHER;
	ArticleMode = DEFINITE_ARTICLE;
	IsPolymorphable = false;
	CanBeBroken = false;
	CanBeCloned = false;
	DefaultEnchantment = 10;
	InElasticityPenaltyModifier = 30;
	CanBeEnchanted = false;
} 

potion /* materialcontainer-> */
{
	DefaultSize = 30;
	Possibility = 750;
	WeaponCategory = CLUBS;
	InHandsPic = 160, 128;
	Category = POTION;
	DefaultMainVolume = 60;
	DefaultContainedVolume = 1500;
	StrengthModifier = 50;
	BitmapPos = 0, 160;
	FormModifier = 25;
	NameSingular = "bottle";
	MainMaterialConfig == GLASS;
	ContainedMaterialConfig = { 8, WATER, HEALING_LIQUID, OMMEL_URINE, POISON_LIQUID, VALDEMAR, ANTIDOTE_LIQUID, VODKA, TROLL_BLOOD; }
	MaterialConfigChances = { 8, 100, 75, 50, 75, 1, 75, 5, 25; }
	Alias = { 2, "potion", "drink"; }
	Roundness = 70;
	CanBeBroken = true;
}

bananapeels
{
	DefaultSize = 20;
	Possibility = 100;
	InHandsPic = 160, 112;
	Category = MISC;
	DefaultMainVolume = 40;
	StrengthModifier = 50;
	BitmapPos = 0, 128;
	FormModifier = 20;
	NameSingular = "banana peel";
	MainMaterialConfig == BANANA_PEEL;
	Roundness = 10;
}

brokenbottle /* cannot contain anything, so NOT bottle-> */
{
	DefaultSize = 10;
	Possibility = 100;
	InHandsPic = 160, 128;
	Category = MISC;
	DefaultMainVolume = 60;
	StrengthModifier = 50;
	BitmapPos = 16, 160;
	FormModifier = 50;
	NameSingular = "bottle";
	Adjective = "broken";
	MainMaterialConfig == GLASS;
	Roundness = 70;
}

scroll
{
	InHandsPic = 160, 128;
	Category = SCROLL;
	DefaultMainVolume = 250;
	StrengthModifier = 25;
	BitmapPos = 16, 176;
	FormModifier = 20;
	DefaultSize = 30;
	NameSingular = "scroll";
	MainMaterialConfig == PARCHMENT;
	IsAbstract = true;
	Roundness = 15;
}

scrollofcreatemonster /* scroll-> */
{
	Possibility = 75;
	Price = 20;
	PostFix = "of create monster";
}

scrollofteleportation /* scroll-> */
{
	Possibility = 100;
	Price = 50;
	PostFix = "of teleportation";
	Alias == "scroll of teleport";
}

scrollofcharging /* scroll-> */
{
	Possibility = 25;
	Price = 400;
	PostFix = "of charging";
	CanBeCloned = false;
}

nut
{
	DefaultSize = 3; 
	Possibility = 5;
	InHandsPic = 160, 128;
	Category = FOOD;
	DefaultMainVolume = 25;
	StrengthModifier = 50;
	BitmapPos = 16, 208;
	FormModifier = 10;
	MainMaterialConfig == HUMAN_FLESH;
	NameSingular = "nut";
	Roundness = 90;
}

leftnutofpetrus /* nut-> */
{
	DefaultSize = 10;
	Possibility = 0;
	Category = MISC;
	DefaultMainVolume = 500;
	StrengthModifier = 2500;
	Score = 5000;
	IsDestroyable = false;
	BaseEmitation = rgb24(166, 112, 112);
	Adjective = "left";
	PostFix = "of Petrus";
	ArticleMode = DEFINITE_ARTICLE;
	IsPolymorphable = false;
	CanBeWished = false;
	CanBeCloned = false;
	FormModifier = 15;
}

bone
{
	DefaultSize = 50;
	Possibility = 250;
	WeaponCategory = CLUBS;
	DefaultMainVolume = 500;
	StrengthModifier = 80;
	BitmapPos = 16, 240;
	FormModifier = 25;
	Category = MISC;
	NameSingular = "bone";
	MainMaterialConfig == BONE;
	Roundness = 20;
	IsTwoHanded = true;
}

loaf
{
	DefaultSize = 40;
	Possibility = 400;
	WeaponCategory = CLUBS;
	InHandsPic = 160, 128;
	Category = FOOD;
	DefaultMainVolume = 500;
	StrengthModifier = 100;
	BitmapPos = 0, 272;
	FormModifier = 20;
	NameSingular = "loaf";
	NamePlural = "loaves";
	MainMaterialConfig = { 3, BEEF, PORK, BREAD; }
	MaterialConfigChances = { 3, 50, 50, 200; }
	Alias == "food";
	Roundness = 20;
}

scrollofwishing /* scroll-> */
{
	Possibility = 2;
	CanBeWished = false;
	Price = 2000;
	IsPolymorphSpawnable = false;
	PostFix = "of wishing";
	CanBeCloned = false;
}

cheapcopyofleftnutofpetrus /* nut-> */
{
	DefaultSize = 10;
	Possibility = 10;
	Score = 1;
	Price = 50;
	Category = MISC;
	DefaultMainVolume = 500;
	NameSingular = "copy of the left nut of Petrus";
	NamePlural = "copies of the left nut of Petrus";
	Adjective = "cheap";
	MainMaterialConfig == GLASS; /* should be plastic */
	Alias == "left nut of Petrus";
	FormModifier = 15;
}

wand
{
	Category = WAND;
	DefaultMainVolume = 125;
	StrengthModifier = 50;
	BitmapPos = 0, 288;
	FormModifier = 30;
	DefaultSize = 30;
	NameSingular = "wand";
	IsAbstract = true;
	Roundness = 5;
	CanBePiled = false;
}

wandofpolymorph /* wand-> */
{
	Possibility = 25;
	Price = 500;
	IsPolymorphSpawnable = false;
	PostFix = "of polymorph";
	MainMaterialConfig == UNICORN_HORN;
	BeamRange = 5;
	MinCharges = 2;
	MaxCharges = 5;
}

scrollofchangematerial /* scroll-> */
{
	Possibility = 10;
	Price = 1000;
	PostFix = "of change material";
	Alias == "SoCM";
}

avatarofvalpurus
{
	DefaultSize = 10;
	Possibility = 0;
	CanBeWished = false;
	IsDestroyable = false;
	InHandsPic = 160, 112;
	IsMaterialChangeable = false;
	Price = 1000000;
	Category = MISC;
	DefaultMainVolume = 250;
	StrengthModifier = 500;
	BitmapPos = 0, 320;
	FormModifier = 15;
	NameSingular = "Avatar";
	PostFix = "of Valpurus";
	ArticleMode = DEFINITE_ARTICLE;
	MainMaterialConfig == VALPURIUM;
	IsPolymorphable = false;
	Roundness = 80;
	CanBeCloned = false;
}

wandofstriking /* wand-> */
{
	Possibility = 50;
	Price = 500;
	PostFix = "of striking";
	MainMaterialConfig == IRON;
	BeamRange = 15;
	MinCharges = 2;
	MaxCharges = 5;
}

kiwi
{
	DefaultSize = 10;
	Possibility = 75;
	Category = FOOD;
	DefaultMainVolume = 50;
	StrengthModifier = 50;
	BitmapPos = 0, 384;
	FormModifier = 10;
	NameSingular = "kiwi";
	MainMaterialConfig == KIWI_FLESH;
	Roundness = 80;
}

pineapple
{
	DefaultSize = 20;
	Possibility = 75;
	Category = FOOD;
	DefaultMainVolume = 1000;
	StrengthModifier = 100;
	BitmapPos = 0, 368;
	FormModifier = 10;
	NameSingular = "pineapple";
	MainMaterialConfig == PINEAPPLE_FLESH;
	Roundness = 90;
	IsTwoHanded = true;
}

palmbranch
{
	DefaultSize = 80;
	Possibility = 10;
	InHandsPic = 160, 208;
	Category = MISC;
	DefaultMainVolume = 4000;
	StrengthModifier = 50;
	BitmapPos = 0, 240;
	FormModifier = 15;
	NameSingular = "palm branch";
	MainMaterialConfig == PALM_LEAF;
	Roundness = 80;
	IsTwoHanded = true;
}

whip /* meleeweapon-> */
{
	DefaultSize = 210;
	Possibility = 50;
	InHandsPic = 160, 224;
	WeaponCategory = WHIPS;
	DefaultMainVolume = 500;
	DefaultSecondaryVolume = 40;
	StrengthModifier = 10;
	BitmapPos = 32, 0;
	NameSingular = "whip";
	MainMaterialConfig = { 3, LEATHER, NYMPH_HAIR, OMMEL_HAIR; }
	SecondaryMaterialConfig == WOOD;
	MaterialConfigChances = { 3, 200, 20, 10; }
	Roundness = 2;
	FormModifier = 7; /* this is multiplied by MainMaterial's flexibility */
	CanBeBroken = false;

	Config RUNED_WHIP;
	{
		DefaultSize = 230;
		Possibility = 25;
		DefaultMainVolume = 750;
		DefaultSecondaryVolume = 50;
		StrengthModifier = 20;
		Adjective = "runed";
		FormModifier = 15;
	}
}

backpack /* materialcontainer-> */
{
	DefaultSize = 80;
	Possibility = 25;
	InHandsPic = 160, 144;
	Category = TOOL;
	DefaultMainVolume = 1000;
	DefaultContainedVolume = 10000;
	StrengthModifier = 250;
	BitmapPos = 32, 16;
	FormModifier = 10;
	NameSingular = "backpack";
	MainMaterialConfig == LEATHER;
	ContainedMaterialConfig == GUN_POWDER;
	Alias == "explosives";
	Roundness = 70;
	IsTwoHanded = true;
}

holybook
{
	DefaultSize = 25;
	InHandsPic = 160, 128;
	Possibility = 15; /* this is for each config */
	Category = BOOK;
	DefaultMainVolume = 2000;
	StrengthModifier = 150;
	BitmapPos = 32, 32;
	FormModifier = 20;
	Adjective = "holy";
	NameSingular = "book";
	ArticleMode = DEFINITE_ARTICLE;
	MainMaterialConfig == PARCHMENT;
	Price = 200;
	Roundness = 70;
	IsTwoHanded = true;
	CreateDivineConfigurations = true;
	IsAbstract = true;
}

fiftymillionroubles
{
	DefaultSize = 20;
	Possibility = 0;
	Price = 2;
	Category = VALUABLE; /* ??? */
	DefaultMainVolume = 1000;
	StrengthModifier = 25;
	BitmapPos = 0, 336;
	FormModifier = 15;
	NameSingular = "pile";
	PostFix = "of 50 million roubles";
	MainMaterialConfig == PARCHMENT;
	Alias = { 2, "money", "riches"; }
	Roundness = 60;
}

oillamp
{
	DefaultSize = 30;
	Possibility = 35;
	CanBeWished = false;
	Category = TOOL;
	DefaultMainVolume = 150;
	StrengthModifier = 50;
	BitmapPos = 32, 48;
	FormModifier = 20;
	BaseEmitation = rgb24(110, 110, 90);
	NameSingular = "oil lamp";
	Article = "an";
	MainMaterialConfig == GOLD;
	Roundness = 40;
	CanBePiled = false; /* otherwise you could summon a genie only from the first piled item */
	Price = 100;
	Alias == "lamp";
}

stone
{
	DefaultSize = 30;
	Possibility = 25;
	InHandsPic = 160, 112;
	Category = VALUABLE;
	DefaultMainVolume = 100;
	StrengthModifier = 100;
	BitmapPos = 0, 48;
	FormModifier = 10;
	NameSingular = "stone";
	MainMaterialConfig = { 5, SILVER, GOLD, SAPPHIRE, RUBY, DIAMOND; }
	MaterialConfigChances = { 5, 30, 20, 15, 10, 5; }
	Alias == "jewel";
	Roundness = 90;
}

wandoffireballs /* wand-> */
{
	Possibility = 50;
	Price = 500;
	PostFix = "of fireballs";
	MainMaterialConfig == BRONZE;
	BeamRange = 50;
	MinCharges = 1;
	MaxCharges = 4;
}

scrolloftaming /* scroll-> */
{
	Possibility = 25;
	Price = 500;
	PostFix = "of taming";
}

wandofteleportation /* wand-> */
{
	Possibility = 75;
	Price = 500;
	PostFix = "of teleportation";
	MainMaterialConfig == SILVER;
	Alias == "wand of teleport";
	BeamRange = 5;
	MinCharges = 3;
	MaxCharges = 6;
}

mine /*materialcontainer-> */
{
	DefaultSize = 50;
	Possibility = 50;
	Category = TOOL;
	DefaultMainVolume = 100;
	DefaultContainedVolume = 5000;
	StrengthModifier = 50;
	BitmapPos = 32, 288;
	FormModifier = 10;
	NameSingular = "mine";
	MainMaterialConfig == IRON;
	ContainedMaterialConfig == GUN_POWDER;
	Roundness = 100;
	IsTwoHanded = true;
}

wandofhaste /* wand-> */
{
	Possibility = 50;
	Price = 500;
	PostFix = "of haste";
	MainMaterialConfig == TIN;
	BeamRange = 5;
	MinCharges = 3;
	MaxCharges = 6;
}

wandofslow /* wand-> */
{
	Possibility = 50;
	Price = 500;
	PostFix = "of slow";
	MainMaterialConfig == STONE;
	BeamRange = 5;
	MinCharges = 3;
	MaxCharges = 6;
}

key
{
	DefaultSize = 10;
	Possibility = 100;
	Price = 10;
	Category = TOOL;
	DefaultMainVolume = 15;
	StrengthModifier = 50;
	BitmapPos = 16, 416;
	FormModifier = 30;
	NameSingular = "key";
	MainMaterialConfig == IRON;
	Roundness = 10;
}

shield /* armor-> */
{
	DefaultSize = 60;
	Possibility = 250;
	Category = SHIELD;
	DefaultMainVolume = 500;
	StrengthModifier = 150;
	BitmapPos = 32, 336;
	FormModifier = 15;
	NameSingular = "shield";
	MainMaterialConfig = { 5, WOOD, COPPER, BRONZE, IRON, MITHRIL; }
	MaterialConfigChances = { 5, 200, 150, 150, 50, 10; }
	Roundness = 80;
	WeaponCategory = SHIELDS;
	CanBeBroken = true;

	Config BROKEN;
	{
		Possibility = 25;
		DefaultSize = 40;
		FormModifier = 20;
		BitmapPos = 48, 224;
	}
}

cloak /* armor-> */
{
	DefaultSize = 200;
	Possibility = 250;
	Category = CLOAK;
	DefaultMainVolume = 2000;
	StrengthModifier = 125;
	BitmapPos = 32, 352;
	FormModifier = 20;
	NameSingular = "cloak";
	MainMaterialConfig = { 5, LEATHER, HARDENED_LEATHER, TROLL_HIDE, NYMPH_HAIR, OMMEL_HAIR; }
	MaterialConfigChances = { 5, 250, 100, 50, 20, 10; }
	Roundness = 60;
	IsTwoHanded = true;
	InElasticityPenaltyModifier = 50;

	Config CLOAK_OF_INVISIBILITY;
	{
		Possibility = 1;
		GearStates = INVISIBLE;
		PostFix = "of invisibility";
		Price = 2500;
		CanBeWished = false;
	}
}

boot /* armor-> */
{
	DefaultSize = 30;
	Possibility = 250;
	Category = BOOT;
	DefaultMainVolume = 400;
	StrengthModifier = 150;
	BitmapPos = 0, 400;
	FormModifier = 20;
	NameSingular = "boot";
	MainMaterialConfig = { 8, LEATHER, HARDENED_LEATHER, TROLL_HIDE, NYMPH_HAIR, OMMEL_HAIR, BRONZE, IRON, MITHRIL; }
	MaterialConfigChances = { 8, 200, 100, 50, 20, 10, 100, 50, 10; }
	Roundness = 50;
	CanBePiled = true;
	InElasticityPenaltyModifier = 10;
	HandleInPairs = true;

	Config BOOT_OF_STRENGTH;
	{
		Possibility = 25;
		PostFix = "of strength";
		MainMaterialConfig == IRON;
		MaterialConfigChances == 100;
		AffectsLegStrength = true;
		Price = 50;
		DefaultEnchantment = 1;
		PriceIsProportionalToEnchantment = true;
	}

	Config BOOT_OF_AGILITY;
	{
		Possibility = 25;
		PostFix = "of agility";
		MainMaterialConfig == LEATHER;
		MaterialConfigChances == 100;
		AffectsAgility = true;
		Price = 75;
		DefaultEnchantment = 1;
		PriceIsProportionalToEnchantment = true;
	}

	Config BOOT_OF_KICKING;
	{
		Possibility = 25;
		PostFix = "of kicking";
		MainMaterialConfig == IRON;
		MaterialConfigChances == 100;
		Price = 50;
		FormModifier = 50;
	}
}

gauntlet /* armor-> */
{
	DefaultSize = 30;
	Possibility = 250;
	Category = GAUNTLET;
	DefaultMainVolume = 300;
	StrengthModifier = 125;
	BitmapPos = 32, 368;
	FormModifier = 20;
	NameSingular = "gauntlet";
	MainMaterialConfig = { 7, LEATHER, HARDENED_LEATHER, NYMPH_HAIR, OMMEL_HAIR, BRONZE, IRON, MITHRIL; }
	MaterialConfigChances = { 7, 200, 100, 20, 10, 75, 25, 5; }
	Roundness = 60;
	CanBePiled = true;
	InElasticityPenaltyModifier = 30;
	HandleInPairs = true;

	Config GAUNTLET_OF_STRENGTH;
	{
		Possibility = 25;
		PostFix = "of strength";
		MainMaterialConfig == IRON;
		MaterialConfigChances == 100;
		AffectsArmStrength = true;
		Price = 75;
		DefaultEnchantment = 1;
		PriceIsProportionalToEnchantment = true;
	}

	Config GAUNTLET_OF_DEXTERITY;
	{
		Possibility = 25;
		PostFix = "of dexterity";
		MainMaterialConfig == LEATHER;
		MaterialConfigChances == 100;
		AffectsDexterity = true;
		Price = 100;
		DefaultEnchantment = 1;
		PriceIsProportionalToEnchantment = true;
	}
}

belt /* armor-> */
{
	DefaultSize = 150;
	Possibility = 250;
	WeaponCategory = WHIPS;
	Category = BELT;
	DefaultMainVolume = 250;
	StrengthModifier = 75;
	BitmapPos = 32, 384;
	NameSingular = "belt";
	MainMaterialConfig = { 4, HARDENED_LEATHER, TROLL_HIDE, NYMPH_HAIR, OMMEL_HAIR; }
	MaterialConfigChances = { 4, 150, 50, 20, 10; }
	Roundness = 10;
	FormModifier = 5; /* this is multiplied by MainMaterial's flexibility */

	Config BELT_OF_CARRYING;
	{
		Possibility = 25;
		PostFix = "of carrying";
		AffectsCarryingCapacity = true;
		Price = 75;
		DefaultEnchantment = 1;
		PriceIsProportionalToEnchantment = true;
	}
}

ring
{
	DefaultSize = 2;
	Category = RING;
	DefaultMainVolume = 3;
	StrengthModifier = 100;
	BitmapPos = 16, 400;
	FormModifier = 10;
	NameSingular = "ring";
	MainMaterialConfig == DIAMOND;
	Roundness = 10; /* it is considered here opened */
	IsAbstract = true;

	Config RING_OF_FIRE_RESISTANCE;
	{
		Possibility = 50;
		FireResistance = 10;
		PostFix = "of fire resistance";
		MainMaterialConfig == DIAMOND;
		Price = 250;
	}

	Config RING_OF_POLYMORPH_CONTROL;
	{
		Possibility = 10;
		PostFix = "of polymorph control";
		MainMaterialConfig == SAPPHIRE;
		GearStates == POLYMORPH_CONTROL;
		Price = 500;
	}

	Config RING_OF_INFRA_VISION;
	{
		Possibility = 20;
		PostFix = "of infravision";
		MainMaterialConfig == SILVER;
		GearStates = INFRA_VISION;
		Price = 500;
	}

	Config RING_OF_TELEPORTATION;
	{
		Possibility = 30;
		PostFix = "of teleportation";
		GearStates = TELEPORT;
		MainMaterialConfig == MITHRIL;
		Alias == "ring of teleport";
		Price = 250;
	}

	Config RING_OF_TELEPORT_CONTROL;
	{
		Possibility = 10;
		PostFix = "of teleport control";
		MainMaterialConfig == RUBY;
		GearStates = TELEPORT_CONTROL;
		Price = 500;
	}

	Config RING_OF_POLYMORPH;
	{
		Possibility = 30;
		PostFix = "of polymorph";
		MainMaterialConfig == UNICORN_HORN;
		GearStates = POLYMORPH;
		Price = 250;
	}

	Config RING_OF_POISON_RESISTANCE;
	{
		Possibility = 40;
		PoisonResistance = 1;
		PostFix = "of poison resistance";
		MainMaterialConfig == TIN;
		Price = 250;
	}

	Config RING_OF_INVISIBILITY;
	{
		Possibility = 1;
		PostFix = "of invisibility";
		MainMaterialConfig == GOLD;
		GearStates = INVISIBLE;
		Price = 2500;
		CanBeWished = false;
	}
}

amulet
{
	DefaultSize = 20;
	Category = AMULET;
	DefaultMainVolume = 30;
	StrengthModifier = 100;
	BitmapPos = 32, 400;
	FormModifier = 10;
	NameSingular = "amulet";
	Article = "an";
	MainMaterialConfig == GOLD;
	Roundness = 10; /* it is considered here opened */
	IsAbstract = true;

	Config AMULET_OF_LIFE_SAVING;
	{
		Possibility = 5;
		PostFix = "of life saving";
		MainMaterialConfig == GOLD;
		GearStates = LIFE_SAVED;
		CanBeCloned = false;
		Price = 5000;
	}

	Config AMULET_OF_ESP;
	{
		Possibility = 10;
		PostFix = "of ESP";
		MainMaterialConfig == SAPPHIRE;
		GearStates = ESP;
		Price = 1000;
	}
}

bodypart
{
	Possibility = 0;
	Category = FOOD;
	IsAutoInitializable = false;
	NPModifier = 100;
	IsAbstract = true;
	IsTwoHanded = true;
	Adjective = "severed"; /* only used if severed */
	CanBeWished = false; /* temporary */
}

head /* bodypart-> */
{
	InHandsPic = 160, 144;
	StrengthModifier = 200;
	FormModifier = 10;
	NameSingular = "head";
	Roundness = 70;
}

torso /* bodypart-> */
{
	StrengthModifier = 250;
	FormModifier = 10;
	NameSingular = "torso";
	IsAbstract = true;
	Roundness = 60;
}

normaltorso /* bodypart->torso-> */
{
}

humanoidtorso /* bodypart->torso-> */
{
}

arm /* bodypart-> */
{
	StrengthModifier = 75;
	FormModifier = 15;
	IsAbstract = true;
	Roundness = 15;
}

rightarm /* bodypart->arm-> */
{
	NameSingular = "right arm";
}

leftarm /* bodypart->arm-> */
{
	NameSingular = "left arm";
}

groin /* bodypart-> */
{
	StrengthModifier = 150;
	FormModifier = 10;
	NameSingular = "groin";
	Roundness = 40;
}

leg /* bodypart-> */
{
	StrengthModifier = 100;
	FormModifier = 15;
	IsAbstract = true;
	Roundness = 20;
}

rightleg /* bodypart->leg-> */
{
	NameSingular = "right leg";
}

leftleg /* bodypart->leg-> */
{
	NameSingular = "left leg";
}

headofelpuri /* cannot wear helmet etc, so NOT head-> */
{
	Possibility = 0;
	CanBeWished = false;
	DefaultSize = 60;
	Score = 2000;
	IsDestroyable = false;
	Category = MISC;
	InHandsPic = 160, 144;
	StrengthModifier = 150;
	FormModifier = 15;
	BitmapPos = 16, 0;
	DefaultMainVolume = 25000;
	NameSingular = "head of Elpuri";
	ArticleMode = DEFINITE_ARTICLE;
	MainMaterialConfig == ELPURI_FLESH;
	IsPolymorphable = false;
	Roundness = 80;
	IsTwoHanded = true;
	NPModifier = 100;
	CanBeCloned = false;
}

corpse
{
	Possibility = 0;
	Category = FOOD;
	InHandsPic = 160, 144;
	IsAutoInitializable = false;
	IsPolymorphSpawnable = false;
	StrengthModifier = 100;
	FormModifier = 15;
	NPModifier = 100;
	NameSingular = "corpse";
	OKVisualEffects = ROTATE|MIRROR|FLIP;
	Roundness = 50;
	IsTwoHanded = true;
	CanBeWished = false; /* temporary */
	IsMaterialChangeable = false;
}

wandoflocking /* wand-> */
{
	Possibility = 50;
	Price = 100;
	PostFix = "of locking";
	MainMaterialConfig == COPPER;
	BeamRange = 10;
	MinCharges = 3;
	MaxCharges = 6;
}

wandofresurrection /* wand-> */
{
	Possibility = 25;
	Price = 500;
	PostFix = "of resurrection";
	MainMaterialConfig == BONE;
	BeamRange = 5;
	MinCharges = 1;
	MaxCharges = 3;
}

whistle
{
	Possibility = 50;
	Category = TOOL;
	DefaultMainVolume = 50;
	StrengthModifier = 50;
	BitmapPos = 0, 416;
	FormModifier = 25;
	DefaultSize = 30;
	NameSingular = "whistle";
	MainMaterialConfig == TIN;
	Roundness = 10;
	Price = 20;
}

magicalwhistle /* whistle-> */
{
	Possibility = 5;
	MainMaterialConfig == RUBY;
	NameSingular = "whistle";
	Adjective = "magical";
	Price = 1500;
	Alias == "magic whistle";
	CanBePiled = false;
}

itemcontainer
{
	CanBeGeneratedInContainer = false;
	Roundness = 60;
	IsTwoHanded = true;
	FormModifier = 15;
	MainMaterialConfig == WOOD;
	Roundness = 60;
	CanBePiled = false;
	IsAbstract = true;
	IsPolymorphSpawnable = false;
	IsDestroyable = false;

	Config SMALL_CHEST;
	{
		NameSingular = "chest";
		Adjective = "small";
		DefaultSize = 50;
		StorageVolume = 30000;
		DefaultMainVolume = 4000;
		Price = 75;
		Possibility = 100;
		MaxGeneratedContainedItems = 3;
		BitmapPos = 64, 48;
		DamageDivider = 2;
		StrengthModifier = 100;
	}

	Config CHEST;
	{
		NameSingular = "chest";
		StorageVolume = 250000;
		DefaultMainVolume = 30000;
		DefaultSize = 100;
		Price = 150;
		Possibility = 50;
		MaxGeneratedContainedItems = 5;
		BitmapPos = 48, 80;
		DamageDivider = 3;
		StrengthModifier = 150;
	}

	Config LARGE_CHEST;
	{
		NameSingular = "chest";
		Adjective = "large";
		DefaultSize = 200;
		StorageVolume = 2000000;
		DefaultMainVolume = 240000;
		Price = 250;
		Possibility = 10;
		MaxGeneratedContainedItems = 10;
		BitmapPos = 48, 64;
		DamageDivider = 4;
		StrengthModifier = 200;
	}

	Config STRONG_BOX;
	{
		Adjective = "small";
		NameSingular = "strong-box";
		DefaultSize = 30;
		StorageVolume = 5000;
		DefaultMainVolume = 250;
		Price = 250;
		Possibility = 10;
		MaxGeneratedContainedItems = 3;
		MainMaterialConfig == IRON;
		BitmapPos = 48, 368;
		DamageDivider = 5;
		StrengthModifier = 150;
	}
}

wandofdoorcreation /* wand-> */
{
	Possibility = 50;
	Price = 200;
	PostFix = "of door creation";
	MainMaterialConfig == WOOD;
	MinCharges = 3;
	MaxCharges = 6;
}

beartrap
{
	MainMaterialConfig == IRON;
	NameSingular = "bear trap";
	Possibility = 100;
	/* Program overrides BitmapPos always */
	IsTwoHanded = true;
	DefaultSize = 50;
	DefaultMainVolume = 500;
	FormModifier = 30;
	Roundness = 30;
	Price = 10;
	CanBePiled = false;
	CanBeBroken = true;

	Config BROKEN;
	{
		Possibility = 10;
		BitmapPos = 48, 48;
	}
}

wandofinvisibility /* wand-> */
{
	Possibility = 50;
	Price = 250;
	PostFix = "of invisibility";
	MainMaterialConfig == GLASS;
	BeamRange = 10;
	MinCharges = 3;
	MaxCharges = 6;
}

helmet
{
	DefaultSize = 30;
	Possibility = 350;
	Category = HELMET;
	DefaultMainVolume = 150;
	StrengthModifier = 100;
	BitmapPos = 16, 384;
	FormModifier = 10;
	NameSingular = "helmet";
	MainMaterialConfig = { 12, LEATHER, HARDENED_LEATHER, TROLL_HIDE, WOOD, BONE, STONE, TIN, COPPER, BRONZE, IRON, STEEL, MITHRIL; }
	MaterialConfigChances = { 12, 50, 75, 30, 40, 30, 50, 10, 75, 50, 25, 10, 5; }
	Roundness = 60;
	CanBeBroken = true;

	Config BROKEN;
	{
		BitmapPos = 64, 64;
		Possibility = 35;
	}

	Config FULL_HELMET;
	{
		DefaultSize = 40;
		DefaultMainVolume = 250;
		StrengthModifier = 150;
		FormModifier = 25;
		BitmapPos = 48, 32;
		Possibility = 35;
		Adjective = "full";
		MainMaterialConfig = { 5, COPPER, BRONZE, IRON, STEEL, MITHRIL; }
		MaterialConfigChances = { 5, 125, 100, 75, 25, 5; }
	}

	Config BROKEN|FULL_HELMET;
	{
		BitmapPos = 64, 32;
		Possibility = 3;
	}

	Config HELM_OF_PERCEPTION;
	{
		DefaultSize = 40;
		DefaultMainVolume = 250;
		StrengthModifier = 150;
		FormModifier = 25;
		BitmapPos = 48, 32;
		Possibility = 15;
		PostFix = "of piercing perception";
		AffectsPerception = true;
		MainMaterialConfig == GLASS;
		MaterialConfigChances == 100;
		DefaultEnchantment = 1;
		Price = 100;
		PriceIsProportionalToEnchantment = true;
	}

	Config BROKEN|HELM_OF_PERCEPTION;
	{
		BitmapPos = 64, 32;
		Possibility = 1;
	}

	Config HELM_OF_UNDERSTANDING;
	{
		DefaultSize = 40;
		DefaultMainVolume = 250;
		StrengthModifier = 150;
		FormModifier = 25;
		BitmapPos = 48, 32;
		Possibility = 10;
		PostFix = "of understanding";
		AffectsWisdom = true;
		MainMaterialConfig == UNICORN_HORN;
		MaterialConfigChances == 100;
		DefaultEnchantment = 1;
		Price = 100;
		PriceIsProportionalToEnchantment = true;
	}

	Config BROKEN|HELM_OF_UNDERSTANDING;
	{
		BitmapPos = 64, 32;
		Possibility = 1;
	}

	Config HELM_OF_BRILLIANCE;
	{
		DefaultSize = 40;
		DefaultMainVolume = 250;
		StrengthModifier = 150;
		FormModifier = 25;
		BitmapPos = 48, 32;
		Possibility = 10;
		PostFix = "of brilliance";
		AffectsIntelligence = true;
		MainMaterialConfig == MITHRIL;
		MaterialConfigChances == 100;
		DefaultEnchantment = 1;
		Price = 100;
		PriceIsProportionalToEnchantment = true;
	}

	Config BROKEN|HELM_OF_BRILLIANCE;
	{
		BitmapPos = 64, 32;
		Possibility = 1;
	}

	Config HELM_OF_ATTRACTIVITY;
	{
		DefaultSize = 40;
		DefaultMainVolume = 250;
		StrengthModifier = 150;
		FormModifier = 25;
		BitmapPos = 48, 32;
		Possibility = 15;
		PostFix = "of attractivity";
		AffectsCharisma = true;
		MainMaterialConfig == GOLD;
		MaterialConfigChances == 100;
		DefaultEnchantment = 1;
		Price = 100;
		PriceIsProportionalToEnchantment = true;
	}

	Config BROKEN|HELM_OF_ATTRACTIVITY;
	{
		BitmapPos = 64, 32;
		Possibility = 1;
	}
}

stethoscope
{
	DefaultSize = 40;
	Possibility = 25;
	Category = TOOL;
	DefaultMainVolume = 200;
	StrengthModifier = 50;	
	BitmapPos = 48, 96;
	FormModifier = 10;
	Roundness = 20;
	NameSingular = "stethoscope";
	Price = 250;
	MainMaterialConfig == UNICORN_HORN;
}

flamingsword /* meleeweapon-> */
{
	DefaultSize = 120;
	Possibility = 25;
	InHandsPic = 160, 16;
	WeaponCategory = LARGE_SWORDS;
	DefaultMainVolume = 130;
	DefaultSecondaryVolume = 45;
	BitmapPos = 16, 336;
	FormModifier = 100;
	StrengthModifier = 100;
	NameSingular = "sword";
	Adjective = "flaming";
	MainMaterialConfig =  { 3, BRONZE, IRON, MITHRIL; }
	SecondaryMaterialConfig = { 3, BRONZE, IRON, MITHRIL; }
	MaterialConfigChances = { 3, 150, 50, 10; }
	Roundness = 10;
	BaseEmitation = rgb24(150, 120, 90);
	Price = 250;

	Config BROKEN;
	{
		Possibility = 3;
		BitmapPos = 32, 208;
	}
}

mjolak /* meleeweapon-> */
{
	DefaultSize = 180;
	Possibility = 3;
	InHandsPic = 160, 176;
	WeaponCategory = POLE_ARMS;
	DefaultMainVolume = 400;
	DefaultSecondaryVolume = 2000;
	StrengthModifier = 200;
	BitmapPos = 0, 80;
	FormModifier = 225;
	MainMaterialConfig == STEEL;
	SecondaryMaterialConfig == WOOD;
	Roundness = 20;
	IsTwoHanded = true;
	Adjective = "unholy";
	NameSingular = "halberd";
	PostFix = "named Mjolak";
	ArticleMode = DEFINITE_ARTICLE;
	Alias == "Mjolak";
	CanBeCloned = false;
	Price = 750;
	Score = 750;

	Config BROKEN;
	{
		Possibility = 0;
		BitmapPos = 32, 144;
		Price = 0;
	}
}

vermis /* meleeweapon-> */
{
	DefaultSize = 220;
	Possibility = 5;
	InHandsPic = 160, 96;
	WeaponCategory = SPEARS;
	StrengthModifier = 100;
	BitmapPos = 16, 144;
	FormModifier = 250;
	DefaultMainVolume = 100;
	DefaultSecondaryVolume = 1800;
	NameSingular = "spear";
	PostFix = "named Vermis";
	MainMaterialConfig == DIAMOND;
	SecondaryMaterialConfig == WOOD;
	Roundness = 10;
	IsTwoHanded = true;
	Alias == "Vermis";
	ArticleMode = DEFINITE_ARTICLE;
	CanBeCloned = false;
	Price = 500;
	Score = 750;

	Config BROKEN;
	{
		Possibility = 0;
		BitmapPos = 32, 224;
		Price = 0;
	}
}

turox /* meleeweapon-> */
{
	StrengthModifier = 150; 
	FormModifier = 200;
	DefaultSize = 90;
	BitmapPos = 0, 32;
	Possibility = 5;
	InHandsPic = 160, 192;
	DefaultMainVolume = 800;
	DefaultSecondaryVolume = 600;
	WeaponCategory = MACES;
	NameSingular = "mace";
	PostFix = "named Turox";
	MainMaterialConfig == STEEL;
	SecondaryMaterialConfig == WOOD;
	Roundness = 30; /* we count the handle, too */
	IsTwoHanded = true;
	Alias == "Turox";
	ArticleMode = DEFINITE_ARTICLE;
	CanBeCloned = false;
	Price = 250;
	Score = 750;

	Config BROKEN;
	{
		Possibility = 0;
		BitmapPos = 32, 112;
		Price = 0;
	}
}

whipofthievery /* meleeweapon->whip-> */
{
	DefaultSize = 250;
	Possibility = 10;
	DefaultMainVolume = 1000;
	DefaultSecondaryVolume = 50;
	StrengthModifier = 30;
	NameSingular = "whip";
	PostFix = "of thievery";
	MainMaterialConfig == NYMPH_HAIR;
	SecondaryMaterialConfig == DIAMOND;
	Roundness = 2;
	FormModifier = 25; /* this is multiplied by MainMaterial's flexibility */
	CanBeCloned = false;
	Price = 1000;
}

wandofcloning /* wand-> */
{
	Possibility = 25;
	Price = 1000;
	IsPolymorphSpawnable = false;
	PostFix = "of cloning";
	MainMaterialConfig == MARBLE;
	BeamRange = 5;
	MinCharges = 1;
	MaxCharges = 3;
	CanBeCloned = false;
}

scrollofenchantweapon /* scroll-> */
{
	Possibility = 50;
	Price = 250;
	PostFix = "of enchant weapon";
}

scrollofenchantarmor /* scroll-> */
{
	Possibility = 100;
	Price = 250;
	PostFix = "of enchant armor";
}

skull
{
	InHandsPic = 160, 144;
	StrengthModifier = 100;
	FormModifier = 15;
	Roundness = 65;
	DefaultSize = 20;
	Possibility = 30;
	WeaponCategory = UNCATEGORIZED;
	DefaultMainVolume = 600;
	BitmapPos = 48, 112;
	Category = MISC;
	NameSingular = "skull";
	MainMaterialConfig == BONE;
	IsTwoHanded = true;
}

gorovitshammer
{
	DefaultSize = 90;
	Possibility = 0;
	InHandsPic = 176, 16;
	WeaponCategory = HAMMERS;
	DefaultMainVolume = 300;
	DefaultSecondaryVolume = 600;
	StrengthModifier = 125;
	BitmapPos = 48, 160;
	FormModifier = 70;
	Adjective = "Gorovits family";
	NameSingular = "hammer";
	MainMaterialConfig == MITHRIL;
	SecondaryMaterialConfig == WOOD;
	Roundness = 20;
	IsTwoHanded = true;
	CanBeUsedBySmith = true;
	CanBeBroken = false;
	CanBeWished = false;
	DefaultEnchantment = 2;
	ArticleMode = DEFINITE_ARTICLE;
	Price = 250;
}

gorovitssickle
{
	DefaultSize = 60;
	Possibility = 0;
	InHandsPic = 160, 64; /* fix */
	WeaponCategory = AXES;
	DefaultMainVolume = 125;
	DefaultSecondaryVolume = 50;
	BitmapPos = 48, 144;
	FormModifier = 60;
	StrengthModifier = 50;
	Adjective = "Gorovits family";
	NameSingular = "sickle";
	MainMaterialConfig == MITHRIL;
	SecondaryMaterialConfig == WOOD;
	Roundness = 50;
	CanBeBroken = false;
	CanBeWished = false;
	DefaultEnchantment = 2;
	ArticleMode = DEFINITE_ARTICLE;
	Price = 250;
}

scrollofrepair /* scroll-> */
{
	Possibility = 50;
	Price = 250;
	PostFix = "of repair";
	Alias == "scroll of repairing";
}

encryptedscroll /* scroll-> */
{
	AdjectiveArticle = "an";
	Adjective = "encrypted";
	CanBeWished = false;
	IsDestroyable = false;
	IsMaterialChangeable = false;
	IsPolymorphable = false;
	CanBeCloned = false;
}

horn
{
	InHandsPic = 160, 128;
	StrengthModifier = 70;
	FormModifier = 30;
	Roundness = 40;
	DefaultSize = 30;
	Possibility = 10;
	WeaponCategory = CLUBS;
	DefaultMainVolume = 400;
	BitmapPos = 48, 304;
	Category = TOOL;
	NameSingular = "horn";
	IsAbstract = true;
	Price = 500;
	CanBePiled = false;

	Config BRAVERY;
	{
		MainMaterialConfig == SILVER;
		PostFix = "of bravery";
	}

	Config FEAR;
	{
		MainMaterialConfig == STONE;
		PostFix = "of fear";
	}
}
