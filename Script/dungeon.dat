Dungeons=2;
Teams=8;

/*
 * Description of teams:
 * 0 - Player and pets
 * 1 - Monsters, default relation to other teams == hostile
 * 3 - Petrus's team during the Final Battle
 */

Team 2; /* Residents of Attnam */
{
	Relation 0, FRIEND;
	AttackEvilness=250;
}

Team 4; /* Enner Beasts */
{
	Relation 0, HOSTILE;
	Relation 2, HOSTILE;
	Relation 3, HOSTILE;
}

Team 5; /* Spawned hostile angels */
{
	Relation 0, HOSTILE;
	Relation 1, NEUTRAL;
	Relation 4, HOSTILE;
}

Team 6; /* Dungeon shopkeepers */
{
	Relation 1, NEUTRAL;
	Relation 4, HOSTILE;
	AttackEvilness=100;
}

Team 7; /* Ivan */
{
	Relation 4, HOSTILE;
	AttackEvilness=100;
}

Dungeon 0;
{
	Levels=10;

	LevelDefault
	{
		FillSquare=ground,earth;

		Size=64,36;
		Rooms=10+rand%21;
		Items=10+rand%21;
		GenerateMonsters=true;
		ReCalculate=true;
		GenerateUpStairs=true;
		GenerateDownStairs=true;
		OnGround=false;
		TeamDefault=1;
		AmbientLight=0;
		LOSModifier=16;

		Square, Random { Walkable=false; }
		{
			Item = astone;
			Times = 25+rand%25;
		}

		RoomDefault
		{
			Pos=2+rand%(XSize-6),2+rand%(YSize-6);
			Size=4+rand%8,4+rand%8;
			AltarPossible=true;
			WallSquare=ground,wall;
			FloorSquare=parquet,empty;
			DoorSquare=parquet,door;
			GenerateDoor=true;
			ReCalculate=true;
			DivineOwner=0;
			GenerateTunnel=true;
			GenerateLanterns=true;
			Type=normalroom;
			GenerateFountains=true;
			AllowLockedDoors=true;
		}
	}

	Level 0;
	{
		GenerateUpStairs=false;

		RoomDefault
		{
			AltarPossible=false;
		}

		Square, Random { Walkable=true; }
		{
			Character=spider;
			Times=20;
		}

		Square, Random { Walkable=true; }
		{
			Character=kobold;
			Times=10;
		}

		Room 0;
		{
			Size=5,5;
			AllowLockedDoors=false;

			Square, Pos 2,2;
			{
				IsWorldMapEntry=true;
				OTerrain=stairsup;
			}

			Square, Pos 3,1;
			{
				Item=lantern;
			}
		}
	}

	Level 2+rand%2;
	{
		LevelMessage="You hear many wolves howling. You shiver.";
		Rooms=10+rand%21;

		Room 1;
		{
			Size=7,7;
			AltarPossible=false;

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					W=wolf;
					w=werewolf;
				}
			}
			{
				WWWWW
				WWWWW
				WWwWW
				WWWWW
				WWWWW
			}
		}
	}

	Level 2+rand%2;
	{
		Rooms=10+rand%21;

		Room 2;
		{
			Size=5,7;
			AltarPossible=false;
			DivineOwner=10;
			Type=shop;
			AllowLockedDoors=false;
			GenerateFountains=false;

			Square, Pos 1,1;
			{
				Character=guard { Team=6; }
			}

			Square, Pos 3,1;
			{
				Character=guard { Team=6; }
			}

			Square, Pos 1,5;
			{
				Character=guard { Team=6; }
			}

			Square, Pos 3,5;
			{
				Character=guard { Team=6; }
			}

			Square, Pos 2,3;
			{
				Character=shopkeeper { Team=6; }
			}

			ItemMap
			{
				Pos=1,1;
				Size=3,5;

				Types
				{
					c = scrollofchangematerial;
					L = iron longsword;
					C = mithril chainmail;
					s = wandofstriking;
					a = lantern;
					l = bread loaf;
					t = scrollofteleport;
					g = iron goblinoidflesh can;
					p = iron poleaxe;
					B = beef loaf;
				}
			}
			{
			    .B.
			    pag
			    t.c
			    LlC
			    .s.
			}
		}
	}

	Level 4;
	{
		LevelMessage="You hear a wailing scream in the distance. An Enner Beast must dwell in the level!";
		Rooms=10+rand%21;

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=ennerbeast { Team=4; }
		}
	}

	Level 5;
	{
		LevelMessage="You hear someone singing loudly: \"Uncle Lenin lives in Russia...\"";
		Rooms=10+rand%21;

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=ivan { Team=7; }
		}
	}

	Level 6;
	{
		Description=DarkLevel;
		LevelMessage="You shudder as you sense a being of pure darkness nearby. Your goal is near.";
		FillSquare=floor, iron wall;
		Items=0;
		GenerateDownStairs=false;

		RoomDefault
		{
			AltarPossible=false;
			WallSquare=floor, iron wall;
			DoorSquare=parquet,iron door;
			GenerateLanterns=false;
		}

		Square, Random { Walkable=true; InRoom=true; }
		{
			Character=elpuri;
		}
	}

	Level 5+rand%4;
	{
		Rooms=10+rand%21;

		Room 1;
		{
			Size=7,7;
			AltarPossible=false;

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					G=golem;
				}
			}
			{
				GGGGG
				GGGGG
				GGGGG
				GGGGG
				GGGGG
			}
		}
	}

	Level 8;
	{
		GenerateDownStairs=false;

		Room 0;
		{
			Size=7,7;
			AltarPossible=false;
			WallSquare=ground,iron wall;
			FloorSquare=parquet,empty;
			DoorSquare=parquet,iron door;

			Square, Pos 3,3;
			{
				OTerrain=iron stairsdown;
			}

			Square, Pos 3,5;
			{
				IsDownStairs=true;
			}
		}
	}

	Level 9;
	{
		Description=OreeLair;
		LevelMessage="\"Welcome to my lair, mortal! There's no escape now!\" Suddenly the stairs disappear.";
		FillSquare=floor, iron wall;
		Rooms=1;
		GenerateMonsters=false;
		GenerateUpStairs=false;
		GenerateDownStairs=false;
		Items=0;
		ReCalculate=false;

		Room 0;
		{
			Size=7,7;
			AltarPossible=false;
			WallSquare=floor, iron wall;
			FloorSquare=parquet,empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineOwner=17;
			GenerateFountains=false;

			Square, Pos 3,1;
			{
				OTerrain = iron altar;
			}

			Square, Pos 3,3;
			{
				IsUpStairs=true;
			}

			Square, Pos 3,5;
			{
				OTerrain=iron stairsup;
			}

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					O=oree;
					B=darkknight;
					G=blood golem;
				}
			}
			{
				..O..
				.BBB.
				GB.BG
				.BBB.
				..G..
			}
		}
	}
}

Dungeon 1;
{
	Levels=1;

	Level 0;
	{
		Description=Attnam;
		FillSquare=grassterrain,empty;
		Size=61,62;
		GenerateMonsters=false;
		Rooms=25 + rand % 6;
		Items=0;
		ReCalculate=false;
		GenerateUpStairs=false;
		GenerateDownStairs=false;
		OnGround=true;
		TeamDefault=2;
		AmbientLight=225;
		LOSModifier=48;

		RoomDefault
		{
			Pos=2+rand%(XSize-6),2+rand%(YSize-6);
			Size=4+rand%8,4+rand%8;
			AltarPossible=false;
			WallSquare=grassterrain,wall;
			FloorSquare=parquet,empty;
			DoorSquare=parquet,door;
			GenerateDoor=true;
			ReCalculate=true;
			DivineOwner=0;
			GenerateTunnel=false;
			GenerateLanterns=true;
			Type=normalroom;
			GenerateFountains=false;
			AllowLockedDoors=false;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			OTerrain=pine;
			Times=50;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			OTerrain=spruce;
			Times=200;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=hunter;
			Times=10;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=polarbear;
			Times=5;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=farmer;
			Times=5;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=housewife;
			Times=5;
		}

		Square, Pos 30,61;
		{
			IsWorldMapEntry=true;
		}
	
		Room 0;
		{
			Pos=10,10;
			Size=41,42;
			AltarPossible=false;
			WallSquare=grassterrain,mithril wall;
			FloorSquare=grassterrain,empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineOwner=1;
			GenerateLanterns=false;
			Type=cathedral;
			
			Square, Pos 19, 41;
			{
				OTerrain = empty;
			}

			Square, Pos 20, 41;
			{
				OTerrain = empty;
			}

			Square, Pos 21, 41;
			{
				OTerrain = empty;
			}
			
			GTerrainMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = marble floor;
					- = marble floor;
					~ = pool;
				}
			}
			{
				. . . . . . . . . . . . # # # # # # # # # . . . . . . . . . . . .
				. . . . . . . . . . . . # - - - - - - - # . . . . . . . . . . . .
				# # # # . . . . . . # # # - - - - - - - # # # . . . . . . # # # #
				# - - # . . . . . . # - - - - - - - - - - - # . . . . . . # - - #
				# - - # . . . . # # # - - - - - - - - - - - # # # . . . . # - - #
				# - - # . . . . # - - - - - - - - - - - - - - - # . . . . # - - #
				# - - # # # . . # - - - - - - - - - - - - - - - # . . # # # - - #
				# - - - - # . . # - - - - - - - - - - - - - - - # . . # - - - - #
				# - - - - # . . # - - - - - - - - - - - - - - - # . . # - - - - #
				# # # - - # . . # # # - - - - - - - - - - - # # # . . # - - # # #
				. . # - - # # # . . # - - - - - - - - - - - # . . # # # - - # . .
				. . # - - - - # . . # - - - - - - - - - - - # . . # - - - - # . .
				. . # # # - - # # # # - - - - - - - - - - - # # # # - - # # # . .
				. . . . # - - - - - # - - - - - - - - - - - # - - - - - # . . . .
				. . . . # - - - - - # - - - - - - - - - - - # - - - - - # . . . .
				. . . . # # # # - - # - - - - - - - - - - - # - - # # # # . . . .
				. . . . . . . # - - # - - - - - - - - - - - # - - # . . . . . . .
				. . . . . . # # # - # - - - - - - - - - - - # - # # # . . . . . .
				. . # # # # # - # - # - - - - - - - - - - - # - # - # # # # # . .
				. # # - - - - - - - # - - - - - - - - - - - # - - - - - - - # # .
				. # - - - ~ ~ ~ # - # - - - - - - - - - - - # - # - - - - - - # .
				. # - - - ~ ~ ~ # - # - - - - - - - - - - - # - # - - - - - - # .
				. # # - - ~ ~ ~ # - # - - - - - - - - - - - # - # - - - - - # # .
				. . # # - ~ ~ ~ # - # - - - - - - - - - - - # - # - - - - # # . .
				. . . # # ~ ~ ~ # - # # # # # # - # # # # # # - # - - - # # . . .
				. . . . # ~ ~ ~ # - - - - - - - - - - - - - - - # - - - # . . . .
				. . . . # ~ ~ ~ # - - - - - - - - - - - - - - - # - - - # . . . .
				. . . # # # # # # # - - - # # # - # # # - - - # # # # # # # . . .
				# # # # - - - - - - - - - # . . . . . # - - - - - - - - - # # # #
				# - - - - - - - - # # # # # . . . . . # # # # # - - - - - - - - #
				# - - - - - - - - # . . . . . . . . . . . . . # - - - - - - - - #
				# # - - - # # # # # . . . . . . . . . . . . . # # # # # - - - # #
				. # # - - # . . . . . . . . . . . . . . . . . . . . . # - - # # .
				. . # # # # . . . . . . . . . . . . . . . . . . . . . # # # # . .
			}

			OTerrainMap
			{
				Pos=1,1;
				Size=39,40;
				Types
				{
					# = valpurium wall;
					T = throne;
					c = carpet;
					A = valpurium altar;
					D = valpurium door;
					L = valpurium door { Locked = true; }
					b = linden;
					1 = poolcorner { VisualFlags = NONE; }
					2 = poolcorner { VisualFlags = MIRROR; }
					3 = poolcorner { VisualFlags = MIRROR | FLIP; }
					4 = poolcorner { VisualFlags = FLIP; }
					5 = poolborder { VisualFlags = NONE; }
					6 = poolborder { VisualFlags = ROTATE; }
					7 = poolborder { VisualFlags = FLIP; }
					8 = poolborder { VisualFlags = MIRROR | ROTATE; }
					s = couch;
					= = bookcase;
					f = fountain;
					d = doublebed;
				}
			}
			{
				b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b
				. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
				b . . . b . . . b . . b . . . b . b . b . b . b . . . b . . b . . . b . . . b
				. . b . . . b . . . . . . . . # # # # # # # # # . . . . . . . . b . . . b . .
				b . . . . b . . . . . . . b b # . . . . . . . # b b . . . . . . . b . . . . b
				. . . # # # # b . . b . . # # # . . . . . . . # # # . . b . . b # # # # . . .
				b . b # . . # . b . . . . # . . . . . . . . . . . # . . . . b . # . = # b . b
				. . . # . . # . . . . # # # . . . . . . . . . . . # # # . . . . # . = # . . .
				b . b # . . # b . . b # . . . . . T . . . T . . . . . # b . . b # . = # b . b
				. . . # . . # # # . . # . . . . . . . c . . . . . . . # . . # # # . = # . . .
				b . b # . . . . # . b # . . . . . . . c . . . . . . . # b . # . . . = # b . b
				. . . # . . . . # . . # . . . . . . . c . . . . . . . # . . # . . . = # . . .
				b . b # # # . . # b . # # # . . . . . c . . . . . # # # . b # . = # # # b . b
				. . . . b # . . # # # . b # . . . . . c . . . . . # b . # # # . = # b . . . .
				b . . . . # . . . . # . . # . . . . . c . . . . . # . . # . . . = # . . . . b
				. . b b . # # # . . # # # # . . . . . c . . . . . # # # # . = # # # . b b . .
				b . . . . . b # . . . . . # . . . . . c . . . . . # = . . . = # b . . . . . b
				. b . . b . . # . . . . . # . . . . . c . . . . . # = . . . = # . . b . . b .
				b . . b . . . # # # # . . # . . . . . c . . . . . # = . # # # # . . . b . . b
				b . . . . b . . . . # . . # . . . . . c . . . . . # . . # . . . . b . . . . b
				. b . b . . . . b # # # D # . . . . . c . . . . . # D # # # b . . . . b . b .
				b . . . b # # # # # . # . # . . . . . c . . . . . # . # . # # # # # b . b . b
				. . . . # # . . . . . D . # . . . . . c . . . . . # . D . . . . . # # . . . .
				b . . b # . s . 1 5 2 # . # . . . . . c . . . . . # . # . . . . . . # b . . b
				. b . . # . . . 8 . 6 # . # . . . . . c . . . . . # . # . . A . . . # . . b .
				b . . . # # . . 8 . 6 # . # . . . . . c . . . . . # . # . . . . . # # . . . b
				. . . . b # # . 8 . 6 # . # . . . . . . . . . . . # . # . . . . # # b . . . .
				b . b . . b # # 8 . 6 # . # # # # # # D # # # # # # . # . . . # # b . . b . b
				. . . . . . . # 8 . 6 # . . . . . . . . . . . . . . . # . . . # . . . . . . .
				b . . . b . b # 4 7 3 # . . . . . . . . . . . . . . . # . . . # b . b . . . b
				. b . . . . # # # # # # # . . . # # # D # # # . . . # # # # # # # . . . . b .
				b . . # # # # . s . s . D . . . # . b . b . # . . . L . . . . . # # # # . . b
				. . b # . d . . . . . . # # # # # . . . . . # # # # # . . . . . . . . # b . .
				b . . # . . . . s . s . # b . . b . . . . . b . . b # . . . . . . . . # . . b
				. b . # # . . . # # # # # . b b . . b . b . . b b . # # # # # . . . # # . b .
				b . . b # # s . # b . b . . . . . . f . f . . . . . . b . b # . . # # b . . b
				. . . . b # # # # . . . . b . . . . . . . . . . . b . . . . # # # # b . . . .
				b . b . . . b . . . b . . . . . . . b . b . . . . . . . b . . . b . . . b . b
				. . . . . . . . . . . . . . . b b . . . . . b b . . . . . . . . . . . . . . .
				b . b . b . b . b . b . b . b . . b . . . b . . b . b . b . b . b . b . b . b
			}

			ItemMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = 0;
					a = avatarofvalpurus;
					b = banana;
					k = kiwi;
					p = pineapple;
					o = iron poleaxe;
					l = mithril longsword;
					t = iron twohandedsword;
					m = iron spikedmace;
					s = iron spear;
					c = chainmail;
					e = backpack;
					g = gold astone;
					i = silver astone;
					h = sapphire astone;
					r = ruby astone;
					d = diamond astone;
				}
			}
			{
				. . . . . . . . . . . . # # # # # # # # # . . . . . . . . . . . .
				. . . . . . . . . . . . # . . . . . . . # . . . . . . . . . . . .
				# # # # . . . . . . # # # . . . . . . . # # # . . . . . . # # # #
				# . . # . . . . . . # . . . . . . . . . . . # . . . . . . # . . #
				# . . # . . . . # # # . . . . . . . . . . . # # # . . . . # . . #
				# . . # . . . . # . . . d . . . . . a . d . . . # . . . . # . . #
				# . . # # # . . # . . . . . . p . p . . . . . . # . . # # # . . #
				# . . . e # . . # . . . . . . b . b . . . . . . # . . # . . . . #
				# . . . e # . . # . . . . . . k . k . . . . . . # . . # . . . . #
				# # # . e # . . # # # . r . . p . p . . r . # # # . . # . . # # #
				. . # . e # # # . . # . . . . b . b . . . . # . . # # # . . # . .
				. . # . . . . # . . # . . . . k . k . . . . # . . # . . . . # . .
				. . # # # . . # # # # . . . . p . p . . . . # # # # . . # # # . .
				. . . . # . . . . . # . h . . b . b . . h . # . . . . . # . . . .
				. . . . # . . . . . # . . . . k . k . . . . # . . . . . # . . . .
				. . . . # # # # . . # . . . . p . p . . . . # . . # # # # . . . .
				. . . . . . . # . . # . . . . b . b . . . . # . . # . . . . . . .
				. . . . . . # # # . # . i . . k . k . . i . # . # # # . . . . . .
				. . # # # # # . # . # . . . . p . p . . . . # . # . # # # # # . .
				. # # . . . . . . . # . . . . b . b . . . . # . . . . . . . # # .
				. # . . . . . . # . # . . . . k . k . . . . # . # . . . . . . # .
				. # . . . . . . # . # . g . . p . p . . g . # . # . . . . . . # .
				. # # . . . . . # . # . . . . b . b . . . . # . # . . . . . # # .
				. . # # . . . . # . # . . . . . . . . . . . # . # . . . . # # . .
				. . . # # . . . # . # # # # # # . # # # # # # . # . . . # # . . .
				. . . . # . . . # . . . . . . . . . . . . . . . # . . . # . . . .
				. . . . # . . . # . . . . . . . . . . . . . . . # . . . # . . . .
				. . . # # # # # # # . . . # # # . # # # . . . # # # # # # # . . .
				# # # # . . . . . . . . . # . . . . . # . . . . o o o o l # # # #
				# . . . . . . . . # # # # # . . . . . # # # # # . . . . . t t c #
				# . . . . . . . . # . . . . . . . . . . . . . # s s s s . . . c #
				# # . . . # # # # # . . . . . . . . . . . . . # # # # # m m . # #
				. # # . . # . . . . . . . . . . . . . . . . . . . . . # m m # # .
				. . # # # # . . . . . . . . . . . . . . . . . . . . . # # # # . .
			}

			CharacterMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = 0;
					P = petrus;
					c = guard;
					p = priest;
					d = dolphin;
					l = lightfrog;
					8 = librarian;
					s = femaleslave;
					1 = "petrusswife1";
					2 = "petrusswife2";
					3 = "petrusswife3";
					4 = "petrusswife4";
					5 = "petrusswife5";
					6 = "petrusswife6";
					k = kamikazedwarf;
				}
			}
			{
				. . . . . . . . . . . . # # # # # # # # # . . . . . . . . . . . .
				. . . . . . . . . . . . # c . . c . . c # . . . . . . . . . . . .
				# # # # . . . . . . # # # . . . . . . . # # # . . . . . . # # # #
				# k . # . . . . . . # c . . . . l . . . . c # . . . . . . # . . #
				# k . # . . . . # # # . . . . . . . . . . . # # # . . . . # . . #
				# k . # . . . . # c . . . s P s . s . s . . . c # . . . . # . . #
				# k . # # # . . # . . . . . . . . . . . . . . . # . . # # # . . #
				# k . . . # . . # . . l . . . . l . . . . l . . # . . # . . . . #
				# k . . . # . . # c . . . . . . . . . . . . . c # . . # . . . . #
				# # # . . # . . # # # . . . . . . . . . . . # # # . . # . . # # #
				. . # . . # # # . . # . . . . . . . . . . . # . . # # # . . # . .
				. . # . . . . # . . # c . l . . . . . l . c # . . # . . . . # . .
				. . # # # k . # # # # . . . . . . . . . . . # # # # . . # # # . .
				. . . . # k . . . k # . . . . . . . . . . . # . . 8 . . # . . . .
				. . . . # k . . . k # . . . . . . . . . . . # . . . . . # . . . .
				. . . . # # # # . k # c . . . . . . . . . c # . . # # # # . . . .
				. . . . . . . # . . # . . . . . . . . . . . # . . # . . . . . . .
				. . . . . . # # # . # . . . . . . . . . . . # . # # # . . . . . .
				. . # # # # # c # . # . . . . . . . . . . . # . # . # # # # # . .
				. # # . . . . . . . # c . . . . . . . . . c # . . . . . . . # # .
				. # . . . . . . # . # . . . . . . . . . . . # . # . . p . . . # .
				. # . . . . d . # . # . . . . . . . . . . . # . # . . . . . . # .
				. # # . . . d . # . # . . . . . . . . . . . # . # . . . . . # # .
				. . # # . d . d # . # c . . . . . . . . . c # . # . . . . # # . .
				. . . # # . d . # . # # # # # # . # # # # # # . # . . . # # . . .
				. . . . # . d . # . . . . . . c . c . . . . . . # . . . # . . . .
				. . . . # . . . # . . . . . . . . . . . . . . . # . . . # . . . .
				. . . # # # # # # # . . . # # # . # # # . . c # # # # # # # . . .
				# # # # . 3 . 5 . . . . . # c . . . c # . . c . . . . . . # # # #
				# . 1 . . . . . . # # # # # . . . . . # # # # # . . . . . . . . #
				# . . . . 4 . 6 . # . . . . . . . . . . . . . # . . . . . . . . #
				# # . . . # # # # # . . . . . . . . . . . . . # # # # # . . . # #
				. # # 2 . # . . . . . . . . . . . . . . . . . . . . . # . . # # .
				. . # # # # . . . . . . . . . . . . . . . . . . . . . # # # # . .
			}
		}

		Room 1;
		{
			Pos=32,54;
			Size=7,5;
			AltarPossible=false;
			WallSquare=grassterrain,wall;
			FloorSquare=parquet,empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineOwner=10;
			Type=shop;
			
			Square, Pos 3, 4;
			{
				GTerrain = parquet;
				OTerrain = door;
			}

			Square, Pos 1, 1;
			{
				Character = slave;
			}

			Square, Pos 5, 1;
			{
				Character = shopkeeper;
			}

			ItemMap
			{
				Pos=1,1;
				Size=5,3;
				Types
				{
					t = scrollofteleport;
					s = stone spear;
					p = pickaxe;
					A = pineapple;
					b = banana;
					l = wolfflesh lump;
					i = iron polarbearflesh can;
					L = bread loaf;
					a = lantern;
					P = glass omleurine potion;
					C = chainmail;
					w = whip;
				}
			}
			{
			    .spw.
			    bLlCP
			    tiAat
			}
		}

		Room 2;
		{
			Pos=54,55;
			Size=5,5;
			WallSquare=grassterrain,gold wall;
			GenerateDoor=false;
			DivineOwner=2;
			Type=temple;

			Square, Pos 2, 0;
			{
				GTerrain = parquet;
				OTerrain = gold door;
			}

			Square, Pos 2, 2;
			{
				OTerrain = gold altar;
			}

			Square, Pos 2, 3;
			{
				Character = priest;
			}
		}

		Room 3;
		{
			Pos=2,55;
			Size=5,5;
			WallSquare=grassterrain,marble wall;
			GenerateDoor=false;
			DivineOwner=4;
			Type=temple;

			Square, Pos 4, 2;
			{
				GTerrain = parquet;
				OTerrain = marble door;
			}

			Square, Pos 2, 2;
			{
				OTerrain = marble altar;
			}

			Square, Pos 1, 2;
			{
				Character = priest;
			}
		}

		Room 4;
		{
			Pos=54,2;
			Size=5,5;
			WallSquare=grassterrain,bananaflesh wall;
			GenerateDoor=false;
			DivineOwner=6;
			Type=temple;

			Square, Pos 0, 2;
			{
				GTerrain = parquet;
				OTerrain = bananaflesh door;
			}

			Square, Pos 2, 2;
			{
				OTerrain = bananaflesh altar;
			}

			Square, Pos 3, 2;
			{
				Character = priest;
			}
		}

		Room 5;
		{
			Pos=2,2;
			Size=5,5;
			WallSquare=grassterrain,parchment wall;
			GenerateDoor=false;
			DivineOwner=7;
			Type=temple;

			Square, Pos 2, 4;
			{
				GTerrain = parquet;
				OTerrain = parchment door;
			}

			Square, Pos 2, 2;
			{
				OTerrain = parchment altar;
			}

			Square, Pos 2, 1;
			{
				Character = priest;
			}
		}

		Room 6;
		{
			FloorSquare=floor,empty;
			WallSquare=grassterrain, wood wall;
			DoorSquare=floor, door;
		}

		Room 7;
		{
			FloorSquare=floor,empty;
			WallSquare=grassterrain, wood wall;
			DoorSquare=floor, door;
		}

		Room 8;
		{
			FloorSquare=floor,empty;
			WallSquare=grassterrain, wood wall;
			DoorSquare=floor, door;
		}
	}
}
