Dungeons=2;
Teams=5;

Team 2;
{
	Relation 0, FRIEND;
}

Team 3;
{
	Relation 0, NEUTRAL;
	Relation 2, NEUTRAL;
}

Team 4;
{
	Relation 0, HOSTILE;
	Relation 2, HOSTILE;
	Relation 3, HOSTILE;
}

Dungeon 0;
{
	Levels=10;

	LevelDefault
	{
		FillSquare=ground,earth;

		Size=36,36;
		Rooms=5+rand%16;
		Items=10+rand%21;
		GenerateMonsters=true;
		ReCalculate=true;
		GenerateUpStairs=true;
		GenerateDownStairs=true;
		OnGround=false;
		TeamDefault=1;
		AmbientLight=0;
		LOSModifier=16;

		RoomDefault
		{
			Pos=2+rand%(XSize-6),2+rand%(YSize-6);
			Size=4+rand%8,4+rand%8;
			AltarPossible=true;
			WallSquare=ground,wall;
			FloorSquare=parquet,empty;
			DoorSquare=parquet,door;
			GenerateDoor=true;
			ReCalculate=true;
			DivineOwner=0;
			GenerateTunnel=true;
			GenerateLamps=true;
			Type=normalroom;
		}
	}

	Level 0;
	{
		GenerateUpStairs=false;

		RoomDefault
		{
			AltarPossible=false;
		}

		Room 0;
		{
			Size=5,5;

			Square, Pos 2,2;
			{
				IsWorldMapEntry=true;
				OverTerrain=stairsup;
			}

			Square, Pos 1,1;
			{
				Item=lamp;
			}

			Square, Pos 1,2;
			{
				Item=corpse;
			}

			Square, Pos 3,3;
			{
				Item=corpse;
			}
		}
	}

	Level 4+rand%2;
	{
		Rooms=5+rand%16;  /* Due to a bug in the recalculation code this must be repeated! */

		LevelMessage="You hear a wailing scream in the distance. An Enner Beast must dwell in the level!";

		Square, Random { Walkable=true; InRoom=true; }
		{
			Character=ennerbeast;
		}
	}

	Level 6;
	{
		Description=DarkLevel;
		LevelMessage="You shudder as you sense a being of pure darkness nearby. Your goal is near.";
		FillSquare=floor, iron wall;
		Items=0;
		GenerateDownStairs=false;

		RoomDefault
		{
			AltarPossible=false;
			WallSquare=floor, iron wall;
			DoorSquare=parquet,iron door;
			GenerateLamps=false;
		}

		Square, Random { Walkable=true; InRoom=true; }
		{
			Character=elpuri;
		}
	}

	Level 2+rand%2;
	{
		LevelMessage="You hear many wolves howling. You shiver.";
		Rooms=5+rand%16;  /* Due to a bug in the recalculation code this must be repeated! */

		Room 1;
		{
			Size=7,7;
			AltarPossible=false;

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					W=wolf;
				}
			}
			{
				WWWWW
				WWWWW
				WWWWW
				WWWWW
				WWWWW
			}
		}
	}

	Level 5+rand%4;
	{
		Rooms=5+rand%16;  /* Due to a bug in the recalculation code this must be repeated! */

		Room 1;
		{
			Size=7,7;
			AltarPossible=false;

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					G=golem;
				}
			}
			{
				GGGGG
				GGGGG
				GGGGG
				GGGGG
				GGGGG
			}
		}
	}

	Level 8;
	{
		GenerateDownStairs=false;

		Room 0;
		{
			Size=7,7;
			AltarPossible=false;
			WallSquare=ground,pepsi wall;
			FloorSquare=parquet,empty;
			DoorSquare=parquet,pepsi door;

			Square, Pos 3,3;
			{
				OverTerrain=pepsi stairsdown;
			}

			Square, Pos 3,5;
			{
				IsDownStairs=true;
			}
		}
	}

	Level 9;
	{
		Description=OreeLair;
		LevelMessage="You are welcomed by an evil laughter: \"Welcome to my private lair, mortal! There's no escape now! Prepare to be pepsified!\" Suddenly the stairs behind you are gone.";
		FillSquare=pepsi ground,pepsi earth;
		Rooms=1;
		GenerateMonsters=false;
		GenerateUpStairs=false;
		GenerateDownStairs=false;
		Items=0;
		ReCalculate=false;

		Room 0;
		{
			Size=7,7;
			AltarPossible=false;
			WallSquare=pepsi ground,pepsi wall;
			FloorSquare=parquet,empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineOwner=17;

			Square, Pos 3,1;
			{
				OverTerrain = altar;
			}

			Square, Pos 3,3;
			{
				IsUpStairs=true;
			}

			Square, Pos 3,5;
			{
				OverTerrain=pepsi stairsup;
			}

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					O=oree;
					B=swatcommando;
					G=pepsi golem;
				}
			}
			{
				..O..
				.BBB.
				GB.BG
				.BBB.
				..G..
			}
		}
	}
}

Dungeon 1;
{
	Levels=1;

	Level 0;
	{
		Description=Attnam;
		FillSquare=grassterrain,empty;
		Size=61,62;
		GenerateMonsters=false;
		Rooms=25 + rand % 6;
		Items=0;
		ReCalculate=false;
		GenerateUpStairs=false;
		GenerateDownStairs=false;
		OnGround=true;
		TeamDefault=2;
		AmbientLight=225;
		LOSModifier=48;
		
		RoomDefault
		{
			Pos=2+rand%(XSize-6),2+rand%(YSize-6);
			Size=4+rand%8,4+rand%8;
			AltarPossible=false;
			WallSquare=grassterrain,wall;
			FloorSquare=parquet,empty;
			DoorSquare=parquet,door;
			GenerateDoor=true;
			ReCalculate=true;
			DivineOwner=0;
			GenerateTunnel=false;
			GenerateLamps=true;
			Type=normalroom;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			OverTerrain=pine;
			Times=50;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			OverTerrain=spruce;
			Times=200;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=hunter;
			Times=10;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=polarbear;
			Times=5;
		}

		Square, Random { Walkable=true; InRoom=false; }
		{
			Character=farmer;
			Times=5;
		}

		Square, Pos 30,61;
		{
			IsWorldMapEntry=true;
		}

		Room 0;
		{
			Pos=10,10;
			Size=41,42;
			AltarPossible=false;
			WallSquare=grassterrain,mithril wall;
			FloorSquare=grassterrain,empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineOwner=1;
			GenerateLamps=false;
			Type=cathedral;

			Square, Pos 19, 41;
			{
				OverTerrain = empty;
			}

			Square, Pos 20, 41;
			{
				OverTerrain = empty;
			}

			Square, Pos 21, 41;
			{
				OverTerrain = empty;
			}

			GroundTerrainMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = marble floor;
					- = marble floor;
					* = tilefloor;
				}
			}
			{
				. . . . . . . . . . . . # # # # # # # # # . . . . . . . . . . . .
				. . . . . . . . . . . . # - - - - - - - # . . . . . . . . . . . .
				# # # # . . . . . . # # # - - - - - - - # # # . . . . . . # # # #
				# - - # . . . . . . # - - - - - - - - - - - # . . . . . . # - - #
				# - - # . . . . # # # - - - - - - - - - - - # # # . . . . # - - #
				# - - # . . . . # - - - - - - - - - - - - - - - # . . . . # - - #
				# - - # # # . . # - - - - - - - - - - - - - - - # . . # # # - - #
				# - - - - # . . # - - - - - - - - - - - - - - - # . . # - - - - #
				# - - - - # . . # - - - - - - - - - - - - - - - # . . # - - - - #
				# # # - - # . . # # # - - - - - - - - - - - # # # . . # - - # # #
				. . # - - # # # . . # - - - - - - - - - - - # . . # # # - - # . .
				. . # - - - - # . . # - - - - - - - - - - - # . . # - - - - # . .
				. . # # # - - # # # # - - - - - - - - - - - # # # # - - # # # . .
				. . . . # - - # - - # - - - - - - - - - - - # - - # - - # . . . .
				. . . . # - - - - - # - - - - - - - - - - - # - - - - - # . . . .
				. . . . # # # # - - # - - - - - - - - - - - # - - # # # # . . . .
				. . . . . . . # - - # - - - - - - - - - - - # - - # . . . . . . .
				. . . . . . # # - - # - - - - - - - - - - - # - - # # . . . . . .
				. . # # # # # - - - # - - - - - - - - - - - # - - - # # # # # . .
				. # # * * * # # - - # - - - - - - - - - - - # - - # # - - - # # .
				. # * * * * * * - - # - - - - - - - - - - - # - - - - - - - - # .
				. # * * * * * # - - # - - - - - - - - - - - # - - # - - - - - # .
				. # # * * * * # - - # - - - - - - - - - - - # - - # - - - - # # .
				. . # # * * * # - - # # # # # # - # # # # # # - - # - - - # # . .
				. . . # # * * # - - - - - - - - - - - - - - - - - # - - # # . . .
				. . . . # * * # - - - - - - - - - - - - - - - - - # - - # . . . .
				. . . . # * * # - - - - - - - - - - - - - - - - - # - - # . . . .
				. . . # # # # # - # - - - # # # - # # # - - - # - # # # # # . . .
				# # # # - - - - - # - - - # . . . . . # - - - # - - - - - # # # #
				# - - - - - - - - # # # # # . . . . . # # # # # - - - - - - - - #
				# - - - - - - - - # . . . . . . . . . . . . . # - - - - - - - - #
				# # - - - # # # # # . . . . . . . . . . . . . # # # # # - - - # #
				. # # - - # . . . . . . . . . . . . . . . . . . . . . # - - # # .
				. . # # # # . . . . . . . . . . . . . . . . . . . . . # # # # . .
			}

			OverTerrainMap
			{
				Pos=1,1;
				Size=39,40;
				Types
				{
					# = valpurium wall;
					T = throne;
					c = carpet;
					A = valpurium altar;
					D = valpurium door;
					b = linden;
					p = pool;
					s = couch;
				}
			}
			{
				b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b . b
				. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
				b . . . b . . . b . . b . . . b . b . b . b . b . . . b . . b . . . b . . . b
				. . b . . . b . . . . . . . . # # # # # # # # # . . . . . . . . b . . . b . .
				b . . . . b . . . . . . . b b # . . . . . . . # b b . . . . . . . b . . . . b
				. . . # # # # b . . b . . # # # . . . . . . . # # # . . b . . b # # # # . . .
				b . b # . . # . b . . . . # . . . . . . . . . . . # . . . . b . # . . # b . b
				. . . # . . # . . . . # # # . . . . . . . . . . . # # # . . . . # . . # . . .
				b . b # . . # b . . b # . . . . . T . . . T . . . . . # b . . b # . . # b . b
				. . . # . . # # # . . # . . . . . . . c . . . . . . . # . . # # # . . # . . .
				b . b # . . . . # . b # . . . . . . . c . . . . . . . # b . # . . . . # b . b
				. . . # . . . . # . . # . . . . . . . c . . . . . . . # . . # . . . . # . . .
				b . b # # # . . # b . # # # . . . . . c . . . . . # # # . b # . . # # # b . b
				. . . . b # . . # # # . b # . . . . . c . . . . . # b . # # # . . # b . . . .
				b . . . . # . . . . # . . # . . . . . c . . . . . # . . # . . . . # . . . . b
				. . b b . # # # . . # # # # . . . . . c . . . . . # # # # . . # # # . b b . .
				b . . . . . b # . . # . . # . . . . . c . . . . . # . . # . . # b . . . . . b
				. b . . b . . # . . D . . # . . . . . c . . . . . # . . D . . # . . b . . b .
				b . . b . . . # # # # . . # . . . . . c . . . . . # . . # # # # . . . b . . b
				b . . . . b . . . . # . . # . . . . . c . . . . . # . . # . . . . b . . . . b
				. b . b . . . . b # # . . # . . . . . c . . . . . # . . # # b . . . . b . b .
				b . . . b # # # # # . . . # . . . . . c . . . . . # . . . # # # # # b . b . b
				. . . . # # p . p # # . . # . . . . . c . . . . . # . . # # . . . # # . . . .
				b . . b # . . . . . D . . # . . . . . c . . . . . # . . D . . A . . # b . . b
				. b . . # . . . . . # . . # . . . . . c . . . . . # . . # . . . . . # . . b .
				b . . . # # p . p . # . . # . . . . . . . . . . . # . . # . . . . # # . . . b
				. . . . b # # . . . # . . # # # # # # D # # # # # # . . # . . . # # b . . . .
				b . b . . b # # . . # . . . . . . . . . . . . . . . . . # . . # # b . . b . b
				. . . . . . . # p . # . . . . . . . . . . . . . . . . . # . . # . . . . . . .
				b . . . b . b # . . # . . . . . . . . . . . . . . . . . # . . # b . b . . . b
				. b . . . . # # # # # D # . . . # # # D # # # . . . # D # # # # # . . . . b .
				b . . # # # # . s . s . # . . . # . b . b . # . . . # . . . . . # # # # . . b
				. . b # . s . . . . . . # # # # # . . . . . # # # # # . . . . . . . . # b . .
				b . . # . . . . s . s . # b . . b . . . . . b . . b # . . . . . . . . # . . b
				. b . # # . . . # # # # # . b b . . b . b . . b b . # # # # # . . . # # . b .
				b . . b # # s . # b . b . . . . . . . . . . . . . . . b . b # . . # # b . . b
				. . . . b # # # # . . . . b . . . . . . . . . . . b . . . . # # # # b . . . .
				b . b . . . b . . . b . . . . . . . b . b . . . . . . . b . . . b . . . b . b
				. . . . . . . . . . . . . . . b b . . . . . b b . . . . . . . . . . . . . . .
				b . b . b . b . b . b . b . b . . b . . . b . . b . b . b . b . b . b . b . b
			}

			ItemMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = 0;
					a = avatarofvalpuri;
					b = banana;
					k = kiwi;
					p = pineapple;
					o = iron poleaxe;
					l = mithril longsword;
					t = iron twohandedsword;
					m = iron spikedmace;
					s = iron spear;
					c = chainmail;
				}
			}
			{
				. . . . . . . . . . . . # # # # # # # # # . . . . . . . . . . . .
				. . . . . . . . . . . . # . . . . . . . # . . . . . . . . . . . .
				# # # # . . . . . . # # # . . . . . . . # # # . . . . . . # # # #
				# . . # . . . . . . # . . . . . . . . . . . # . . . . . . # . . #
				# . . # . . . . # # # . . . . . . . . . . . # # # . . . . # . . #
				# . . # . . . . # . . . . . . . . . a . . . . . # . . . . # . . #
				# . . # # # . . # . . . . . . p . p . . . . . . # . . # # # . . #
				# . . . . # . . # . . . . . . b . b . . . . . . # . . # . . . . #
				# . . . . # . . # . . . . . . k . k . . . . . . # . . # . . . . #
				# # # . . # . . # # # . . . . p . p . . . . # # # . . # . . # # #
				. . # . . # # # . . # . . . . b . b . . . . # . . # # # . . # . .
				. . # . . . . # . . # . . . . k . k . . . . # . . # . . . . # . .
				. . # # # . . # # # # . . . . p . p . . . . # # # # . . # # # . .
				. . . . # . . # . . # . . . . b . b . . . . # . . # . . # . . . .
				. . . . # . . . . . # . . . . k . k . . . . # . . . . . # . . . .
				. . . . # # # # . . # . . . . p . p . . . . # . . # # # # . . . .
				. . . . . . . # . . # . . . . b . b . . . . # . . # . . . . . . .
				. . . . . . # # . . # . . . . k . k . . . . # . . # # . . . . . .
				. . # # # # # . . . # . . . . p . p . . . . # . . . # # # # # . .
				. # # . . . # # . . # . . . . b . b . . . . # . . # # . . . # # .
				. # . . . . . . . . # . . . . k . k . . . . # . . . . . . . . # .
				. # . . . . . # . . # . . . . . . . . . . . # . . # . . . . . # .
				. # # . . . . # . . # . . . . . . . . . . . # . . # . . . . # # .
				. . # # . . . # . . # # # # # # . # # # # # # . . # . . . # # . .
				. . . # # . . # . . . . . . . . . . . . . . . . . # . . # # . . .
				. . . . # . . # . . . . . . . . . . . . . . . . . # . . # . . . .
				. . . . # . . # . . . . . . . . . . . . . . . . . # . . # . . . .
				. . . # # # # # . # . . . # # # . # # # . . . # . # # # # # . . .
				# # # # . . . . . # . . . # . . . . . # . . . # o o o o l # # # #
				# . . . . . . . . # # # # # . . . . . # # # # # . . . . . t t c #
				# . . . . . . . . # . . . . . . . . . . . . . # s s s s . . . c #
				# # . . . # # # # # . . . . . . . . . . . . . # # # # # m m . # #
				. # # . . # . . . . . . . . . . . . . . . . . . . . . # m m # # .
				. . # # # # . . . . . . . . . . . . . . . . . . . . . # # # # . .
			}

			CharacterMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = 0;
					P = perttu;
					c = cityguard;
					p = priest;
					d = dolphin;
					i = ivan;
				}
			}
			{
				. . . . . . . . . . . . # # # # # # # # # . . . . . . . . . . . .
				. . . . . . . . . . . . # c . . c . . c # . . . . . . . . . . . .
				# # # # . . . . . . # # # . . . . . . . # # # . . . . . . # # # #
				# . . # . . . . . . # c . . . . . . . . . c # . . . . . . # . . #
				# . . # . . . . # # # . . . . . . . . . . . # # # . . . . # . . #
				# . . # . . . . # c . . . . P . . . . . . . . c # . . . . # . . #
				# . . # # # . . # . . . . . . . . . . . . . . . # . . # # # . . #
				# . . . . # . . # . . . . . . . . . . . . . . . # . . # . . . . #
				# . . . . # . . # c . . . . . . . . . . . . . c # . . # . . . . #
				# # # . . # . . # # # . . . . . . . . . . . # # # . . # . . # # #
				. . # . . # # # . . # c . . . . . . . . . c # . . # # # . . # . .
				. . # . . . . # . . # . . . . . . . . . . . # . . # . . . . # . .
				. . # # # . . # # # # . . . . . . . . . . . # # # # . . # # # . .
				. . . . # . . # . . # . . . . . . . . . . . # . . # . . # . . . .
				. . . . # . . . . . # c . . . . . . . . . c # . . . . . # . . . .
				. . . . # # # # . . # . . . . . . . . . . . # . . # # # # . . . .
				. . . . . . . # . . # . . . . . . . . . . . # . . # . . . . . . .
				. . . . . . # # . . # . . . . . . . . . . . # . . # # . . . . . .
				. . # # # # # . . . # c . . . . . . . . . c # . . . # # # # # . .
				. # # d . d # # . . # . . . . . . . . . . . # . . # # . p . # # .
				. # . . . . . . . . # . . . . . . . . . . . # . . . . . . . . # .
				. # . . . . . # . . # . . . . . . . . . . . # . . # . . . . . # .
				. # # d . d . # . . # c . . . c . c . . . c # . . # . . . . # # .
				. . # # . . . # . . # # # # # # . # # # # # # . . # . . . # # . .
				. . . # # . . # . . . . . . . . . . . . . . . . . # . . # # . . .
				. . . . # d . # . . . . . . . . . . . . . . . . . # . . # . . . .
				. . . . # . . # . . . . . . . . . . . . . . . c c # . . # . . . .
				. . . # # # # # . # . . . # # # . # # # . . . # . # # # # # . . .
				# # # # . . . . . # . . . # . . . . . # . . . # . . . . . # # # #
				# . . . . . . . . # # # # # . . . . . # # # # # . . . . . . . . #
				# . . . . . . . . # . . . . . . . . . . . . . # . . . . . . . . #
				# # . . . # # # # # . . . . . . . . . . . . . # # # # # . . . # #
				. # # . . # . . . . . . . . . . . . . . . . . . . . . # . . # # .
				. . # # # # . i . . . . . . . . . . . . . . . . . . . # # # # . .
			}
		}

		Room 1;
		{
			Pos=32,54;
			Size=7,5;
			AltarPossible=false;
			WallSquare=grassterrain,wall;
			FloorSquare=parquet,empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineOwner=10;
			Type=shop;
			
			Square, Pos 1, 4;
			{
				GroundTerrain = parquet;
				OverTerrain = door;
			}

			Square, Pos 1, 1;
			{
				Character = slave;
			}

			Square, Pos 2, 3;
			{
				Character = shopkeeper;
			}

			ItemMap
			{
				Pos=1,1;
				Size=5,3;
				Types
				{
					t = scrollofteleport;
					s = stone spear;
					p = pickaxe;
					l = lamp;
					c = scrollofchangematerial;
					b = banana;
					l = bananaflesh lump;
					L = pork loaf;
					P = glass omleurine potion;
					C = chainmail;
				}
			}
			{
			    .spbt
			    blLcP
			    L.Clt
			}
		}

		Room 2;
		{
			Pos=54,55;
			Size=5,5;
			WallSquare=grassterrain,gold wall;
			GenerateDoor=false;
			DivineOwner=2;
			Type=temple;

			Square, Pos 2, 0;
			{
				GroundTerrain = parquet;
				OverTerrain = gold door;
			}

			Square, Pos 2, 2;
			{
				OverTerrain = gold altar;
			}

			Square, Pos 2, 3;
			{
				Character = priest;
			}
		}

		Room 3;
		{
			Pos=2,55;
			Size=5,5;
			WallSquare=grassterrain,marble wall;
			GenerateDoor=false;
			DivineOwner=4;
			Type=temple;

			Square, Pos 4, 2;
			{
				GroundTerrain = parquet;
				OverTerrain = marble door;
			}

			Square, Pos 2, 2;
			{
				OverTerrain = marble altar;
			}

			Square, Pos 1, 2;
			{
				Character = priest;
			}
		}

		Room 4;
		{
			Pos=54,2;
			Size=5,5;
			WallSquare=grassterrain,bananaflesh wall;
			GenerateDoor=false;
			DivineOwner=6;
			Type=temple;

			Square, Pos 0, 2;
			{
				GroundTerrain = parquet;
				OverTerrain = bananaflesh door;
			}

			Square, Pos 2, 2;
			{
				OverTerrain = bananaflesh altar;
			}

			Square, Pos 3, 2;
			{
				Character = priest;
			}
		}

		Room 5;
		{
			Pos=2,2;
			Size=5,5;
			WallSquare=grassterrain,parchment wall;
			GenerateDoor=false;
			DivineOwner=7;
			Type=temple;

			Square, Pos 2, 4;
			{
				GroundTerrain = parquet;
				OverTerrain = parchment door;
			}

			Square, Pos 2, 2;
			{
				OverTerrain = parchment altar;
			}

			Square, Pos 2, 1;
			{
				Character = priest;
			}
		}

		Room 6;
		{
			FloorSquare=floor,empty;
			WallSquare=grassterrain, wood wall;
			DoorSquare=floor, door;
		}

		Room 7;
		{
			FloorSquare=floor,empty;
			WallSquare=grassterrain, wood wall;
			DoorSquare=floor, door;
		}

		Room 8;
		{
			FloorSquare=floor,empty;
			WallSquare=grassterrain, wood wall;
			DoorSquare=floor, door;
		}
	}
}
