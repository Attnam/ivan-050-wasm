/* 
 * NOTICE!!!
 * This file contains SPOILERS, which might ruin your IVAN experience totally.
 */

Dungeons = 5;
Teams = 10;

/*
 * Description of hard-coded teams:
 * 0 == PLAYER_TEAM == Player and pets
 * 1 == MONSTER_TEAM == Monsters, default relation to other teams == hostile
 * 2 == ATTNAM_TEAM == Residents of Attnam
 * 3 == FINAL_BATTLE_TEAM == Petrus's team during the Final Battle
 * 7 == NEW_ATTNAM_TEAM == natives and ostriches of New Attnam
 * 8 == COLONIST_TEAM == colonists of New Attnam
 */

Team ATTNAM_TEAM;
{
	Relation 0, FRIEND;
	KillEvilness = 50;
}

/* Script defined teams: */

Team 4; /* Spawned hostile angels */
{
	Relation 0, HOSTILE;
	Relation 1, UNCARING;
}

Team 5; /* Dungeon shopkeepers */
{
	Relation 1, UNCARING;
	KillEvilness = 100;
}

Team 6; /* Ivan */
{
	KillEvilness = 100;
}

Team NEW_ATTNAM_TEAM;
{
	Relation 0, FRIEND;
	KillEvilness = 50;
}

Team COLONIST_TEAM;
{
	Relation 1, UNCARING;
	Relation 7, FRIEND;
}

Dungeon ELPURI_CAVE;
{
	Levels = 10;
	Description = "gloomy cave";
	ShortDescription = "GC";

	LevelDefault
	{
		FillSquare = solidterrain(GROUND),wall(EARTH);
		Size = 64, 36;
		Rooms = 10:30;
		Items = 25:50;
		GenerateMonsters = true;
		IsOnGround = false;
		TeamDefault = MONSTER_TEAM;
		AmbientLight = 0;
		LOSModifier = 16;
		IgnoreDefaultSpecialSquares = false;
		DifficultyBase = 60;
		DifficultyDelta = 15;
		MonsterAmountBase = 10;
		MonsterAmountDelta = 4;
		MonsterGenerationIntervalBase = 100;
		MonsterGenerationIntervalDelta = -10;

		Square, Random NOT_WALKABLE|NOT_IN_ROOM;
		{
			Items == stone;
			Times = 25:50;
		}

		Square, Random;
		{
			Items == mine { Team = MONSTER_TEAM; IsActive = true; }
			Times = 0:3;
		}

		Square, Random;
		{
			Items == beartrap { Team = MONSTER_TEAM; IsActive = true; }
			Times = 0:3;
		}

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_DOWN);
			EntryIndex = STAIRS_DOWN;
			AttachRequired = true;
		}

		RoomDefault
		{
			Pos = 2:XSize-5,2:YSize-5;
			Size = 4:11,4:11;
			AltarPossible = true;
			WallSquare = solidterrain(GROUND),wall(BRICK_OLD);
			FloorSquare = solidterrain(PARQUET), 0;
			DoorSquare = solidterrain(PARQUET),STONE door;
			GenerateDoor = true;
			DivineMaster = 0;
			GenerateTunnel = true;
			GenerateLanterns = true;
			Type = ROOM_NORMAL;
			GenerateFountains = true;
			AllowLockedDoors = true;
			AllowBoobyTrappedDoors = true;
			Shape = RECTANGLE;
		}
	}

	RandomLevel 1:3;
	{
		LevelMessage = "You hear many wolves howling. You shiver.";

		Room
		{
			Size = 7,6;
			AltarPossible = false;
			Shape = ROUND_CORNERS;

			CharacterMap
			{
				Pos = 1,1;
				Size = 5,4;

				Types
				{
					w = wolf;
					W = werewolfhuman { Inventory = { 2, scrollofenchantweapon, scrollofenchantarmor; } }
				}
			}
			{
				.www.
				wwWww
				wwwww
				.www.
			}
		}
	}

	RandomLevel 1:3;
	{
		Room
		{
			Size = 5,9;
			AltarPossible = false;
			DivineMaster = MELLIS;
			Type = ROOM_SHOP;
			GenerateFountains = false;

			CharacterMap
			{
				Pos = 1, 1;
				Size = 3, 7;

				Types
				{
					g = guard(SHOP) { Team = 5; }
					s = shopkeeper(ELPURI_CAVE) { Team = 5; IsMaster = true; }
				}
			}
			{
				g.g
				...
				...
				.s.
				...
				...
				g.g
			}

			ItemMap
			{
				Pos = 1,1;
				Size = 3,7;

				Types
				{
					g == Random { MinPrice = 100; MaxPrice = 10000; Category = GAUNTLET|BOOT; }
					b == Random { MinPrice = 100; MaxPrice = 10000; Category = GAUNTLET|BOOT; }
					a == Random { MinPrice = 200; MaxPrice = 10000; Category = HELMET|CLOAK|BODY_ARMOR|BELT; }
					d == Random { MinPrice = 200; MaxPrice = 10000; Category = RING|AMULET; }
					w == Random { MinPrice = 200; MaxPrice = 10000; Category = WEAPON|SHIELD; }
					e == Random { MinPrice = 50; MaxPrice = 10000; Category = FOOD|POTION; }
					u == Random { MinPrice = 200; MaxPrice = 10000; Category = WAND|TOOL; }
					r == Random { MinPrice = 200; MaxPrice = 10000; Category = SCROLL|BOOK; }
					s == wand(WAND_OF_STRIKING);
				}
			}
			{
				.g.
				ddb
				err
				e.w
				auw
				auw
				.s.
			}
		}
	}

	RandomLevel 1:4;
	{
		Room
		{
			Size = 9,9;
			AltarPossible = false;
			GenerateFountains = false;

			OTerrainMap
			{
				Size = 3,3;
				Pos = 3,3;
				Types
				{
					# = STEEL wall(BRICK_OLD);
				}
			}
			{
				###
				#.#
				###
			}

			Square, Pos 4,4;
			{
				Items = { 2, beartrap { Team = MONSTER_TEAM; IsActive = true; Chance = 25; }, itemcontainer(CHEST) { ItemsInside = { 2, Random { MinPrice = 1000; }, Random { MinPrice = 1000; } } } }
			}
		}
	}

	Level 4;
	{
		LevelMessage = "You hear a wailing scream in the distance. An enner beast must dwell in the level!";
		IgnoreDefaultSpecialSquares = true;
		Items = 50:100;

		Square, Random NOT_WALKABLE|NOT_IN_ROOM;
		{
			Items == stone;
			Times = 25:50;
		}

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_DOWN);
			EntryIndex = STAIRS_DOWN;
			AttachRequired = true;
		}

		Square, Random;
		{
			Items == bone;
			Times = 20;
		}

		Square, Random;
		{
			Items == skull;
			Times = 5;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character = ennerbeast;
		}
	}

	Level 5;
	{
		LevelMessage = "You hear someone singing loudly: \"Uncle Lenin lives in Russia...\"";

		Room /* vault */
		{
		
			GenerateLanterns = false;
			GenerateFountains = false;
			WallSquare = solidterrain(GROUND),wall(EARTH);
			GenerateDoor = false;
			GenerateTunnel = false;
			AltarPossible = false;
			Size = 7,7;

			OTerrainMap
			{
				Pos = 1,1;
				Size = 5,5;
				Types
				{
					x = IRON wall(BRICK_OLD);
				}
			}
			{
				xxxxx
				x...x
				x...x
				x...x
				xxxxx
			}

			Square, Random;
			{
				Items == mine { Team = MONSTER_TEAM; IsActive = true; Chance = 50; }
				Times = 2;
			}

			Square, Random;
			{
				Items == beartrap { Team = MONSTER_TEAM; IsActive = true; Chance = 50; }
				Times = 2;
			}

			Square, Pos 3,3;
			{
				Items == itemcontainer(CHEST) 
				{
					ItemsInside = { 5,	Random { MinPrice = 1000; },
										Random { MinPrice = 1000; },
										stone { Chance = 75; },
										stone { Chance = 75; },
										stone { Chance = 75; } } 
				}
			}
		}

		Square, Random NOT_IN_ROOM;
		{
			Character = communist { Team = 6; }
		}
		
	}

	Level DARK_LEVEL;
	{
		Description = "dark level";
		ShortDescription = "DarkLevel";
		LevelMessage = "You shudder as you sense a being of pure darkness nearby. Your goal is near.";
		FillSquare = solidterrain(FLOOR), IRON wall(BRICK_OLD);
		Items = 0;
		IgnoreDefaultSpecialSquares = true;

		RoomDefault
		{
			AltarPossible = false;
			WallSquare = solidterrain(FLOOR), IRON wall(BRICK_OLD);
			DoorSquare = solidterrain(PARQUET), IRON door;
			GenerateLanterns = false;
			GenerateFountains = false;
		}

		Room
		{
			Size = 11, 11;
			DivineMaster = SCABIES;

			Square, Pos 5, 5;
			{
				OTerrain = portal(DARK_LEVEL) { AttachedArea = 7; AttachedEntry = RANDOM; }
				Character = elpuri;
			}

			Square, Random;
			{
				Character = frog(DARK);
				Times = 10;
			}

			Square, Random;
			{
				Character = frog(GREATER_DARK);
				Times = 5;
			}

			Square, Random;
			{
				Items == HUMAN_FLESH lump;
				Times = 5;
			}

			Square, Random;
			{
				Items == bone;
				Times = 10;
			}

			Square, Random;
			{
				Items == skull;
				Times = 5;
			}
		}

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}
	}

	RandomLevel 5:8;
	{
		Room
		{
			Size = 7,7;
			AltarPossible = false;
			Shape = ROUND_CORNERS;

			CharacterMap
			{
				Pos = 1,1;
				Size = 5,5;

				Types
				{
					G = golem;
				}
			}
			{
				.GGG.
				GGGGG
				GGGGG
				GGGGG
				.GGG.
			}
		}
	}

	Level 7;
	{
		IgnoreDefaultSpecialSquares = true;

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_DOWN);
			EntryIndex = STAIRS_DOWN;
			AttachRequired = true;
		}
	}

	Level 8;
	{
		IgnoreDefaultSpecialSquares = true;

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}

		Room
		{
			Size = 7,7;
			AltarPossible = false;
			WallSquare = solidterrain(GROUND),IRON wall(BRICK_OLD);
			FloorSquare = solidterrain(PARQUET), 0;
			DoorSquare = solidterrain(PARQUET),IRON door;

			Square, Pos 3,3;
			{
				OTerrain = portal(OREE_LAIR_ENTRY) { AttachedArea = OREE_LAIR; AttachedEntry = STAIRS_UP; }
			}

			Square, Pos 3,5;
			{
				EntryIndex = STAIRS_DOWN;
			}
		}

		Square, Random;
		{
			Items == pickaxe;
		}
	}

	Level OREE_LAIR;
	{
		Description = "Oree's lair";
		ShortDescription = "OreeLair";
		LevelMessage = "\"Welcome to my lair, mortal! There's no escape now!\"";
		FillSquare = solidterrain(FLOOR), IRON wall(BRICK_OLD);
		Rooms = 1;
		GenerateMonsters = false;
		Items = 0;
		IgnoreDefaultSpecialSquares = true;

		Room
		{
			Size = 9,9;
			AltarPossible = false;
			WallSquare = solidterrain(FLOOR), IRON wall(BRICK_OLD);
			FloorSquare = solidterrain(PARQUET), 0;
			GenerateDoor = false;
			DivineMaster = MORTIFER;
			GenerateFountains = false;
			GenerateLanterns = false;

			Square, Pos 4,1;
			{
				OTerrain = STEEL altar(MORTIFER);
			}

			Square, Pos 4,4;
			{
				EntryIndex = STAIRS_UP;
			}

			Square, Pos 4,7;
			{
				OTerrain = portal(OREE_LAIR_EXIT) { AttachedArea = 0; AttachedEntry = RANDOM; }
			}

			CharacterMap
			{
				Pos = 1,1;
				Size = 7,7;

				Types
				{
					O = oree;
					B = darkknight(ELITE);
					G = golem(BLOOD);
					A = angel(MORTIFER);
				}
			}
			{
				..O.A..
				.......
				...B...
				..B.B..
				...B...
				.......
				..G.G..
			}
		}
	}
}

Dungeon ATTNAM;
{
	Levels = 1;

	Level 0;
	{
		Description = Attnam;
		ShortDescription = Attnam;
		FillSquare = solidterrain(SNOW_TERRAIN), 0;
		Size = 61, 62;
		GenerateMonsters = false;
		Rooms = 20:25;
		Items = 0;
		IsOnGround = true;
		TeamDefault = ATTNAM_TEAM;
		AmbientLight = rgb24(95, 95, 95);
		LOSModifier = 48;
		IgnoreDefaultSpecialSquares = false;

		RoomDefault
		{
			Pos = 2:XSize-5,2:YSize-5;
			Size = 4:11,4:11;
			AltarPossible = false;
			WallSquare = solidterrain(SNOW_TERRAIN),wall(BRICK_FINE);
			FloorSquare = solidterrain(PARQUET), 0;
			DoorSquare = solidterrain(PARQUET),door;
			GenerateDoor = true;
			DivineMaster = 0;
			GenerateTunnel = false;
			GenerateLanterns = true;
			Type = ROOM_NORMAL;
			GenerateFountains = false;
			AllowLockedDoors = false;
			AllowBoobyTrappedDoors = false;
			Shape = RECTANGLE;
		}

		Square, Pos 0, 0;
		{
			Character = guard(PATROL) { WayPoint = { 4, 0, 0, 61 - 1, 0, 61 - 1, 62 - 1, 0, 62 - 1; } }
		}

		Square, Random NOT_IN_ROOM;
		{
			OTerrain = decoration(SNOW_PINE);
			Times = 200;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character = hunter;
			Times = 10;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character = polarbear;
			Times = 5;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character = farmer;
			Times = 5;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character = housewife;
			Times = 5;
		}

		Square, Pos 30,61;
		{
			EntryIndex = STAIRS_UP;
		}
	
		Room
		{
			Pos = 10,10;
			Size = 41,42;
			WallSquare = solidterrain(SNOW_TERRAIN), STONE wall(BRICK_FINE);
			FloorSquare = solidterrain(SNOW_TERRAIN), 0;
			GenerateDoor = false;
			DivineMaster = VALPURUS;
			GenerateLanterns = false;
			Type = ROOM_CATHEDRAL;

			Square, Pos 1, 1;
			{
				Character = floatingeye { WayPoint = { 4, 11, 11, 49, 11, 49, 50, 11, 50; } }
			}

			Square, Pos 19, 41;
			{
				OTerrain = 0;
			}

			Square, Pos 20, 41;
			{
				OTerrain = 0;
			}

			Square, Pos 21, 41;
			{
				OTerrain = 0;
			}
			
			GTerrainMap
			{
				Pos = 4,4;
				Size = 33,34;
				Types
				{
					# = MARBLE solidterrain(FLOOR);
					- = MARBLE solidterrain(FLOOR);
					~ = liquidterrain(POOL);
				}
			}
			{
				............#########............
				............#-------#............
				####......###-------###......####
				#--#......#-----------#......#--#
				#--#....###-----------###....#--#
				#--#....#---------------#....#--#
				#--###..#---------------#..###--#
				#----#..#---------------#..#----#
				#----#..#---------------#..#----#
				###--#..###-----------###..#--###
				..#--###..#-----------#..###--#..
				..#----#..#-----------#..#----#..
				..###--####-----------####--###..
				....#-----#-----------#-----#....
				....#-----#-----------#-----#....
				....####--#-----------#--####....
				.......#--#-----------#--#.......
				......###-#-----------#-###......
				..#####-#-#-----------#-#-#####..
				.##-------#-----------#-------##.
				.#---~~~#-#-----------#-#------#.
				.#---~~~#-#-----------#-#------#.
				.##--~~~#-#-----------#-#-----##.
				..##-~~~#-#-----------#-#----##..
				...##~~~#-######-######-#---##...
				....#~~~#---------------#---#....
				....#~~~#---------------#---#....
				...#######---###-###---#######...
				####---------#.....#---------####
				#--------#####.....#####--------#
				#--------#.............#--------#
				##---#####.............#####---##
				.##--#.....................#--##.
				..####.....................####..
			}

			OTerrainMap
			{
				Pos = 1,1;
				Size = 39,40;
				Types
				{
					# = MARBLE wall(BRICK_FINE);
					@ = MARBLE wall(BRICK_PROPAGANDA);
					T = throne;
					| = decoration(CARPET);
					A = VALPURIUM altar(VALPURUS);
					D = MARBLE door;
					L = MARBLE door { Parameters = LOCKED; }
					b = decoration(SNOW_FIR);
					1 = decoration(POOL_CORNER) { VisualEffects = NONE; }
					2 = decoration(POOL_CORNER) { VisualEffects = MIRROR; }
					3 = decoration(POOL_CORNER) { VisualEffects = MIRROR | FLIP; }
					4 = decoration(POOL_CORNER) { VisualEffects = FLIP; }
					5 = decoration(POOL_BORDER) { VisualEffects = NONE; }
					6 = decoration(POOL_BORDER) { VisualEffects = ROTATE; }
					7 = decoration(POOL_BORDER) { VisualEffects = FLIP; }
					8 = decoration(POOL_BORDER) { VisualEffects = MIRROR | ROTATE; }
					s = decoration(COUCH);
					f = fountain { ContainedMaterial = ICE; }
					d = decoration(DOUBLE_BED);
					B = GOLD boulder; 
				}
			}
			{
				b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b
				.......................................
				b...b...b..b...b.b.b.b.b...b..b...b...b
				..b...b........#########........b...b..
				b....b.......bb#.......#bb.......b....b
				...####b..b..###.......###..b..b####...
				b.b#..#.b....#...........#....b.#.B#b.b
				...#..#....###...........###....#..#...
				b.b#..#b..b#...............#b..b#..#b.b
				...#..###..#.....T...T.....#..###.B#...
				b.b#....#.b#.......|.......#b.#....#b.b
				...#....#..#.......|.......#..#B...#...
				b.b###..#b.###.....|.....###.b#..###b.b
				....b#..#@#.b#.....|.....#b.#@#.B#b....
				b....#....#..#.....|.....#..#..B.#....b
				..bb.###..####.....|.....####..###.bb..
				b.....b#.....#.....|.....#...B.#b.....b
				.b..b..#.....#.....|.....#.B...#..b..b.
				b..b...####..#.....|.....#..####...b..b
				b....b....#..#.....|.....#.B#....b....b
				.b.b....b###D#.....|.....#D###b....b.b.
				b...b#####.#.#.....|.....#.#.#####b.b.b
				....##.....D.#.....|.....#.D.....##....
				b..b#.s.152#.#.....|.....#.#......#b..b
				.b..#...8.6#.#.....|.....#.#..A...#..b.
				b...##..8.6#.#.....|.....#.#.....##...b
				....b##.8.6#.#...........#.#....##b....
				b.b..b##8.6#.######D######.#...##b..b.b
				.......#8.6#...............#...#.......
				b...b.b#473#...............#...#b.b...b
				.b....##@####...###D###...####@##....b.
				b..####.s.s.D...#.b.b.#...L.....####..b
				..b#.d......#####.f.f.#####........#b..
				b..#....s.s.#b..b.....b..b#........#..b
				.b.##...#####.bb..b.b..bb.#####...##.b.
				b..b##s.#b.b......f.f......b.b#..##b..b
				....b####....b...........b....####b....
				b.b...b...b.......b.b.......b...b...b.b
				...............bb.f.f.bb...............
				b.b.b.b.b.b.b.b..b...b..b.b.b.b.b.b.b.b
			}

			ItemMap
			{
				Pos = 4,4;
				Size = 33,34;
				Types
				{
					# == 0;
					a == avatarofvalpurus;
					b == banana;
					k == kiwi;
					p == pineapple;
					o == IRON meleeweapon(HALBERD);
					l == MITHRIL MITHRIL meleeweapon(LONG_SWORD);
					t == IRON IRON meleeweapon(TWO_HANDED_SWORD);
					m == IRON meleeweapon(MACE);
					s == IRON meleeweapon(SPEAR);
					c == bodyarmor(CHAIN_MAIL);
					e == backpack;
					g == GOLD stone;
					i == SILVER stone;
					h == SAPPHIRE stone;
					r == RUBY stone;
					d == DIAMOND stone;
					1 == lantern { SideStackIndex = UP; }
					2 == lantern { SideStackIndex = DOWN; }
					3 == lantern { SideStackIndex = RIGHT; }
					4 == lantern { SideStackIndex = LEFT; }
					C == GOLD itemcontainer(CHEST) { ItemsInside = { 5, GOLD helmet, stone, stone, stone, GOLD banana; } }
					F == ring(RING_OF_FIRE_RESISTANCE); 
					I == ring(RING_OF_INVISIBILITY);
					E == amulet(AMULET_OF_ESP);
					S == GOLD GOLD meleeweapon(LONG_SWORD);
					U == DIAMOND helmet(HELM_OF_UNDERSTANDING);
					A == GOLD helmet(HELM_OF_ATTRACTIVITY);
					L == oillamp;
					P == GOLD bodyarmor(PLATE_MAIL);
					O == GOLD cloak;
					W == wand(WAND_OF_POLYMORPH);
				}
			}
			{
				............##2###2##............
				............#.......#............
				####......###.......###......####
				#..#......#...........#......#r.#
				#..#....###...........###....#gi#
				#..#....#...r.......r...#....#hC#
				#..###..#.........a.....#..###I.#
				#...e#..#......b.b......#..#EOLF#
				#...e#..#......k.k......#..#.dPS#
				##1.e#..##1.h..p.p..h.1##..#Ug1##
				..#.e4##..#....b.b....#..##3r.#..
				..#....#..#....k.k....#..#Wh.L#..
				..###..4###....p.p....###3Fi###..
				....#.....3.d..b.b..d.4P.A.I#....
				....#.....#....k.k....#r.gEd#....
				....###3..#....p.p....#Sd4###....
				.......#..#....b.b....#h.#.......
				......###.3.g..k.k..g.4.###......
				..#####.#.#....p.p....#.#.#####..
				.##.......#....b.b....#.......##.
				.#......3.#....k.k....#.4......#.
				.#......#.3.i..p.p..i.4.#......#.
				.##.....4.#....b.b....#.3.....##.
				..##....#.#...........#.#....##..
				...##...#.##2###.###2##.#...##...
				....#...4...............3...#....
				....#...#...............#...#....
				...###2###...##2.2##...###2###...
				####.........#.....#....ooool####
				#........#####.....#####.....ttc#
				#........#.............#ssss...c#
				##...#####.............#####mm.##
				.##..#.....................#mm##.
				..####.....................####..
			}

			CharacterMap
			{
				Pos = 4,4;
				Size = 33,34;
				Types
				{
					# = 0;
					P = petrus { IsMaster = true; }
					g = guard(VETERAN);
					e = guard(ELITE);
					m = guard(MASTER);
					p = priest;
					d = dolphin;
					l = frog(LIGHT);
					f = frog(GREATER_LIGHT);
					s = femaleslave(ATTNAM);
					1 = petrusswife(1);
					2 = petrusswife(2);
					3 = petrusswife(3);
					4 = petrusswife(4);
					5 = petrusswife(5);
					6 = petrusswife(6);
					k = kamikazedwarf(VALPURUS);
				}
			}
			{
				............#########............
				............#g.....g#............
				####......###...m...###......####
				#k.#......#g....l....g#......#..#
				#k.#....###...........###....#..#
				#k.#....#e.............e#....#..#
				#k.###..#....sPs.s.s....#..###..#
				#k...#..#..l....f....l..#..#....#
				#k...#..#e.............e#..#....#
				###..#..###...........###..#..###
				..#..###..#...........#..###..#..
				..#....#..#g.l.....l.g#..#....#..
				..###k.####...........####..###..
				....#k...k#...........#.e...#....
				....#k...k#...........#.....#....
				....####.k#g.........g#..####....
				.......#..#...........#..#.......
				......###.#...........#.###......
				..#####e#.#...........#.#.#####..
				.##.......#g.........g#.......##.
				.#......#.#...........#.#..p...#.
				.#....d.#.#...........#.#......#.
				.##...d.#.#...........#.#.....##.
				..##.d.d#.#g.........g#.#....##..
				...##.d.#.######.######.#...##...
				....#.d.#......g.g......#...#....
				....#...#...............#...#....
				...#######...###.###..g#######...
				####.3.5.....#g...g#..g......####
				#.1......#####.....#####........#
				#....4.6.#.............#........#
				##...#####.............#####...##
				.##2.#.....................#..##.
				..####.....................####..
			}
		}

		Room
		{
			Pos=32,53;
			Size = 7,6;
			WallSquare = solidterrain(SNOW_TERRAIN),wall(BRICK_FINE);
			FloorSquare = solidterrain(PARQUET), 0;
			GenerateDoor = false;
			DivineMaster = MELLIS;
			Type = ROOM_SHOP;
			GenerateLanterns = false;
			
			Square, Pos 3, 5;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = door;
			}

			Square, Pos 1, 1;
			{
				Character = slave;
			}

			Square, Pos 1, 4;
			{
				Items == banana;
				Times = 100;
			}

			Square, Pos 5, 1;
			{
				Character = shopkeeper(ATTNAM) { IsMaster = true; }
			}


			Square, Pos 3, 0;
			{
				OTerrain = STONE wall(BRICK_PROPAGANDA);
			}

			ItemMap
			{
				Pos = 0,0;
				Size = 7,5;
				Types
				{
					# == 0;
					a == Random { MinPrice = 50; MaxPrice = 2000; Category = HELMET|CLOAK|BODY_ARMOR|BELT|BOOT|GAUNTLET; }
					d == Random { MinPrice = 50; MaxPrice = 2000; Category = RING|AMULET; }
					w == Random { MinPrice = 50; MaxPrice = 2000; Category = WEAPON|SHIELD; }
					e == Random { MinPrice = 10; MaxPrice = 2000; Category = FOOD|POTION; }
					u == Random { MinPrice = 50; MaxPrice = 2000; Category = WAND|TOOL; }
					v == Random { MinPrice = 500; MaxPrice = 2000; Category = ANY_CATEGORY; }
					f == WOLF_FLESH lump;
					i == can { ContainedMaterial = POLAR_BEAR_FLESH; }
					l == lantern;
					2 == lantern { SideStackIndex = DOWN; }
					3 == lantern { SideStackIndex = RIGHT; }
					4 == lantern { SideStackIndex = LEFT; }
				}
			}
			{
				##2#2##
				#.aaa.#
				#edduw#
				3efluw4
				#.eivw#
			}
		}

		Room
		{
			Pos=27,1;
			Size = 7,6;
			WallSquare = solidterrain(SNOW_TERRAIN),wall(BRICK_FINE);
			FloorSquare = solidterrain(PARQUET), 0;
			GenerateDoor = false;
			DivineMaster = SOPHOS;
			Type = ROOM_LIBRARY;
			GenerateLanterns = false;
			
			Square, Pos 3, 5;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = door;
			}

			Square, Pos 3, 0;
			{
				OTerrain = STONE wall(BRICK_PROPAGANDA);
			}

			Square, Pos 3, 3;
			{
				Character = librarian { IsMaster = true; }
			}

			Square, Pos 3, 0;
			{
				Items == lantern { SideStackIndex = DOWN; }
			}

			Square, Pos 1, 5;
			{
				Items == lantern { SideStackIndex = DOWN; }
			}

			Square, Pos 5, 5;
			{
				Items == lantern { SideStackIndex = DOWN; }
			}

			OTerrainMap
			{
				Pos = 1,1;
				Size = 5,4;
				Types
				{
					= = olterraincontainer(BOOK_CASE) { ItemsInside = { 2, Random { MaxPrice = 500; Category = SCROLL|BOOK; }, Random { MaxPrice = 500; Category = SCROLL|BOOK; } } }
				}
			}
			{
				=====
				=...=
				=...=
				=...=
			}
		}

		Square, Pos 29, 7;
		{
			Character = guard(VETERAN);
		}

		Square, Pos 31, 7;
		{
			Character = guard(VETERAN);
		}

		Room
		{
			Pos=22,53;
			Size = 7,6;
			AltarPossible = false;
			WallSquare = solidterrain(SNOW_TERRAIN),wall(BRICK_FINE);
			FloorSquare = solidterrain(FLOOR), 0;
			DoorSquare = solidterrain(FLOOR), door;
			GenerateDoor = false;
			DivineMaster = LORICATUS;
			GenerateLanterns = false;

			Square, Pos 3, 5;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = door;
			}

			Square, Pos 3, 0;
			{
				OTerrain = STONE wall(BRICK_PROPAGANDA);
			}

			Square, Pos 0, 3;
			{
				Items == lantern { SideStackIndex = RIGHT; }
			}

			Square, Pos 6, 3;
			{
				Items == lantern { SideStackIndex = LEFT; }
			}

			Square, Pos 2, 0;
			{
				Items == lantern { SideStackIndex = DOWN; }
			}

			Square, Pos 4, 0;
			{
				Items == lantern { SideStackIndex = DOWN; }
			}

			Square, Pos 3, 2;
			{
				Character = smith { IsMaster = true; }
			}

			Square, Pos 3, 3;
			{
				OTerrain = decoration(ANVIL);
			}
		}

		Room
		{
			FloorSquare = solidterrain(FLOOR), 0;
			WallSquare = solidterrain(SNOW_TERRAIN), WOOD wall(BRICK_FINE);
			DoorSquare = solidterrain(FLOOR), door;
		}

		Room
		{
			FloorSquare = solidterrain(FLOOR), 0;
			WallSquare = solidterrain(SNOW_TERRAIN), WOOD wall(BRICK_FINE);
			DoorSquare = solidterrain(FLOOR), door;
		}

		Room
		{
			FloorSquare = solidterrain(FLOOR), 0;
			WallSquare = solidterrain(SNOW_TERRAIN), WOOD wall(BRICK_FINE);
			DoorSquare = solidterrain(FLOOR), door;
		}

	}
}

Dungeon NEW_ATTNAM;
{
	Levels = 1;

	Level 0;
	{
		LevelMessage = "You hear someone shouting: \"Faster! Faster! The Empire wants yer bananas!\"";
		Description = "New Attnam";
		ShortDescription = "New Attnam";
		FillSquare = solidterrain(GRASS_TERRAIN), 0;
		Size = 55, 55;
		GenerateMonsters = false;
		Rooms = 5:7;
		Items = 0;
		IsOnGround = true;
		TeamDefault = NEW_ATTNAM_TEAM;
		AmbientLight = rgb24(118, 118, 118);
		LOSModifier = 48;
		IgnoreDefaultSpecialSquares = false;
		AutoReveal = true;

		RoomDefault
		{
			Pos = 2:36,2:36;
			Size = 4:6,4:6;
			AltarPossible = false;
			WallSquare = solidterrain(GRASS_TERRAIN),WOOD wall(BRICK_PRIMITIVE);
			FloorSquare = solidterrain(GRASS_TERRAIN), 0;
			DoorSquare = solidterrain(GRASS_TERRAIN), door;
			GenerateDoor = true;
			DivineMaster = 0;
			GenerateTunnel = false;
			GenerateLanterns = false;
			Type = ROOM_NORMAL;
			GenerateFountains = false;
			AllowLockedDoors = false;
			AllowBoobyTrappedDoors = false;
			Shape = ROUND_CORNERS;
		}

		Room
		{
			Pos = 4,4;
			Size = 17,19;
			WallSquare = solidterrain(GRASS_TERRAIN),WOOD wall(BRICK_FINE);
			FloorSquare = solidterrain(FLOOR), 0;
			GenerateDoor = false;
			DivineMaster = SILVA;
			GenerateLanterns = false;

			OTerrainMap
			{
				Pos = 3,3;
				Size = 11,13;
				Types
				{
					_ = 0;
					o = GOLD wall(BRICK_PROPAGANDA);
					# = GOLD wall(BRICK_FINE);
					^ = decoration(HOLY_TREE);
					c = decoration(COUCH);
				}
			}
			{
				...##o##...
				.###___###.
				##_______##
				#____c____#
				#___^_^___#
				#_________#
				##_______##
				.##_____##.
				..##___##..
				...#___#...
				...#___#...
				...#___#...
				...#___#...
			}

			CharacterMap
			{
				Pos = 3,3;
				Size = 11,13;
				Types
				{
					_ = 0;
					# = 0;
					I = imperialist { Team = COLONIST_TEAM; IsMaster = true; }
					g = guard(ROOKIE) { Team = COLONIST_TEAM; }
					f = femaleslave(NEW_ATTNAM);
				}
			}
			{
				...#####...
				.###_g_###.
				##_______##
				#___fIf___#
				#g_______g#
				#_________#
				##_______##
				.##_____##.
				..##g_g##..
				...#___#...
				...#___#...
				...#___#...
				...#g_g#...
			}

			GTerrainMap
			{
				Pos = 3,3;
				Size = 11,13;
				Types
				{
					# = SILVER solidterrain(FLOOR);
					_ = SILVER solidterrain(FLOOR);
				}
			}
			{
				...#####...
				.###___###.
				##_______##
				#_________#
				#_________#
				#_________#
				##_______##
				.##_____##.
				..##___##..
				...#___#...
				...#___#...
				...#___#...
				...#___#...
			}
		}

		Room
		{
			Type = ROOM_LANDING_SITE;
			Size = 3, 3;
			Pos = 44, 44;
			AltarPossible = false;
			WallSquare = solidterrain(GRASS_TERRAIN),decoration(PALM);
			FloorSquare = solidterrain(LANDING_SITE), 0;
			GenerateDoor = false;
			GenerateTunnel = false;
			GenerateLanterns = false;
			GenerateFountains = false;
			Shape = RECTANGLE;

			Square, Pos 1, 1;
			{
				Items = { 10, banana, banana, banana, banana, banana, banana, banana, banana, banana, banana; }
			}
		}

		Square, Pos 12, 22; /* odd place? */
		{
			GTerrain = solidterrain(FLOOR);
			OTerrain = door;
		}

		Square, Pos 0, 33;
		{
			EntryIndex = STAIRS_UP;
		}

		Square, Random NOT_IN_ROOM;
		{
			OTerrain = boulder;
			Times = 25;
		}

		Square, Random NOT_IN_ROOM;
		{
			OTerrain = decoration(PALM);
			Times = 100;
		}

		Square, Pos 20, 44;
		{
			Character = encourager { Team = COLONIST_TEAM; }
		}

		Square, Pos 0, 45;
		{
			Character = bananagrower;
		}

		Square, Pos 10, 45;
		{
			Character = bananagrower;
		}

		Square, Pos 20, 45;
		{
			Character = bananagrower;
		}

		Square, Pos 30, 45;
		{
			Character = bananagrower;
		}

		Square, Pos 40, 45;
		{
			Character = bananagrower;
		}

		Square, Pos 45, 0;
		{
			Character = ostrich;
		}

		Square, Pos 45, 15;
		{
			Character = ostrich;
		}

		Square, Pos 45, 30;
		{
			Character = ostrich;
		}

		Square, BoundedRandom 0, 22, 28, 54, NOT_IN_ROOM;
		{
			Character = elder;
		}

		Square, Pos 11, 23;
		{
			OTerrain = sign { Text = "The mansion of Viceroy Richel Decos, formerly a temple of nature."; }
		}
	}
}

Dungeon UNDER_WATER_TUNNEL;
{
	Levels = 3;
	Description = "underwater tunnel";
	ShortDescription = "UT";

	LevelDefault
	{
		FillSquare = solidterrain(GROUND),wall(EARTH);
		Size = 80, 20;
		Rooms = 5:10;
		Items = 15:30;
		GenerateMonsters = true;
		IsOnGround = false;
		TeamDefault = MONSTER_TEAM;
		AmbientLight = 0;
		LOSModifier = 16;
		IgnoreDefaultSpecialSquares = false;
		DifficultyBase = 15;
		DifficultyDelta = 15;
		MonsterAmountDelta = 0;
		MonsterGenerationIntervalBase = 200;
		MonsterGenerationIntervalDelta = -50;

		Square, Random;
		{
			Items == beartrap { Team = MONSTER_TEAM; IsActive = true; }
			Times = 0:3;
		}

		RoomDefault
		{
			Pos = 2:XSize-5,2:YSize-5;
			Size = 4:11,4:11;
			AltarPossible = true;
			WallSquare = solidterrain(GROUND),wall(BRICK_OLD);
			FloorSquare = solidterrain(PARQUET), 0;
			DoorSquare = solidterrain(PARQUET),door;
			GenerateDoor = true;
			DivineMaster = 0;
			GenerateTunnel = true;
			GenerateLanterns = true;
			Type = ROOM_NORMAL;
			GenerateFountains = true;
			AllowLockedDoors = true;
			AllowBoobyTrappedDoors = true;
			Shape = RECTANGLE;
		}
	}

	Level 0;
	{
		IgnoreDefaultSpecialSquares = true;
		MonsterAmountBase = 5;

		RoomDefault
		{
			AltarPossible = false;
			AllowLockedDoors = false;
			AllowBoobyTrappedDoors = false;
		}

		Square, Random;
		{
			Character = spider;
			Times = 2;
		}

		Square, Random;
		{
			Character = kobold;
			Times = 2;
		}

		Square, Random;
		{
			Character = zombie;
			Times = 2;
		}

		Square, Random;
		{
			Character = carnivorousplant;
			Times = 2;
		}

		Square, BoundedRandom 61, 1, 78, 18, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_DOWN);
			EntryIndex = STAIRS_DOWN;
			AttachRequired = true;
		}

		Room
		{
			Pos = 2:XSize/4-5,2:YSize-5;
			Size = 5,5;
			AllowLockedDoors = false;
			AllowBoobyTrappedDoors = false;
			Shape = ROUND_CORNERS;

			Square, Pos 2,2;
			{
				OTerrain = link(STAIRS_UP);
				EntryIndex = STAIRS_UP;
			}

			Square, Pos 2,1;
			{
				Items == lantern;
			}
		}
	}

	Level 1;
	{
		Size = 160, 20;
		MonsterAmountBase = 15;
		Items = 20:40;

		RoomDefault
		{
			Pos = 2:XSize-5,2:YSize-5;
		}

		Square, Random;
		{
			Items == Random { MinPrice = 50; MaxPrice = 500; Category = BODY_ARMOR; }
		}

		Square, Random;
		{
			Items == Random { MinPrice = 50; MaxPrice = 500; Category = HELMET|CLOAK|BELT|BOOT|GAUNTLET; }
		}

		Square, BoundedRandom 1, 1, 18, 18, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}

		Square, BoundedRandom 141, 1, 158, 18, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP) { AttachedArea = 2; }
			EntryIndex = STAIRS_UP + 1;
			AttachRequired = true;
		}
	}

	Level 2;
	{
		MonsterAmountBase = 10;

		LevelMessage = "This level seems to be somehow alive...";

		Square, BoundedRandom 1, 1, 18, 18, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_DOWN) { AttachedArea = 1; AttachedEntry = STAIRS_UP + 1; }
			EntryIndex = STAIRS_DOWN;
			AttachRequired = true;
		}

		Room
		{
			Size = 5,5;
			Pos = 3*XSize/4:XSize/4-5,2:YSize-5;
			FloorSquare = solidterrain(GRASS_TERRAIN), 0;
			GenerateFountains = false;
			AltarPossible = false;
			GenerateLanterns = false;

			Square, Pos 2,2;
			{
				OTerrain = link(STAIRS_UP) { AttachedArea = WORLD_MAP; AttachedEntry = UNDER_WATER_TUNNEL_EXIT; }
				EntryIndex = STAIRS_UP;				
			}

			CharacterMap
			{
				Size = 3,3;
				Pos = 1,1;
				Types
				{
					c = carnivorousplant(GREATER);
					g = genetrixvesana;
				}
			}
			{
				.c.
				cgc
				.c.
			}
		}
	}
}

Dungeon MONDEDR;
{
	Levels = 2;

	Level 0;
	{
		Description = "Mondedr";
		ShortDescription = "Mondedr";
		FillSquare = solidterrain(SWAMP_TERRAIN), 0;
		Size = 70, 70;
		GenerateMonsters = false;
		Rooms = 2;
		Items = 0;
		IsOnGround = true;
		TeamDefault = NEW_ATTNAM_TEAM;
		AmbientLight = rgb24(110, 110, 110);
		LOSModifier = 48;
		IgnoreDefaultSpecialSquares = false;

		RoomDefault
		{
			Pos = 2:XSize-5,2:YSize-5;
			Size = 4:11,4:11;
			AltarPossible = false;
			WallSquare = solidterrain(GRASS_TERRAIN), wall(BRICK_FINE);
			FloorSquare = solidterrain(PARQUET), 0;
			DoorSquare = solidterrain(PARQUET), door;
			GenerateDoor = true;
			DivineMaster = 0;
			GenerateTunnel = false;
			GenerateLanterns = true;
			Type = ROOM_NORMAL;
			GenerateFountains = false;
			AllowLockedDoors = false;
			AllowBoobyTrappedDoors = false;
			Shape = RECTANGLE;
		}

		Room
		{
			Size = 57,23;
			AltarPossible = false;
			WallSquare = IRON solidterrain(FLOOR), 0;
			FloorSquare = IRON solidterrain(FLOOR), 0;
			GenerateDoor = false;
			DivineMaster = MORTIFER;
			GenerateFountains = false;
			GenerateLanterns = false;
			GenerateTunnel = false;
			Pos = 2,4;
			Type = ROOM_NORMAL;
			AllowLockedDoors = false;
			AllowBoobyTrappedDoors = false;
			Shape = RECTANGLE;

			Square, Pos 10, 7;
			{
				OTerrain = sign { Text = "Wine room. No entrance without permission."; }
			}

			GTerrainMap
			{
				Pos = 0,0;
				Size = 57,23;
				Types
				{
					# = STONE solidterrain(FLOOR);
					R = RUBY solidterrain(FLOOR);
					C = STONE solidterrain(FLOOR);
					S = SAPPHIRE solidterrain(FLOOR);
					L = liquidterrain(POOL) { MainMaterial = LAVA; }

				}
			}
			{
				#########################################################
				#.............#SSS#.....#.......#.....#...#.............#
				#.#####.#####.#SSS........................#.###########.#
				#.#CCC#.#CCC#.#SSS#.....#.......#.....#...#.#...#.#...#.#
				#.#CCC...CCC#.#############################.#.........#.#
				#.#CCC#.#CCC#.#...........................#.#...#.#...#.#
				#.#####.#####.#...........................#.#####.#####.#
				#.#CCC#.#CCC#.#...LLLLLLLLLLLLLLLLLLLLL...#.............#
				#.#CCC...CCC#.#...LLLLLLLLLLLLLLLLLLLLL...#.#####.#####.#
				#.#CCC#.#CCC#.#...LLLLLLLLLLLLLLLLLLLLL...#.#...#.#LLL#.#
				#.#####.#####.#...LLL...............LLL...#.#......LLC#.#
				#.#CCC#.#CCC#.#...LLL...............LLL...#.#...#.#LLL#.#
				#.#CCC...CCC#.#...LLL...............LLL...#.###########.#
				#.#CCC#.#CCC#.#...LLL...............LLL...#.............#
				#.###########.#...LLL...............LLL...#.###########.#
				#.#...RRR...#.#...LLL...............LLL...#.#.........#.#
				#.#...RRR...#.#...LLL...............LLL...#.#.........#.#
				#.#.........#.#...LLL...............LLL...#.#...........#
				#.#.........#.#...........................#.#.........#.#
				#.#.........#.#...........................#.#.........#.#
				#.#####.#####.######.###.#.....#.###.######.###########.#
				#......................#.........#......................#
				########################.#.....#.########################
			}

			OTerrainMap
			{
				Pos = 0,0;
				Size = 57,23;
				Types
				{
					# = STONE wall(BRICK_FINE);
					@ = IRON door(DOOR_PRISON) { Parameters = LOCKED;}
					3 = IRON brokendoor(DOOR_PRISON) { Parameters = LOCKED;}
					D = SAPPHIRE door { Parameters = LOCKED;}
					L = RUBY door { Parameters = LOCKED; }
					C = decoration(CARPET);
					T = throne;
					A = RUBY altar(MORTIFER);
					B = BRONZE door { Parameters = LOCKED;}
					R = DIAMOND door { Parameters = LOCKED;}
					I = IRON door;
				}
			}
			{
				#########################################################
				#.............#...#.....#.......#.....#...#.............#
				#.#####.#####.#...D...................L...#.###########.#
				#.#...#.#...#.#...#.....#.......#.....#...#.#...#.#...#.#
				#.#...B.B...#.##3#############R############.#...L.B...#.#
				#.#...#.#...#.#...........................#.#...#.#...#.#
				#.##3##.##3##.#...........................#.##@##.#####.#
				#.#...#.#...#.#...........................#.............#
				#.#...B.B...#.#...........................#.#####.#####.#
				#.#...#.#...#.#...........................#.#...#.#...#.#
				#.##3##.##@##.#...........................#.#...B.I...#.#
				#.#...#.#...#.#............T..............#.#...#.#...#.#
				#.#...B.D...#.#...........................#.###########.#
				#.#...#.#...#.#...........................#.............#
				#.###########.#.............C.............#.###########.#
				#.#....A....#.#.............C.............#.#........##.#
				#.#.........#.#.............C.............#.3........##.#
				#.#.........#.#.............C.............#.#........B..#
				#.#.........#.#.............C.............#.@........##.#
				#.#.........#.#.............C.............#.#........##.#
				#.#####D#####.######I###I##.C.##I###I######.###########.#
				#......................#..@.C.@..#......................#
				#########################3#.C.#@#########################
			}

			ItemMap
			{
				Pos = 0,0;
				Size = 57,23;
				Types
				{
					# == 0;
					X == MITHRIL MITHRIL meleeweapon(LONG_SWORD);
					A == amulet(AMULET_OF_LIFE_SAVING);
					a == Random { MinPrice = 50; MaxPrice = 2000; Category = HELMET|CLOAK|BODY_ARMOR|BELT|BOOT|GAUNTLET; }
					d == Random { MinPrice = 50; MaxPrice = 2000; Category = RING|AMULET; }
					w == Random { MinPrice = 50; MaxPrice = 2000; Category = WEAPON|SHIELD; }
					e == Random { MinPrice = 10; MaxPrice = 2000; Category = FOOD|POTION; }
					u == Random { MinPrice = 50; MaxPrice = 2000; Category = WAND|TOOL; }
					v == Random { MinPrice = 500; MaxPrice = 20000; Category = ANY_CATEGORY; }
					1 == lantern { SideStackIndex = UP; }
					2 == lantern { SideStackIndex = LEFT;}
				}
			}
			{		
				#########################################################
				#.............#...#.....#.......#.....#...#.............#
				#.#####.#####.#.A.........................#.###########.#
				#.#...#.#...#.#...#.....#.......#.....#...#.#...#.#...#.#
				#.#.........#.##1#######################1##.#.........#.#
				#.#...#.#...#.#...........................#.#...#.#...#.#
				#.#####.#####.#...........................#.#####.#####.#
				#.#...#.#...#.#..##...................##..#.............#
				#.#.........#.#..##.......#####.......##..#.#####.#####.#
				#.#...#.#...#.#...........................#.#...#.#...#.#
				#.#####.#####.#...........................#.#........v#.#
				#.#...#.#...#.#...........................#.#...#.#...#.#
				#.#.........#.#...........................#.###########.#
				#.#...#.#...#.#...........................#.............#
				#.#####1#####.#...........................#.###########.#
				#.#.........#.#...........................#.#.........2.#
				#.#.........#.#...........................#.#.aaaddd..#.#
				#.#.........#.#..##...................##..#.#.eeeuuu....#
				#.#.........#.#..##...................##..#.#.wwwvvv..#.#
				#.#.........#.#...........................#.#.........2.#
				#.#####.#####.######.###.#.....#.###.######.###########.#
				#......................#.........#......................#
				########################1#.....#1########################
			}

			CharacterMap
			{
				Pos = 0,0;
				Size = 57,23;
				Types
				{
					# = 0;
					Q = guard(NECRO);
					P = guard(REAPER);
					S = slave;
					M = mammoth;
				}
			}
			{
				#########################################################
				#.............#...#.....#.......#.....#...#.............#
				#.#####.#####.#...........................#.###########.#
				#.#...#.#.S.#.#...#.....#.......#.....#...#.#...#Q#...#.#
				#.#.S.......#.#############################.#.........#.#
				#.#...#.#...#.#...........................#.#...#.#...#.#
				#.#####.#####.#...........................#.#####.#####.#
				#.#...#.#...#.#..##...................##..#.............#
				#.#.........#.#..##.......#####.......##..#.#####.#####.#
				#.#S..#.#...#.#...........................#.#...#.#...#.#
				#.#####.#####.#...........................#.#.........#.#
				#.#...#.#...#.#..........Q..P..Q..........#.#...#Q#...#.#
				#.#.S.....M.#.#...........................#.###########.#
				#.#...#Q#...#.#...........................#.............#
				#.###########.#...........................#.###########.#
				#.#Q.......Q#.#...........................#.#Q........#.#
				#.#.........#.#...........................#.#.........#.#
				#.#.........#.#..##...................##..#.#...........#
				#.#.........#.#..##...................##..#.#.........#.#
				#.#Q.......Q#.#...........................#.#Q........#.#
				#.#####.#####.######.###.#.....#.###.######.###########.#
				#.....................Q#.Q.....Q.#Q.....................#
				########################.#.....#.########################
			}
		}

		Room
		{
			Size = 5,9;
			AltarPossible = false;
			DivineMaster = MELLIS;
			Type = ROOM_SHOP;
			GenerateFountains = false;

			CharacterMap
			{
				Pos = 1, 1;
				Size = 3, 7;

				Types
				{
					g = guard(NECRO);
					s = shopkeeper(MONDEDR) { IsMaster = true; }
				}
			}
			{
				g.g
				...
				...
				.s.
				...
				...
				g.g
			}

			ItemMap
			{
				Pos = 1, 1;
				Size = 3, 7;

				Types
				{
					g == Random { MinPrice = 200; MaxPrice = 10000; Category = GAUNTLET; }
					b == Random { MinPrice = 200; MaxPrice = 10000; Category = BOOT; }
					a == Random { MinPrice = 200; MaxPrice = 10000; Category = HELMET|CLOAK|BODY_ARMOR|BELT; }
					d == Random { MinPrice = 200; MaxPrice = 10000; Category = RING|AMULET; }
					w == Random { MinPrice = 200; MaxPrice = 10000; Category = WEAPON|SHIELD; }
					e == Random { MinPrice = 50; MaxPrice = 10000; Category = FOOD|POTION; }
					u == Random { MinPrice = 200; MaxPrice = 10000; Category = WAND|TOOL; }
					r == Random { MinPrice = 200; MaxPrice = 10000; Category = SCROLL|BOOK; }
					s == wand(WAND_OF_STRIKING);
				}
			}
			{
			    .g.
			    ddb
			    err
			    e.w
			    auw
			    auw
			    .s.
			}
		}
		
		Square, Pos 32, 40;
		{
			EntryIndex = STAIRS_UP;
		}

		Square, Pos 13, 11;
		{
			OTerrain = link(STAIRS_DOWN);
			EntryIndex = STAIRS_DOWN;
		}
	}

	Level 1;
	{
		Size = 70, 70;
		IsOnGround = false;
		TeamDefault = 9;
		AmbientLight = 0;
		LOSModifier = 16;
		IgnoreDefaultSpecialSquares = false;
		Description = "Mondedr dungeon";
		ShortDescription = "MD";
		FillSquare = solidterrain(FLOOR), IRON wall(BRICK_OLD);
		Rooms = 1;
		GenerateMonsters = false;
		Items = 0;
		IgnoreDefaultSpecialSquares = true;

		Room
		{
			Size = 20,9;
			AltarPossible = false;
			WallSquare = solidterrain(FLOOR), IRON wall(BRICK_OLD);
			FloorSquare = IRON solidterrain(FLOOR), 0;
			GenerateDoor = false;
			DivineMaster = MORTIFER;
			GenerateFountains = false;
			GenerateLanterns = false;
			GenerateTunnel = false;
			Pos = 2:XSize-5,2:YSize-5;
			Type = ROOM_NORMAL;
			AllowLockedDoors = false;
			AllowBoobyTrappedDoors = false;
			Shape = RECTANGLE;

			Square, Pos 4,4;
			{
				OTerrain = link(STAIRS_UP);
				EntryIndex = STAIRS_UP;
			}
								
			GTerrainMap
			{
				Pos = 0,0;
				Size = 20,9;
				Types
				{
					# = STONE solidterrain(FLOOR);
				}
			}
			{
				####################
				#..........#.......#
				#.......##.#.......#
				#.......##.........#
				#.......##.#.......#
				#.......##.#.......#
				#.......#..#.......#
				#.......####.......#
				####################
			}

			OTerrainMap
			{
				Pos = 0,0;
				Size = 20,9;
				Types
				{
					# = IRON wall(BRICK_OLD);
				}
			}
			{
				####################
				#..........#.......#
				#.......##.#.......#
				#.......##.........#
				#.......##.#.......#
				#.......##.#.......#
				#.......#..#.......#
				#.......####.......#
				####################
			}

			ItemMap
			{
				Pos = 0,0;
				Size = 20,9;
				Types
				{
					# == 0;
					1 == lantern { SideStackIndex = UP; }
				}
			}
			{
				####################
				#..........#.......#
				#.......##.#.......#
				#.......##.........#
				#.......##.#.......#
				#.......##.#.......#
				#.......#..#.......#
				#.......####.......#
				####1##########1####
			}

			CharacterMap
			{
				Pos = 0,0;
				Size = 20,9;
				Types
				{
					# = 0;
					B = guard(NECRO);
				}
			}
			{
				####################
				#.......B..#.......#
				#.......##.#.......#
				#.......##.........#
				#.......##.#.......#
				#.......##.#.......#
				#.......#..#.......#
				#.......####.......#
				####################
			}
		}		
	}
}
