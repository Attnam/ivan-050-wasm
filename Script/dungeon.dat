Dungeons=4;
Teams=8;

/*
 * Description of teams:
 * 0 - Player and pets
 * 1 - Monsters, default relation to other teams == hostile
 * 3 - Petrus's team during the Final Battle
 */

Team 2; /* Residents of Attnam */
{
	Relation 0, FRIEND;
	AttackEvilness=250;
}

Team 4; /* Enner beasts */
{
	Relation 0, HOSTILE;
	Relation 2, HOSTILE;
	Relation 3, HOSTILE;
}

Team 5; /* Spawned hostile angels */
{
	Relation 0, HOSTILE;
	Relation 1, UNCARING;
	Relation 4, HOSTILE;
}

Team 6; /* Dungeon shopkeepers */
{
	Relation 1, UNCARING;
	Relation 4, HOSTILE;
	AttackEvilness=100;
}

Team 7; /* Ivan */
{
	Relation 4, HOSTILE;
	AttackEvilness=100;
}

Dungeon ELPURI_CAVE;
{
	Levels=7;

	LevelDefault
	{
		FillSquare=solidterrain(GROUND),wall(EARTH);

		Variable XSize = 64;
		Variable YSize = 36;

		Size=XSize, YSize;
		Rooms=10+rand%21;
		Items=25+rand%26;
		GenerateMonsters=true;
		ReCalculate=true;
		OnGround=false;
		TeamDefault=1;
		AmbientLight=0;
		LOSModifier=16;
		IgnoreDefaultSpecialSquares = false;

		Square, Random NOT_WALKABLE|NOT_IN_ROOM;
		{
			Item = stone;
			Times = 25+rand%25;
		}

                Square, Random;
		{
			Item = mine { Team = MONSTER_TEAM; Active = true; }
			Times = rand%4;
		}

		Square, Random;
		{
			Item = beartrap { Team = MONSTER_TEAM; Active = true; }
			Times = rand%4;
		}

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_DOWN);
			EntryIndex = STAIRS_DOWN;
			AttachRequired = true;
		}

		RoomDefault
		{
			Pos=2+rand%(XSize-6),2+rand%(YSize-6);
			Size=4+rand%8,4+rand%8;
			AltarPossible=true;
			WallSquare=solidterrain(GROUND),wall(BRICK_OLD);
			FloorSquare=solidterrain(PARQUET),empty;
			DoorSquare=solidterrain(PARQUET),door;
			GenerateDoor=true;
			ReCalculate=true;
                        DivineMaster=0;
                        GenerateTunnel=true;
			GenerateLanterns=true;
			Type=normalroom;
			GenerateFountains=true;
			AllowLockedDoors=true;
			AllowBoobyTrappedDoors=true;
			Shape = RECTANGLE;
		}
	}

	Level 0;
	{
		LevelMessage="You hear many wolves howling. You shiver.";
		Rooms=10+rand%21;

		Room 1;
		{
			Size=7,7;
			AltarPossible=false;

			Square, Pos 3, 3;
			{
				Item = scrollofenchantarmor;
			}

			Square, Pos 3, 3;
			{
				Item = scrollofenchantweapon;
			}

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					w=wolf;
					W=werewolfhuman;
				}
			}
			{
				wwwww
				wwwww
				wwWww
				wwwww
				wwwww
			}
		}
	}

	Level 1;
	{
		Rooms=10+rand%21;

		Room 2;
		{
			Size=5,7;
			AltarPossible=false;
			DivineMaster=mellis;
			Type=shop;
			AllowLockedDoors=false;
			AllowBoobyTrappedDoors=false;
			GenerateFountains=false;

			Square, Pos 1,1;
			{
				Character=guard { Team=6; }
			}

			Square, Pos 3,1;
			{
				Character=guard { Team=6; }
			}

			Square, Pos 1,5;
			{
				Character=guard { Team=6; }
			}

			Square, Pos 3,5;
			{
				Character=guard { Team=6; }
			}

			Square, Pos 2,3;
			{
				Character=shopkeeper { Team=6; }
			}

			Square, Pos 2,1;
			{
				Item = IRON gauntlet;
				Times = 2;
			}

			Square, Pos 3,2;
			{
				Item = IRON boot;
				Times = 2;
			}

			ItemMap
			{
				Pos=1,1;
				Size=3,5;

				Types
				{
					a = Random { MinPrice = 100; MaxPrice = 10000; Category = HELMET|CLOAK|BODY_ARMOR|BELT; }
					d = Random { MinPrice = 100; MaxPrice = 10000; Category = RING|AMULET; }
					w = Random { MinPrice = 100; MaxPrice = 10000; Category = WEAPON|SHIELD; }
					e = Random { MinPrice = 50; MaxPrice = 10000; Category = FOOD|POTION; }
					u = Random { MinPrice = 100; MaxPrice = 10000; Category = WAND|TOOL; }
					s = wandofstriking;
				}
			}
			{
			    ...
			    dd.
			    e.w
			    auw
			    .s.
			}
		}
	}

	Level 2;
	{
		LevelMessage="You hear a wailing scream in the distance. An enner beast must dwell in the level!";
		Rooms=10+rand%21;

		Square, Random NOT_IN_ROOM;
		{
			Character=ennerbeast { Team=4; }
		}
	}

	Level 3;
	{
		LevelMessage="You hear someone singing loudly: \"Uncle Lenin lives in Russia...\"";
		Rooms=10+rand%21;

		Square, Random NOT_IN_ROOM;
		{
			Character=communist { Team=7; }
		}
	}

	Level DARK_LEVEL;
	{
		Description=DarkLevel;
		LevelMessage="You shudder as you sense a being of pure darkness nearby. Your goal is near.";
		FillSquare=solidterrain(FLOOR), IRON wall(BRICK_OLD);
		Items=0;
		IgnoreDefaultSpecialSquares = true;

		RoomDefault
		{
			AltarPossible=false;
			WallSquare=solidterrain(FLOOR), IRON wall(BRICK_OLD);
			DoorSquare=solidterrain(PARQUET), IRON door;
			GenerateLanterns=false;
		}

		Square, Random IN_ROOM;
		{
			Character=elpuri;
		}

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}
	}

	Level 4+rand%4;
	{
		Rooms=10+rand%21;

		Room 1;
		{
			Size=7,7;
			AltarPossible=false;

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					G=golem;
				}
			}
			{
				GGGGG
				GGGGG
				GGGGG
				GGGGG
				GGGGG
			}
		}
	}

	Level 5;
	{
		IgnoreDefaultSpecialSquares = true;

		Square, Random NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}

		Room 0;
		{
			Size=7,7;
			AltarPossible=false;
			WallSquare=solidterrain(GROUND),IRON wall(BRICK_OLD);
			FloorSquare=solidterrain(PARQUET),empty;
			DoorSquare=solidterrain(PARQUET),IRON door;

			Square, Pos 3,3;
			{
				OTerrain = IRON link(STAIRS_DOWN);
			}

			Square, Pos 3,5;
			{
				EntryIndex = STAIRS_DOWN;
			}
		}
	}

	Level OREE_LAIR;
	{
		Description=OreeLair;
		LevelMessage="\"Welcome to my lair, mortal! There's no escape now!\" Suddenly the stairs disappear.";
		FillSquare=solidterrain(FLOOR), IRON wall(BRICK_OLD);
		Rooms=1;
		GenerateMonsters=false;
		Items=0;
		ReCalculate=false;
		IgnoreDefaultSpecialSquares = true;

		Room 0;
		{
			Size=7,7;
			AltarPossible=false;
			WallSquare=solidterrain(FLOOR), IRON wall(BRICK_OLD);
			FloorSquare=solidterrain(PARQUET),empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineMaster=mortifer;
			GenerateFountains=false;

			Square, Pos 3,1;
			{
				OTerrain = IRON altar(mortifer);
			}

			Square, Pos 3,3;
			{
				EntryIndex = STAIRS_UP;
			}

			Square, Pos 3,5;
			{
				OTerrain = IRON link(STAIRS_UP);
			}

			CharacterMap
			{
				Pos=1,1;
				Size=5,5;

				Types
				{
					O=oree;
					B=darkknight(ELITE);
					G=BLOOD golem;
				}
			}
			{
				..O..
				.BBB.
				GB.BG
				.BBB.
				..G..
			}
		}
	}
}

Dungeon ATTNAM;
{
	Levels=1;

	Level 0;
	{
		Description=Attnam;
		FillSquare=solidterrain(GRASS_TERRAIN),empty;

		Variable XSize = 61;
		Variable YSize = 62;

		Size=XSize, YSize;
		GenerateMonsters=false;
		Rooms=25 + rand % 6;
		Items=0;
		ReCalculate=false;
		OnGround=true;
		TeamDefault=2;
		AmbientLight=rgb24(115, 115, 115);
		LOSModifier=48;
		IgnoreDefaultSpecialSquares = false;

		RoomDefault
		{
			Pos=2+rand%(XSize-6),2+rand%(YSize-6);
			Size=4+rand%8,4+rand%8;
			AltarPossible=false;
			WallSquare=solidterrain(GRASS_TERRAIN),wall(BRICK_FINE);
			FloorSquare=solidterrain(PARQUET),empty;
			DoorSquare=solidterrain(PARQUET),door;
			GenerateDoor=true;
			ReCalculate=true;
			DivineMaster=0;
			GenerateTunnel=false;
			GenerateLanterns=true;
			Type=normalroom;
			GenerateFountains=false;
			AllowLockedDoors=false;
			AllowBoobyTrappedDoors=false;
			Shape = RECTANGLE;
		}

		Square, Random NOT_IN_ROOM;
		{
			OTerrain=decoration(PINE);
			Times=50;
		}

		Square, Random NOT_IN_ROOM;
		{
			OTerrain=decoration(SPRUCE);
			Times=200;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character=hunter;
			Times=10;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character=polarbear;
			Times=5;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character=farmer;
			Times=5;
		}

		Square, Random NOT_IN_ROOM;
		{
			Character=housewife;
			Times=5;
		}

		Square, Pos 30,61;
		{
			EntryIndex = STAIRS_UP;
		}
	
		Room 0;
		{
			Pos=10,10;
			Size=41,42;
			AltarPossible=false;
			WallSquare=solidterrain(GRASS_TERRAIN),STONE wall(BRICK_FINE);
			FloorSquare=solidterrain(GRASS_TERRAIN),empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineMaster=valpurus;
			GenerateLanterns=false;
			Type=cathedral;
			
			Square, Pos 19, 41;
			{
				OTerrain = empty;
			}

			Square, Pos 20, 41;
			{
				OTerrain = empty;
			}

			Square, Pos 21, 41;
			{
				OTerrain = empty;
			}

			Square, Pos 31, 41;
			{
				OTerrain = STONE wall(BRICK_PROPAGANDA);
			}

			Square, Pos 9, 41;
			{
				OTerrain = STONE wall(BRICK_PROPAGANDA);
			}
			
			GTerrainMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = MARBLE solidterrain(FLOOR);
					- = MARBLE solidterrain(FLOOR);
					~ = liquidterrain(POOL);
				}
			}
			{
				............#########............
				............#-------#............
				####......###-------###......####
				#--#......#-----------#......#--#
				#--#....###-----------###....#--#
				#--#....#---------------#....#--#
				#--###..#---------------#..###--#
				#----#..#---------------#..#----#
				#----#..#---------------#..#----#
				###--#..###-----------###..#--###
				..#--###..#-----------#..###--#..
				..#----#..#-----------#..#----#..
				..###--####-----------####--###..
				....#-----#-----------#-----#....
				....#-----#-----------#-----#....
				....####--#-----------#--####....
				.......#--#-----------#--#.......
				......###-#-----------#-###......
				..#####-#-#-----------#-#-#####..
				.##-------#-----------#-------##.
				.#---~~~#-#-----------#-#------#.
				.#---~~~#-#-----------#-#------#.
				.##--~~~#-#-----------#-#-----##.
				..##-~~~#-#-----------#-#----##..
				...##~~~#-######-######-#---##...
				....#~~~#---------------#---#....
				....#~~~#---------------#---#....
				...#######---###-###---#######...
				####---------#.....#---------####
				#--------#####.....#####--------#
				#--------#.............#--------#
				##---#####.............#####---##
				.##--#.....................#--##.
				..####.....................####..
			}

			OTerrainMap
			{
				Pos=1,1;
				Size=39,40;
				Types
				{
					# = MARBLE wall(BRICK_FINE);
					@ = MARBLE wall(BRICK_PROPAGANDA);
					T = throne;
					c = decoration(CARPET);
					A = VALPURIUM altar(valpurus);
					D = MARBLE door;
					L = MARBLE door { Parameters = LOCKED; }
					b = decoration(LINDEN);
					1 = decoration(POOL_CORNER) { VisualEffects = NONE; }
					2 = decoration(POOL_CORNER) { VisualEffects = MIRROR; }
					3 = decoration(POOL_CORNER) { VisualEffects = MIRROR | FLIP; }
					4 = decoration(POOL_CORNER) { VisualEffects = FLIP; }
					5 = decoration(POOL_BORDER) { VisualEffects = NONE; }
					6 = decoration(POOL_BORDER) { VisualEffects = ROTATE; }
					7 = decoration(POOL_BORDER) { VisualEffects = FLIP; }
					8 = decoration(POOL_BORDER) { VisualEffects = MIRROR | ROTATE; }
					s = decoration(COUCH);
					f = fountain;
					d = decoration(DOUBLE_BED);
					B = GOLD boulder; 
				}
			}
			{
				b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b
				.......................................
				b...b...b..b...b.b.b.b.b...b..b...b...b
				..b...b........#########........b...b..
				b....b.......bb#.......#bb.......b....b
				...####b..b..###.......###..b..b####...
				b.b#..#.b....#...........#....b.#..#b.b
				...#..#....###...........###....#..#...
				b.b#..#b..b#.....T...T.....#b..b#..#b.b
				...#..###..#.......c.......#..###.B#...
				b.b#....#.b#.......c.......#b.#....#b.b
				...#....#..#.......c.......#..#BB..#...
				b.b###..#b.###.....c.....###.b#..###b.b
				....b#..#@#.b#.....c.....#b.#@#.B#b....
				b....#....#..#.....c.....#..#..B.#....b
				..bb.###..####.....c.....####..###.bb..
				b.....b#.....#.....c.....#...B.#b.....b
				.b..b..#.....#.....c.....#.B...#..b..b.
				b..b...####..#.....c.....#..####...b..b
				b....b....#..#.....c.....#.B#....b....b
				.b.b....b###D#.....c.....#D###b....b.b.
				b...b#####.#.#.....c.....#.#.#####b.b.b
				....##.....D.#.....c.....#.D.....##....
				b..b#.s.152#.#.....c.....#.#......#b..b
				.b..#...8.6#.#.....c.....#.#..A...#..b.
				b...##..8.6#.#.....c.....#.#.....##...b
				....b##.8.6#.#...........#.#....##b....
				b.b..b##8.6#.######D######.#...##b..b.b
				.......#8.6#...............#...#.......
				b...b.b#473#...............#...#b.b...b
				.b....##@####...###D###...####@##....b.
				b..####.s.s.D...#.b.b.#...L.....####..b
				..b#.d......#####.....#####........#b..
				b..#....s.s.#b..b.....b..b#........#..b
				.b.##...#####.bb..b.b..bb.#####...##.b.
				b..b##s.#b.b......f.f......b.b#..##b..b
				....b####....b...........b....####b....
				b.b...b...b.......b.b.......b...b...b.b
				...............bb.....bb...............
				b.b.b.b.b.b.b.b..b...b..b.b.b.b.b.b.b.b
			}

			ItemMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = 0;
					a = avatarofvalpurus;
					b = banana;
					k = kiwi;
					p = pineapple;
					o = IRON meleeweapon(HALBERD);
					l = MITHRIL MITHRIL meleeweapon(LONG_SWORD);
					t = IRON IRON meleeweapon(TWO_HANDED_SWORD);
					m = IRON meleeweapon(MACE);
					s = IRON meleeweapon(SPEAR);
					c = bodyarmor(CHAIN_MAIL);
					e = backpack;
					g = GOLD stone;
					i = SILVER stone;
					h = SAPPHIRE stone;
					r = RUBY stone;
					d = DIAMOND stone;
					C = RUBY chest;
					W = wandofpolymorph;
					1 = lantern { SideStackIndex = UP; }
					2 = lantern { SideStackIndex = DOWN; }
					3 = lantern { SideStackIndex = RIGHT; }
					4 = lantern { SideStackIndex = LEFT; }
					R = ring(RING_OF_FIRE_RESISTANCE); 
					I = ring(RING_OF_INVISIBILITY);
					E = amulet(AMULET_OF_ESP);
					S = GOLD meleeweapon(LONG_SWORD);
					H = DIAMOND helmet(HELM_OF_UNDERSTANDING);
					G = GOLD banana;
				}
			}
			{
				............##2###2##............
				............#.......#............
				####......###.......###......####
				#..#......#...........#......#rd#
				#..#....###...........###....#gg#
				#..#....#...d.....a.d...#....#gC#
				#..###..#......p.p......#..###IR#
				#...e#..#......b.b......#..#EEII#
				#...e#..#......k.k......#..#SHHG#
				##1.e#..##1.r..p.p..r.1##..#dg1##
				..#.e4##..#....b.b....#..##3rr#..
				..#....#..#....k.k....#..#rRRR#..
				..###..4###....p.p....###3gi###..
				....#.....3.h..b.b..h.4irdWg#....
				....#.....#....k.k....#iEggg#....
				....###3..#....p.p....#SW4###....
				.......#..#....b.b....#gd#.......
				......###.3.i..k.k..i.4.###......
				..#####.#.#....p.p....#.#.#####..
				.##.......#....b.b....#.......##.
				.#......3.#....k.k....#.4......#.
				.#......#.3.g..p.p..g.4.#......#.
				.##.....4.#....b.b....#.3.....##.
				..##....#.#...........#.#....##..
				...##...#.##2###.###2##.#...##...
				....#...4...............3...#....
				....#...#...............#...#....
				...###2###...##2.2##...###2###...
				####.........#.....#....ooool####
				#........#####.....#####.....ttc#
				#........#.............#ssss...c#
				##...#####.............#####mm.##
				.##..#.....................#mm##.
				..####.....................####..
			}

			CharacterMap
			{
				Pos=4,4;
				Size=33,34;
				Types
				{
					# = 0;
					P = petrus;
					c = guard;
					p = priest;
					d = dolphin;
					l = lightfrog;
					s = femaleslave;
					1 = petrusswife(1);
					2 = petrusswife(2);
					3 = petrusswife(3);
					4 = petrusswife(4);
					5 = petrusswife(5);
					6 = petrusswife(6);
					k = kamikazedwarf(valpurus);
				}
			}
			{
				............#########............
				............#c..c..c#............
				####......###.......###......####
				#k.#......#c....l....c#......#..#
				#k.#....###...........###....#..#
				#k.#....#c...sPs.s.s...c#....#..#
				#k.###..#...............#..###..#
				#k...#..#..l....l....l..#..#....#
				#k...#..#c.............c#..#....#
				###..#..###...........###..#..###
				..#..###..#...........#..###..#..
				..#....#..#c.l.....l.c#..#....#..
				..###k.####...........####..###..
				....#k...k#...........#.....#....
				....#k...k#...........#.....#....
				....####.k#c.........c#..####....
				.......#..#...........#..#.......
				......###.#...........#.###......
				..#####c#.#...........#.#.#####..
				.##.......#c.........c#.......##.
				.#......#.#...........#.#..p...#.
				.#....d.#.#...........#.#......#.
				.##...d.#.#...........#.#.....##.
				..##.d.d#.#c.........c#.#....##..
				...##.d.#.######.######.#...##...
				....#.d.#......c.c......#...#....
				....#...#...............#...#....
				...#######...###.###..c#######...
				####.3.5.....#c...c#..c......####
				#.1......#####.....#####........#
				#....4.6.#.............#........#
				##...#####.............#####...##
				.##2.#.....................#..##.
				..####.....................####..
			}
		}

		Room 1;
		{
			Pos=32,54;
			Size=7,5;
			AltarPossible=false;
			WallSquare=solidterrain(GRASS_TERRAIN),wall(BRICK_FINE);
			FloorSquare=solidterrain(PARQUET),empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineMaster=mellis;
			Type=shop;
			
			Square, Pos 3, 4;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = door;
			}

			Square, Pos 1, 1;
			{
				Character = slave;
			}

			Square, Pos 5, 1;
			{
				Character = shopkeeper;
			}

			ItemMap
			{
				Pos=1,1;
				Size=5,3;
				Types
				{
					a = Random { MinPrice = 50; MaxPrice = 2000; Category = HELMET|CLOAK|BODY_ARMOR|BELT; }
					d = Random { MinPrice = 50; MaxPrice = 2000; Category = RING|AMULET; }
					w = Random { MinPrice = 50; MaxPrice = 2000; Category = WEAPON|SHIELD; }
					e = Random { MinPrice = 10; MaxPrice = 2000; Category = FOOD|POTION; }
					u = Random { MinPrice = 50; MaxPrice = 2000; Category = WAND|TOOL; }
					f = WOLF_FLESH lump;
					i = can { ContainedMaterial = POLAR_BEAR_FLESH; }
					l = lantern;
				}
			}
			{
			    .aaa.
			    edwww
			    efilu
			}
		}

		Room 2;
		{
			Pos=54,55;
			Size=5,5;
			WallSquare=solidterrain(GRASS_TERRAIN),STEEL wall(BRICK_FINE);
			GenerateDoor=false;
			DivineMaster=legifer;
			Type=temple;

			Square, Pos 2, 0;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = STEEL door;
			}

			Square, Pos 2, 2;
			{
				OTerrain = STEEL altar(legifer);
			}

			Square, Pos 2, 3;
			{
				Character = priest;
			}
		}

		Room 3;
		{
			Pos=2,55;
			Size=5,5;
			WallSquare=solidterrain(GRASS_TERRAIN),MARBLE wall(BRICK_FINE);
			GenerateDoor=false;
			DivineMaster=dulcis;
			Type=temple;

			Square, Pos 4, 2;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = MARBLE door;
			}

			Square, Pos 2, 2;
			{
				OTerrain = MARBLE altar(dulcis);
			}

			Square, Pos 1, 2;
			{
				Character = priest;
			}
		}

		Room 4;
		{
			Pos=54,2;
			Size=5,5;
			WallSquare=solidterrain(GRASS_TERRAIN),WOOD wall(BRICK_FINE);
			GenerateDoor=false;
			DivineMaster=seges;
			Type=temple;

			Square, Pos 0, 2;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = WOOD door;
			}

			Square, Pos 2, 2;
			{
				OTerrain = WOOD altar(seges);
			}

			Square, Pos 3, 2;
			{
				Character = priest;
			}
		}

		Room 5;
		{
			Pos=2,2;
			Size=5,5;
			WallSquare=solidterrain(GRASS_TERRAIN),PARCHMENT wall(BRICK_FINE);
			GenerateDoor=false;
			DivineMaster=sophos;
			Type=temple;

			Square, Pos 2, 4;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = PARCHMENT door;
			}

			Square, Pos 2, 2;
			{
				OTerrain = PARCHMENT altar(sophos);
			}

			Square, Pos 2, 1;
			{
				Character = priest;
			}
		}

		Room 6;
		{
			Pos=22,54;
			Size=7,5;
			AltarPossible=false;
			WallSquare=solidterrain(GRASS_TERRAIN),wall(BRICK_FINE);
			FloorSquare=solidterrain(PARQUET),empty;
			GenerateDoor=false;
			ReCalculate=false;
			DivineMaster=sophos;
			Type=library;
			
			Square, Pos 3, 4;
			{
				GTerrain = solidterrain(PARQUET);
				OTerrain = door;
			}


			Square, Pos 3, 2;
			{
				Character = librarian;
			}

			ItemMap
			{
				Pos=1,1;
				Size=5,3;

				Types
				{
					r = Random { MaxPrice = 500; Category = SCROLL|BOOK; }
				}
			}
			{
			    rrrrr
			    r...r
			    r...r
			}

			OTerrainMap
			{
				Pos=1,1;
				Size=5,3;
				Types
				{
					= = container(BOOK_CASE);
				}
			}
			{
				=====
				=...=
				=...=
			}
		}

		Room 7;
		{
			FloorSquare=solidterrain(FLOOR),empty;
			WallSquare=solidterrain(GRASS_TERRAIN), WOOD wall(BRICK_FINE);
			DoorSquare=solidterrain(FLOOR), door;
		}

		Room 8;
		{
			FloorSquare=solidterrain(FLOOR),empty;
			WallSquare=solidterrain(GRASS_TERRAIN), WOOD wall(BRICK_FINE);
			DoorSquare=solidterrain(FLOOR), door;
		}

		Room 9;
		{
			FloorSquare=solidterrain(FLOOR),empty;
			WallSquare=solidterrain(GRASS_TERRAIN), WOOD wall(BRICK_FINE);
			DoorSquare=solidterrain(FLOOR), door;
		}
	}
}

Dungeon NEW_ATTNAM;
{
	Levels = 1;
	Level 0;
	{
		Description="New Attnam";
		FillSquare=solidterrain(GRASS_TERRAIN),empty;

		Variable XSize = 50;
		Variable YSize = 50;

		Size=XSize, YSize;
		GenerateMonsters=false;
		Rooms= 5 + rand % 3;
		Items=0;
		ReCalculate=false;
		OnGround=true;
		TeamDefault=2;
		AmbientLight=rgb24(120, 120, 120);
		LOSModifier=48;
		IgnoreDefaultSpecialSquares = false;

		RoomDefault
		{
			Pos=2+rand%(XSize-6),2+rand%(YSize-6);
			Size=4+rand%3,4+rand%3;
			AltarPossible=false;
			WallSquare=solidterrain(GRASS_TERRAIN),WOOD wall(BRICK_FINE);
			FloorSquare=solidterrain(FLOOR),empty;
			DoorSquare=solidterrain(FLOOR), door;
			GenerateDoor=true;
			ReCalculate=true;
			DivineMaster=0;
			GenerateTunnel=false;
			GenerateLanterns=false;
			Type=normalroom;
			GenerateFountains=false;
			AllowLockedDoors=false;
			AllowBoobyTrappedDoors=false;
			Shape = ROUND_CORNERS;
		}
		Room 0;
		{
			Pos=10,10;
			Size=20,20;
			AltarPossible=false;
			WallSquare=solidterrain(FLOOR),STONE wall(BRICK_FINE);
			FloorSquare=solidterrain(FLOOR),empty;
			GenerateDoor=true;
			ReCalculate=false;
			DivineMaster=silva;
			GenerateLanterns=false;
			OTerrainMap
			{
				Pos=2,2;
				Size=16,16;
				Types
				{
					# = GOLD wall(BRICK_FINE);
				}
			}
			{
				................
				................
				..############..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#####.######..
				................
				................
			}
			CharacterMap
			{
				Pos=2,2;
				Size=16,16;
				Types
				{
					# = 0;
					I = imperialist;
				}
			}
			{
				................
				................
				..############..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#....I.....#..
				..#..........#..
				..#..........#..
				..#..........#..
				..#..........#..
				..############..
				................
				................
			}
			GTerrainMap
			{
				Pos=2,2;
				Size=16,16;
				Types
				{
					# = 0;
					_ = GOLD solidterrain(FLOOR);
				}
			}
			{
				................
				................
				..############..
				..#__________#..
				..#__________#..
				..#__________#..
				..#__________#..
				..#__________#..
				..#__________#..
				..#__________#..
				..#__________#..
				..#__________#..
				..#__________#..
				..############..
				................
				................				
			}
		}
		Square, Random NOT_IN_ROOM;
		{
			EntryIndex = STAIRS_UP;
		}
		Square, Random NOT_IN_ROOM;
		{
			OTerrain=boulder;
			Times=50;
		}
		Square, Random NOT_IN_ROOM;
		{
			OTerrain=decoration(PALM);
			Times = 100;
		}
		Square, Random NOT_IN_ROOM;
		{
			Character=bananagrower;
			Times=40;
		}
	}
}

Dungeon UNDER_WATER_TUNNEL;
{
	Levels=3;

	LevelDefault
	{
		FillSquare=solidterrain(GROUND),wall(EARTH);

		Variable XSize = 80;
		Variable YSize = 20;

		Size=XSize, YSize;
		Rooms=5+rand%6;
		Items=15+rand%16;
		GenerateMonsters=true;
		ReCalculate=true;
		OnGround=false;
		TeamDefault=1;
		AmbientLight=0;
		LOSModifier=16;
		IgnoreDefaultSpecialSquares = false;

		Square, Random;
		{
			Item = beartrap { Team = MONSTER_TEAM; Active = true; }
			Times = rand%2;
		}

		RoomDefault
		{
			Pos=2+rand%(XSize-6),2+rand%(YSize-6);
			Size=4+rand%8,4+rand%8;
			AltarPossible=false;
			WallSquare=solidterrain(GROUND),wall(BRICK_OLD);
			FloorSquare=solidterrain(PARQUET),empty;
			DoorSquare=solidterrain(PARQUET),door;
			GenerateDoor=true;
			ReCalculate=true;
                        DivineMaster=0;
                        GenerateTunnel=true;
			GenerateLanterns=true;
			Type=normalroom;
			GenerateFountains=true;
			AllowLockedDoors=false;
			AllowBoobyTrappedDoors=false;
			Shape = 1 + rand%2;
		}
	}

	Level 0;
	{
		IgnoreDefaultSpecialSquares = true;

		RoomDefault
		{
			AltarPossible=false;
		}

		Square, Random;
		{
			Character=spider;
			Times=20;
		}

		Square, Random;
		{
			Character=kobold;
			Times=10;
		}

		Square, BoundedRandom 61, 1, 79, 19, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_DOWN);
			EntryIndex = STAIRS_DOWN;
			AttachRequired = true;
		}

		Room 0;
		{
			Size=5,5;
			AllowLockedDoors=false;
			AllowBoobyTrappedDoors=false;
			Shape = ROUND_CORNERS;

			Square, Pos 2,2;
			{
				OTerrain = link(STAIRS_UP);
				EntryIndex = STAIRS_UP;
			}

			Square, Pos 2,1;
			{
				Item=lantern;
				/*Character=mistress(QUEEN);*/
			}
		}
	}

	Level 1;
	{
		Square, BoundedRandom 1, 1, 19, 19, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP);
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}

		Square, BoundedRandom 61, 1, 79, 19, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP) { AttachedArea = 2; }
			EntryIndex = STAIRS_UP + 1;
			AttachRequired = true;
		}
	}

	Level 2;
	{
		Square, BoundedRandom 1, 1, 19, 19, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_DOWN) { AttachedArea = 1; AttachedEntry = STAIRS_UP + 1; }
			EntryIndex = STAIRS_DOWN;
			AttachRequired = true;
		}

		Square, BoundedRandom 61, 1, 79, 19, NOT_WALKABLE|ATTACHABLE;
		{
			OTerrain = link(STAIRS_UP) { AttachedArea = WORLD_MAP; AttachedEntry = UNDER_WATER_TUNNEL_EXIT; }
			EntryIndex = STAIRS_UP;
			AttachRequired = true;
		}
	}
}
